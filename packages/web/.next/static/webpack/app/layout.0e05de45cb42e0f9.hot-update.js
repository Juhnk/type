"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/store/useSettingsStore.ts":
/*!***************************************!*\
  !*** ./src/store/useSettingsStore.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSettingsStore: () => (/* binding */ useSettingsStore),\n/* harmony export */   useTheme: () => (/* binding */ useTheme)\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/../../node_modules/zustand/esm/react.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/../../node_modules/zustand/esm/middleware.mjs\");\n\n\nconst defaultSettings = {\n    appearance: {\n        theme: 'slate',\n        font: 'Roboto Mono',\n        fontSize: 18,\n        caretStyle: 'line',\n        caretColor: '#3b82f6',\n        colorScheme: 'auto',\n        animations: true,\n        smoothCaret: true,\n        showWpmCounter: true,\n        showAccuracyCounter: true\n    },\n    behavior: {\n        soundEffects: false,\n        keyFeedback: false,\n        defaultMode: 'time',\n        defaultDifficulty: 'Normal',\n        defaultDuration: 60,\n        defaultWordCount: 50,\n        paceCaretWpm: 0,\n        paceCaretEnabled: false,\n        autoSave: true,\n        focusMode: false,\n        quickRestart: true,\n        blindMode: false\n    }\n};\nconst useSettingsStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_1__.persist)((set, get)=>({\n        settings: defaultSettings,\n        isLoading: false,\n        // Appearance actions\n        updateTheme: (theme)=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        appearance: {\n                            ...state.settings.appearance,\n                            theme\n                        }\n                    }\n                })),\n        updateFont: (font)=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        appearance: {\n                            ...state.settings.appearance,\n                            font\n                        }\n                    }\n                })),\n        updateFontSize: (fontSize)=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        appearance: {\n                            ...state.settings.appearance,\n                            fontSize\n                        }\n                    }\n                })),\n        updateCaretStyle: (caretStyle)=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        appearance: {\n                            ...state.settings.appearance,\n                            caretStyle\n                        }\n                    }\n                })),\n        updateCaretColor: (caretColor)=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        appearance: {\n                            ...state.settings.appearance,\n                            caretColor\n                        }\n                    }\n                })),\n        updateColorScheme: (colorScheme)=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        appearance: {\n                            ...state.settings.appearance,\n                            colorScheme\n                        }\n                    }\n                })),\n        toggleAnimations: ()=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        appearance: {\n                            ...state.settings.appearance,\n                            animations: !state.settings.appearance.animations\n                        }\n                    }\n                })),\n        toggleSmoothCaret: ()=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        appearance: {\n                            ...state.settings.appearance,\n                            smoothCaret: !state.settings.appearance.smoothCaret\n                        }\n                    }\n                })),\n        toggleWpmCounter: ()=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        appearance: {\n                            ...state.settings.appearance,\n                            showWpmCounter: !state.settings.appearance.showWpmCounter\n                        }\n                    }\n                })),\n        toggleAccuracyCounter: ()=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        appearance: {\n                            ...state.settings.appearance,\n                            showAccuracyCounter: !state.settings.appearance.showAccuracyCounter\n                        }\n                    }\n                })),\n        // Behavior actions\n        toggleSoundEffects: ()=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        behavior: {\n                            ...state.settings.behavior,\n                            soundEffects: !state.settings.behavior.soundEffects\n                        }\n                    }\n                })),\n        toggleKeyFeedback: ()=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        behavior: {\n                            ...state.settings.behavior,\n                            keyFeedback: !state.settings.behavior.keyFeedback\n                        }\n                    }\n                })),\n        updateDefaultMode: (defaultMode)=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        behavior: {\n                            ...state.settings.behavior,\n                            defaultMode\n                        }\n                    }\n                })),\n        updateDefaultDifficulty: (defaultDifficulty)=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        behavior: {\n                            ...state.settings.behavior,\n                            defaultDifficulty\n                        }\n                    }\n                })),\n        updateDefaultDuration: (defaultDuration)=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        behavior: {\n                            ...state.settings.behavior,\n                            defaultDuration\n                        }\n                    }\n                })),\n        updateDefaultWordCount: (defaultWordCount)=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        behavior: {\n                            ...state.settings.behavior,\n                            defaultWordCount\n                        }\n                    }\n                })),\n        updatePaceCaretWpm: (paceCaretWpm)=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        behavior: {\n                            ...state.settings.behavior,\n                            paceCaretWpm\n                        }\n                    }\n                })),\n        togglePaceCaret: ()=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        behavior: {\n                            ...state.settings.behavior,\n                            paceCaretEnabled: !state.settings.behavior.paceCaretEnabled\n                        }\n                    }\n                })),\n        toggleAutoSave: ()=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        behavior: {\n                            ...state.settings.behavior,\n                            autoSave: !state.settings.behavior.autoSave\n                        }\n                    }\n                })),\n        toggleFocusMode: ()=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        behavior: {\n                            ...state.settings.behavior,\n                            focusMode: !state.settings.behavior.focusMode\n                        }\n                    }\n                })),\n        toggleQuickRestart: ()=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        behavior: {\n                            ...state.settings.behavior,\n                            quickRestart: !state.settings.behavior.quickRestart\n                        }\n                    }\n                })),\n        toggleBlindMode: ()=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        behavior: {\n                            ...state.settings.behavior,\n                            blindMode: !state.settings.behavior.blindMode\n                        }\n                    }\n                })),\n        // Bulk actions\n        updateAppearanceSettings: (appearance)=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        appearance: {\n                            ...state.settings.appearance,\n                            ...appearance\n                        }\n                    }\n                })),\n        updateBehaviorSettings: (behavior)=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        behavior: {\n                            ...state.settings.behavior,\n                            ...behavior\n                        }\n                    }\n                })),\n        resetToDefaults: ()=>set({\n                settings: defaultSettings\n            }),\n        importSettings: (settings)=>set({\n                settings\n            }),\n        exportSettings: ()=>get().settings,\n        // Server persistence\n        saveToServer: async ()=>{\n            try {\n                set({\n                    isLoading: true\n                });\n                const { settings } = get();\n                const token = localStorage.getItem('token');\n                if (!token) {\n                    throw new Error('No authentication token found');\n                }\n                // Import API client dynamically to avoid circular dependencies\n                const { updateSettings } = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_src_lib_api-client_ts\").then(__webpack_require__.bind(__webpack_require__, /*! @/lib/api-client */ \"(app-pages-browser)/./src/lib/api-client.ts\"));\n                // Map settings to API format\n                const apiSettings = {\n                    // Appearance settings\n                    theme: settings.appearance.theme,\n                    font: settings.appearance.font,\n                    fontSize: settings.appearance.fontSize,\n                    caretStyle: settings.appearance.caretStyle,\n                    caretColor: settings.appearance.caretColor,\n                    colorScheme: settings.appearance.colorScheme,\n                    animations: settings.appearance.animations,\n                    smoothCaret: settings.appearance.smoothCaret,\n                    showWpmCounter: settings.appearance.showWpmCounter,\n                    showAccuracyCounter: settings.appearance.showAccuracyCounter,\n                    // Behavior settings\n                    soundEffects: settings.behavior.soundEffects,\n                    keyFeedback: settings.behavior.keyFeedback,\n                    defaultMode: settings.behavior.defaultMode,\n                    defaultDifficulty: settings.behavior.defaultDifficulty,\n                    defaultDuration: settings.behavior.defaultDuration,\n                    defaultWordCount: settings.behavior.defaultWordCount,\n                    paceCaretWpm: settings.behavior.paceCaretWpm,\n                    paceCaretEnabled: settings.behavior.paceCaretEnabled,\n                    autoSave: settings.behavior.autoSave,\n                    focusMode: settings.behavior.focusMode,\n                    quickRestart: settings.behavior.quickRestart,\n                    blindMode: settings.behavior.blindMode\n                };\n                await updateSettings(apiSettings, token);\n            } catch (error) {\n                console.error('Failed to save settings to server:', error);\n                throw error;\n            } finally{\n                set({\n                    isLoading: false\n                });\n            }\n        },\n        loadFromServer: async ()=>{\n            try {\n                set({\n                    isLoading: true\n                });\n                const token = localStorage.getItem('token');\n                if (!token) {\n                    throw new Error('No authentication token found');\n                }\n                // Import API client dynamically to avoid circular dependencies\n                const { getSettings } = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_src_lib_api-client_ts\").then(__webpack_require__.bind(__webpack_require__, /*! @/lib/api-client */ \"(app-pages-browser)/./src/lib/api-client.ts\"));\n                const serverSettings = await getSettings(token);\n                // Map server settings to local format\n                set((state)=>{\n                    var _serverSettings_animations, _serverSettings_smoothCaret, _serverSettings_showWpmCounter, _serverSettings_showAccuracyCounter, _serverSettings_soundEffects, _serverSettings_keyFeedback, _serverSettings_paceCaretEnabled, _serverSettings_autoSave, _serverSettings_focusMode, _serverSettings_quickRestart, _serverSettings_blindMode;\n                    return {\n                        settings: {\n                            appearance: {\n                                ...state.settings.appearance,\n                                theme: serverSettings.theme || state.settings.appearance.theme,\n                                font: serverSettings.font || state.settings.appearance.font,\n                                fontSize: serverSettings.fontSize || state.settings.appearance.fontSize,\n                                caretStyle: serverSettings.caretStyle || state.settings.appearance.caretStyle,\n                                caretColor: serverSettings.caretColor || state.settings.appearance.caretColor,\n                                colorScheme: serverSettings.colorScheme || state.settings.appearance.colorScheme,\n                                animations: (_serverSettings_animations = serverSettings.animations) !== null && _serverSettings_animations !== void 0 ? _serverSettings_animations : state.settings.appearance.animations,\n                                smoothCaret: (_serverSettings_smoothCaret = serverSettings.smoothCaret) !== null && _serverSettings_smoothCaret !== void 0 ? _serverSettings_smoothCaret : state.settings.appearance.smoothCaret,\n                                showWpmCounter: (_serverSettings_showWpmCounter = serverSettings.showWpmCounter) !== null && _serverSettings_showWpmCounter !== void 0 ? _serverSettings_showWpmCounter : state.settings.appearance.showWpmCounter,\n                                showAccuracyCounter: (_serverSettings_showAccuracyCounter = serverSettings.showAccuracyCounter) !== null && _serverSettings_showAccuracyCounter !== void 0 ? _serverSettings_showAccuracyCounter : state.settings.appearance.showAccuracyCounter\n                            },\n                            behavior: {\n                                ...state.settings.behavior,\n                                soundEffects: (_serverSettings_soundEffects = serverSettings.soundEffects) !== null && _serverSettings_soundEffects !== void 0 ? _serverSettings_soundEffects : state.settings.behavior.soundEffects,\n                                keyFeedback: (_serverSettings_keyFeedback = serverSettings.keyFeedback) !== null && _serverSettings_keyFeedback !== void 0 ? _serverSettings_keyFeedback : state.settings.behavior.keyFeedback,\n                                defaultMode: serverSettings.defaultMode || state.settings.behavior.defaultMode,\n                                defaultDifficulty: serverSettings.defaultDifficulty || state.settings.behavior.defaultDifficulty,\n                                defaultDuration: serverSettings.defaultDuration || state.settings.behavior.defaultDuration,\n                                defaultWordCount: serverSettings.defaultWordCount || state.settings.behavior.defaultWordCount,\n                                paceCaretWpm: serverSettings.paceCaretWpm || state.settings.behavior.paceCaretWpm,\n                                paceCaretEnabled: (_serverSettings_paceCaretEnabled = serverSettings.paceCaretEnabled) !== null && _serverSettings_paceCaretEnabled !== void 0 ? _serverSettings_paceCaretEnabled : state.settings.behavior.paceCaretEnabled,\n                                autoSave: (_serverSettings_autoSave = serverSettings.autoSave) !== null && _serverSettings_autoSave !== void 0 ? _serverSettings_autoSave : state.settings.behavior.autoSave,\n                                focusMode: (_serverSettings_focusMode = serverSettings.focusMode) !== null && _serverSettings_focusMode !== void 0 ? _serverSettings_focusMode : state.settings.behavior.focusMode,\n                                quickRestart: (_serverSettings_quickRestart = serverSettings.quickRestart) !== null && _serverSettings_quickRestart !== void 0 ? _serverSettings_quickRestart : state.settings.behavior.quickRestart,\n                                blindMode: (_serverSettings_blindMode = serverSettings.blindMode) !== null && _serverSettings_blindMode !== void 0 ? _serverSettings_blindMode : state.settings.behavior.blindMode\n                            }\n                        }\n                    };\n                });\n            } catch (error) {\n                console.error('Failed to load settings from server:', error);\n                throw error;\n            } finally{\n                set({\n                    isLoading: false\n                });\n            }\n        }\n    }), {\n    name: 'typeamp-settings',\n    partialize: (state)=>({\n            settings: state.settings\n        })\n}));\n// Helper hook for theme\nconst useTheme = ()=>{\n    const { theme, colorScheme } = useSettingsStore({\n        \"useTheme.useSettingsStore\": (state)=>state.settings.appearance\n    }[\"useTheme.useSettingsStore\"]);\n    // Determine actual theme based on color scheme preference\n    const actualTheme = colorScheme === 'auto' ? window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light' : colorScheme;\n    return {\n        theme,\n        colorScheme: actualTheme\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/store/useSettingsStore.ts\n"));

/***/ })

});