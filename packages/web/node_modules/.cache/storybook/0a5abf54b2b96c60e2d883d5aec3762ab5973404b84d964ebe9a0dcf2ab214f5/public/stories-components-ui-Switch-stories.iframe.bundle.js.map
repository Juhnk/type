{"version":3,"file":"stories-components-ui-Switch-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AAEA;AAEA;AAIA;AAEA;AACA;AAIA;AAEA;AACA;AACA;;;;;;;;;;;AAMA;AArBA;AAuBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AAeA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;AACA;AACA;AACA;AACA;;;;;;;;;;;AAKA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;AAGA;AAAA;AAAA;;;;;;;;;;AAIA;AAAA;;;;;;;;;;;AAGA;AAEA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;;;;;AAEA;AAAA;;;;;AAEA;AACA;AACA;AACA;;;;;AAEA;AACA;AACA;AACA;;;;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AAEA;AACA;AACA;AACA;;;;;AAEA;AAAA;;;;;AAEA;AAAA;AAAA;AAAA;;;;;AACA;AACA;AACA;AACA;;;;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AACA;AACA;AACA;;;;;;;;;;;AAKA;AAEA;AACA;;AACA;AAEA;AACA;AACA;AACA;;;;;AAEA;AAAA;;;;;AAEA;AACA;AACA;AACA;;;;;AAEA;AACA;AACA;AACA;;;;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;;;;;AAGA;AAAA;;;;;;;;;;AAGA;AAAA;AACA;AACA;AACA;AACA;;;;;AAGA;AAAA;AAAA;;;;;;;;;;AAGA;AAAA;AACA;AACA;AACA;AACA;;;;;AAGA;AAAA;AAAA;;;;;;;;;;AAGA;AAAA;AACA;AACA;AACA;AACA;;;;;AAGA;AAAA;AAAA;;;;;;;;;;AAGA;AAAA;AACA;AACA;AACA;AACA;;;;;AAGA;AAAA;;;;;;;;;;AAGA;AAAA;AACA;AACA;AACA;AACA;;;;;AAGA;AAAA;;;;;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;AAEA;AAAA;;;;;;;;;;AAGA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;AAEA;;;;;;;;;AAGA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;AAEA;AAAA;;;;;;;;;;;;;;;;;;;;;AAKA;AAEA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;;;;;AAEA;AAAA;;;;;AAEA;AAAA;AACA;;;;;AAEA;AACA;AACA;AACA;;;;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;AACA;AAAA;;;;;AACA;AAAA;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;AAEA;AAAA;AACA;;;;AACA;AAAA;AAAA;;;;;;;;;;AAEA;AAAA;AACA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://type/./src/components/ui/switch.tsx","webpack://type/./src/lib/utils.ts","webpack://type/./src/stories/components/ui/Switch.stories.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport * as SwitchPrimitive from '@radix-ui/react-switch';\n\nimport { cn } from '@/lib/utils';\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        'peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input dark:data-[state=unchecked]:bg-input/80 transition-base focus-ring disabled-state inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-sm',\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          'bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0'\n        )}\n      />\n    </SwitchPrimitive.Root>\n  );\n}\n\nexport { Switch };\n","import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","import type { Meta, StoryObj } from '@storybook/nextjs';\nimport { Switch } from '@/components/ui/switch';\nimport {\n  Volume2,\n  VolumeX,\n  Moon,\n  Sun,\n  Zap,\n  Eye,\n  EyeOff,\n  Bell,\n  BellOff,\n  WifiOff,\n  Wifi,\n  PlayCircle,\n  PauseCircle,\n} from 'lucide-react';\nimport React from 'react';\n\nconst meta = {\n  title: 'Components/UI/Switch',\n  component: Switch,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component:\n          'A toggle switch component built with Radix UI. Used for binary on/off settings.',\n      },\n    },\n  },\n  tags: ['ui', 'form', 'interactive', 'autodocs'],\n  argTypes: {\n    checked: {\n      control: 'boolean',\n      description: 'The controlled checked state of the switch',\n      table: {\n        type: { summary: 'boolean' },\n      },\n    },\n    defaultChecked: {\n      control: 'boolean',\n      description: 'The default checked state when uncontrolled',\n      table: {\n        type: { summary: 'boolean' },\n      },\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Whether the switch is disabled',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n    required: {\n      control: 'boolean',\n      description: 'Whether the switch is required',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n  },\n} satisfies Meta<typeof Switch>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n// Basic examples\nexport const Default: Story = {\n  args: {},\n};\n\nexport const Checked: Story = {\n  args: {\n    defaultChecked: true,\n  },\n};\n\nexport const Disabled: Story = {\n  args: {\n    disabled: true,\n  },\n};\n\nexport const DisabledChecked: Story = {\n  args: {\n    disabled: true,\n    defaultChecked: true,\n  },\n};\n\n// With labels\nexport const WithLabel: Story = {\n  render: () => (\n    <div className=\"flex items-center space-x-2\">\n      <Switch id=\"airplane-mode\" />\n      <label\n        htmlFor=\"airplane-mode\"\n        className=\"cursor-pointer text-sm font-medium\"\n      >\n        Airplane Mode\n      </label>\n    </div>\n  ),\n};\n\nexport const WithLabelAndDescription: Story = {\n  render: () => (\n    <div className=\"flex items-center justify-between space-x-4 rounded-lg border p-4\">\n      <div className=\"space-y-0.5\">\n        <label\n          htmlFor=\"marketing\"\n          className=\"cursor-pointer text-sm font-medium\"\n        >\n          Marketing emails\n        </label>\n        <p className=\"text-muted-foreground text-sm\">\n          Receive emails about new products, features, and more.\n        </p>\n      </div>\n      <Switch id=\"marketing\" />\n    </div>\n  ),\n};\n\n// TypeAmp settings switches\nexport const SoundEffects: Story = {\n  render: () => {\n    const [enabled, setEnabled] = React.useState(false);\n\n    return (\n      <div className=\"flex items-center space-x-2\">\n        {enabled ? (\n          <Volume2 className=\"text-muted-foreground h-4 w-4\" />\n        ) : (\n          <VolumeX className=\"text-muted-foreground h-4 w-4\" />\n        )}\n        <Switch\n          id=\"sound-effects\"\n          checked={enabled}\n          onCheckedChange={setEnabled}\n        />\n        <label\n          htmlFor=\"sound-effects\"\n          className=\"cursor-pointer text-sm font-medium\"\n        >\n          Sound Effects\n        </label>\n      </div>\n    );\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Toggle sound effects with dynamic icon',\n      },\n    },\n  },\n};\n\nexport const DarkModeToggle: Story = {\n  render: () => {\n    const [isDark, setIsDark] = React.useState(false);\n\n    return (\n      <div className=\"flex items-center space-x-2\">\n        {isDark ? (\n          <Moon className=\"text-muted-foreground h-4 w-4\" />\n        ) : (\n          <Sun className=\"text-muted-foreground h-4 w-4\" />\n        )}\n        <Switch id=\"dark-mode\" checked={isDark} onCheckedChange={setIsDark} />\n        <label\n          htmlFor=\"dark-mode\"\n          className=\"cursor-pointer text-sm font-medium\"\n        >\n          Dark Mode\n        </label>\n      </div>\n    );\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Dark mode toggle with sun/moon icons',\n      },\n    },\n  },\n};\n\nexport const AnimationsToggle: Story = {\n  render: () => (\n    <div className=\"flex items-center space-x-2\">\n      <Zap className=\"text-muted-foreground h-4 w-4\" />\n      <Switch id=\"animations\" defaultChecked />\n      <label\n        htmlFor=\"animations\"\n        className=\"cursor-pointer text-sm font-medium\"\n      >\n        Smooth Animations\n      </label>\n    </div>\n  ),\n};\n\nexport const BlindModeToggle: Story = {\n  render: () => {\n    const [enabled, setEnabled] = React.useState(false);\n\n    return (\n      <div className=\"flex items-center space-x-2\">\n        {enabled ? (\n          <EyeOff className=\"text-muted-foreground h-4 w-4\" />\n        ) : (\n          <Eye className=\"text-muted-foreground h-4 w-4\" />\n        )}\n        <Switch\n          id=\"blind-mode\"\n          checked={enabled}\n          onCheckedChange={setEnabled}\n        />\n        <label\n          htmlFor=\"blind-mode\"\n          className=\"cursor-pointer text-sm font-medium\"\n        >\n          Blind Mode\n        </label>\n      </div>\n    );\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Toggle blind mode for advanced practice',\n      },\n    },\n  },\n};\n\n// Settings form\nexport const SettingsForm: Story = {\n  render: () => (\n    <div className=\"w-80 space-y-4\">\n      <h3 className=\"text-lg font-semibold\">Behavior Settings</h3>\n\n      <div className=\"space-y-3\">\n        <div className=\"flex items-center justify-between\">\n          <label htmlFor=\"sound\" className=\"cursor-pointer text-sm font-medium\">\n            Sound Effects\n          </label>\n          <Switch id=\"sound\" />\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <label\n            htmlFor=\"animations\"\n            className=\"cursor-pointer text-sm font-medium\"\n          >\n            Animations\n          </label>\n          <Switch id=\"animations\" defaultChecked />\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <label\n            htmlFor=\"auto-save\"\n            className=\"cursor-pointer text-sm font-medium\"\n          >\n            Auto Save\n          </label>\n          <Switch id=\"auto-save\" defaultChecked />\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <label\n            htmlFor=\"quick-restart\"\n            className=\"cursor-pointer text-sm font-medium\"\n          >\n            Quick Restart\n          </label>\n          <Switch id=\"quick-restart\" defaultChecked />\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <label\n            htmlFor=\"focus-mode\"\n            className=\"cursor-pointer text-sm font-medium\"\n          >\n            Focus Mode\n          </label>\n          <Switch id=\"focus-mode\" />\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <label\n            htmlFor=\"blind-mode\"\n            className=\"cursor-pointer text-sm font-medium\"\n          >\n            Blind Mode\n          </label>\n          <Switch id=\"blind-mode\" />\n        </div>\n      </div>\n    </div>\n  ),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Complete settings form with multiple switches',\n      },\n    },\n  },\n};\n\n// Notification preferences\nexport const NotificationPreferences: Story = {\n  render: () => (\n    <div className=\"space-y-3 rounded-lg border p-4\">\n      <h4 className=\"text-sm font-semibold\">Notifications</h4>\n\n      <div className=\"space-y-2\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <Bell className=\"text-muted-foreground h-4 w-4\" />\n            <span className=\"text-sm\">New Records</span>\n          </div>\n          <Switch defaultChecked />\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <Bell className=\"text-muted-foreground h-4 w-4\" />\n            <span className=\"text-sm\">Daily Reminders</span>\n          </div>\n          <Switch />\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <Bell className=\"text-muted-foreground h-4 w-4\" />\n            <span className=\"text-sm\">Weekly Reports</span>\n          </div>\n          <Switch defaultChecked />\n        </div>\n      </div>\n    </div>\n  ),\n};\n\n// Connection status\nexport const ConnectionStatus: Story = {\n  render: () => {\n    const [isOnline, setIsOnline] = React.useState(true);\n\n    return (\n      <div className=\"bg-muted/50 flex items-center space-x-2 rounded-lg p-3\">\n        {isOnline ? (\n          <Wifi className=\"h-4 w-4 text-green-600\" />\n        ) : (\n          <WifiOff className=\"h-4 w-4 text-red-600\" />\n        )}\n        <span className=\"text-sm font-medium\">\n          {isOnline ? 'Online' : 'Offline'}\n        </span>\n        <Switch\n          checked={isOnline}\n          onCheckedChange={setIsOnline}\n          className=\"ml-auto\"\n        />\n      </div>\n    );\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Connection status toggle with dynamic styling',\n      },\n    },\n  },\n};\n\n// Custom styled\nexport const CustomStyled: Story = {\n  render: () => (\n    <div className=\"space-y-3\">\n      <Switch className=\"data-[state=checked]:bg-green-500\" />\n      <Switch className=\"data-[state=checked]:bg-purple-500\" />\n      <Switch className=\"data-[state=checked]:bg-orange-500\" />\n    </div>\n  ),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Switches with custom colors',\n      },\n    },\n  },\n};\n\n// Dark mode\nexport const DarkMode: Story = {\n  args: {\n    defaultChecked: true,\n  },\n  globals: {\n    colorScheme: 'dark',\n  },\n};\n\n// Size variations\nexport const SizeVariations: Story = {\n  render: () => (\n    <div className=\"flex items-center space-x-4\">\n      <div className=\"flex flex-col items-center space-y-2\">\n        <Switch className=\"scale-75\" />\n        <span className=\"text-muted-foreground text-xs\">Small</span>\n      </div>\n      <div className=\"flex flex-col items-center space-y-2\">\n        <Switch />\n        <span className=\"text-muted-foreground text-xs\">Default</span>\n      </div>\n      <div className=\"flex flex-col items-center space-y-2\">\n        <Switch className=\"scale-125\" />\n        <span className=\"text-muted-foreground text-xs\">Large</span>\n      </div>\n    </div>\n  ),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Different switch sizes using scale',\n      },\n    },\n  },\n};\n"],"names":[],"sourceRoot":""}