{"version":3,"file":"stories-components-ui-Select-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AACA;AAEA;AAEA;AAGA;AAAA;AAAA;;;;;;AACA;AAJA;AAMA;AAGA;AAAA;AAAA;;;;;;AACA;AAJA;AAMA;AAGA;AAAA;AAAA;;;;;;AACA;AAJA;AAMA;AAQA;AAEA;AACA;AACA;AAIA;;AAEA;AACA;AAAA;AACA;AAAA;;;;;;;;;;;;;;;;;AAIA;AAxBA;AA0BA;AAMA;AAEA;AACA;AACA;AAMA;AACA;;AAEA;;;;;AACA;AACA;AAMA;;;;;;AAEA;;;;;;;;;;;;;;;;AAIA;AAjCA;AAmCA;AAIA;AAEA;AACA;AACA;;;;;;AAGA;AAXA;AAaA;AAKA;AAEA;AACA;AAIA;;AAEA;AAAA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;AAGA;AAAA;;;;;;;;;;;;AAGA;AAtBA;AAwBA;AAIA;AAEA;AACA;AACA;;;;;;AAGA;;AAEA;AAIA;AAEA;AACA;AAIA;AAEA;AAAA;;;;;;;;;;;AAGA;AAhBA;AAkBA;AAIA;AAEA;AACA;AAIA;AAEA;AAAA;;;;;;;;;;;AAGA;AAhBA;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7KA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAUA;AAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AAAA;;;;;;;;;;AAEA;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;AAEA;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;;;;;;;;;;AAEA;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;AAIA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAAA;;;;;;;;;;AAEA;AACA;AACA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;AAEA;;;;AACA;AACA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;AAKA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAAA;;;;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAAA;;;;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAAA;;;;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAAA;;;;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAAA;;;;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAAA;;;;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAAA;;;;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAAA;;;;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;AAEA;AACA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;AAEA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;AAGA;;;;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;AAEA;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;AAEA;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;;;;;;;;;;AAEA;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;AAIA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAAA;;;;;;;;;;AAEA;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;;;;;AAGA;AAAA;AACA;AAAA;AAAA;AACA;;;;;;;;;AAEA;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;;;;;AAGA;AAAA;AACA;AAAA;AAAA;AACA;;;;;;;;;AAEA;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;;;;;AAGA;AAAA;AACA;AAAA;AAAA;AACA;;;;;;;;;AAEA;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://type/./src/components/ui/select.tsx","webpack://type/./src/lib/utils.ts","webpack://type/./src/stories/components/ui/Select.stories.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport * as SelectPrimitive from '@radix-ui/react-select';\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from 'lucide-react';\n\nimport { cn } from '@/lib/utils';\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />;\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />;\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />;\n}\n\nfunction SelectTrigger({\n  className,\n  size = 'default',\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: 'sm' | 'default';\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 transition-base focus-ring disabled-state data-[size=default]:h-input data-[size=sm]:h-input-sm flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-sm *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  );\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = 'popper',\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md',\n          position === 'popper' &&\n            'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            'p-1',\n            position === 'popper' &&\n              'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1'\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  );\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn('text-muted-foreground px-2 py-1.5 text-xs', className)}\n      {...props}\n    />\n  );\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  );\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn('bg-border pointer-events-none -mx-1 my-1 h-px', className)}\n      {...props}\n    />\n  );\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        'flex cursor-default items-center justify-center py-1',\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  );\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        'flex cursor-default items-center justify-center py-1',\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  );\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n};\n","import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","import type { Meta, StoryObj } from '@storybook/react';\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Globe,\n  Monitor,\n  Moon,\n  Sun,\n  Zap,\n  Clock,\n  Target,\n  Keyboard,\n} from 'lucide-react';\nimport React from 'react';\n\nconst meta = {\n  title: 'Components/UI/Select',\n  component: Select,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component:\n          'A dropdown select component built with Radix UI. Provides keyboard navigation and accessibility features.',\n      },\n    },\n  },\n  tags: ['ui', 'form', 'interactive', 'autodocs'],\n} satisfies Meta<typeof Select>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n// Basic example\nexport const Default: Story = {\n  render: () => (\n    <Select>\n      <SelectTrigger className=\"w-[180px]\">\n        <SelectValue placeholder=\"Select an option\" />\n      </SelectTrigger>\n      <SelectContent>\n        <SelectItem value=\"option1\">Option 1</SelectItem>\n        <SelectItem value=\"option2\">Option 2</SelectItem>\n        <SelectItem value=\"option3\">Option 3</SelectItem>\n      </SelectContent>\n    </Select>\n  ),\n};\n\n// With default value\nexport const WithDefaultValue: Story = {\n  render: () => (\n    <Select defaultValue=\"option2\">\n      <SelectTrigger className=\"w-[180px]\">\n        <SelectValue />\n      </SelectTrigger>\n      <SelectContent>\n        <SelectItem value=\"option1\">Option 1</SelectItem>\n        <SelectItem value=\"option2\">Option 2</SelectItem>\n        <SelectItem value=\"option3\">Option 3</SelectItem>\n      </SelectContent>\n    </Select>\n  ),\n};\n\n// Disabled state\nexport const Disabled: Story = {\n  render: () => (\n    <Select disabled>\n      <SelectTrigger className=\"w-[180px]\">\n        <SelectValue placeholder=\"Disabled select\" />\n      </SelectTrigger>\n      <SelectContent>\n        <SelectItem value=\"option1\">Option 1</SelectItem>\n        <SelectItem value=\"option2\">Option 2</SelectItem>\n      </SelectContent>\n    </Select>\n  ),\n};\n\n// With groups\nexport const WithGroups: Story = {\n  render: () => (\n    <Select>\n      <SelectTrigger className=\"w-[200px]\">\n        <SelectValue placeholder=\"Select a fruit\" />\n      </SelectTrigger>\n      <SelectContent>\n        <SelectGroup>\n          <SelectLabel>Fruits</SelectLabel>\n          <SelectItem value=\"apple\">Apple</SelectItem>\n          <SelectItem value=\"banana\">Banana</SelectItem>\n          <SelectItem value=\"orange\">Orange</SelectItem>\n        </SelectGroup>\n        <SelectSeparator />\n        <SelectGroup>\n          <SelectLabel>Vegetables</SelectLabel>\n          <SelectItem value=\"carrot\">Carrot</SelectItem>\n          <SelectItem value=\"broccoli\">Broccoli</SelectItem>\n          <SelectItem value=\"spinach\">Spinach</SelectItem>\n        </SelectGroup>\n      </SelectContent>\n    </Select>\n  ),\n};\n\n// Theme selector\nexport const ThemeSelector: Story = {\n  render: () => (\n    <Select defaultValue=\"slate\">\n      <SelectTrigger className=\"w-[180px]\">\n        <SelectValue />\n      </SelectTrigger>\n      <SelectContent>\n        <SelectItem value=\"slate\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"h-3 w-3 rounded-full bg-slate-500\" />\n            Slate\n          </div>\n        </SelectItem>\n        <SelectItem value=\"dark\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"h-3 w-3 rounded-full bg-gray-900\" />\n            Dark\n          </div>\n        </SelectItem>\n        <SelectItem value=\"nord\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"h-3 w-3 rounded-full bg-blue-600\" />\n            Nord\n          </div>\n        </SelectItem>\n        <SelectItem value=\"dracula\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"h-3 w-3 rounded-full bg-purple-600\" />\n            Dracula\n          </div>\n        </SelectItem>\n        <SelectItem value=\"monokai\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"h-3 w-3 rounded-full bg-yellow-600\" />\n            Monokai\n          </div>\n        </SelectItem>\n        <SelectItem value=\"ocean\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"h-3 w-3 rounded-full bg-teal-600\" />\n            Ocean\n          </div>\n        </SelectItem>\n      </SelectContent>\n    </Select>\n  ),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Theme selector for TypeAmp appearance settings',\n      },\n    },\n  },\n};\n\n// Game mode selector\nexport const GameModeSelector: Story = {\n  render: () => (\n    <Select defaultValue=\"time\">\n      <SelectTrigger className=\"w-[200px]\">\n        <SelectValue />\n      </SelectTrigger>\n      <SelectContent>\n        <SelectItem value=\"time\">\n          <div className=\"flex items-center gap-2\">\n            <Clock className=\"h-4 w-4\" />\n            Time Mode\n          </div>\n        </SelectItem>\n        <SelectItem value=\"words\">\n          <div className=\"flex items-center gap-2\">\n            <Target className=\"h-4 w-4\" />\n            Words Mode\n          </div>\n        </SelectItem>\n        <SelectItem value=\"quote\">\n          <div className=\"flex items-center gap-2\">\n            <Globe className=\"h-4 w-4\" />\n            Quote Mode\n          </div>\n        </SelectItem>\n        <SelectItem value=\"zen\">\n          <div className=\"flex items-center gap-2\">\n            <Zap className=\"h-4 w-4\" />\n            Zen Mode\n          </div>\n        </SelectItem>\n      </SelectContent>\n    </Select>\n  ),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Game mode selector with icons',\n      },\n    },\n  },\n};\n\n// Difficulty selector\nexport const DifficultySelector: Story = {\n  render: () => (\n    <Select defaultValue=\"normal\">\n      <SelectTrigger className=\"w-[180px]\">\n        <SelectValue />\n      </SelectTrigger>\n      <SelectContent>\n        <SelectItem value=\"easy\">\n          <span className=\"text-green-600\">Easy</span>\n        </SelectItem>\n        <SelectItem value=\"normal\">\n          <span className=\"text-blue-600\">Normal</span>\n        </SelectItem>\n        <SelectItem value=\"hard\">\n          <span className=\"text-orange-600\">Hard</span>\n        </SelectItem>\n        <SelectItem value=\"expert\">\n          <span className=\"text-red-600\">Expert</span>\n        </SelectItem>\n      </SelectContent>\n    </Select>\n  ),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Difficulty level selector with color-coded options',\n      },\n    },\n  },\n};\n\n// Font selector\nexport const FontSelector: Story = {\n  render: () => (\n    <Select defaultValue=\"roboto-mono\">\n      <SelectTrigger className=\"w-[200px]\">\n        <SelectValue />\n      </SelectTrigger>\n      <SelectContent>\n        <SelectGroup>\n          <SelectLabel>Monospace</SelectLabel>\n          <SelectItem value=\"roboto-mono\">\n            <span style={{ fontFamily: 'Roboto Mono' }}>Roboto Mono</span>\n          </SelectItem>\n          <SelectItem value=\"jetbrains-mono\">\n            <span style={{ fontFamily: 'monospace' }}>JetBrains Mono</span>\n          </SelectItem>\n          <SelectItem value=\"fira-code\">\n            <span style={{ fontFamily: 'monospace' }}>Fira Code</span>\n          </SelectItem>\n        </SelectGroup>\n        <SelectSeparator />\n        <SelectGroup>\n          <SelectLabel>Sans Serif</SelectLabel>\n          <SelectItem value=\"inter\">\n            <span style={{ fontFamily: 'Inter' }}>Inter</span>\n          </SelectItem>\n          <SelectItem value=\"roboto\">\n            <span style={{ fontFamily: 'sans-serif' }}>Roboto</span>\n          </SelectItem>\n        </SelectGroup>\n      </SelectContent>\n    </Select>\n  ),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Font family selector with preview',\n      },\n    },\n  },\n};\n\n// Duration selector\nexport const DurationSelector: Story = {\n  render: () => (\n    <Select defaultValue=\"60\">\n      <SelectTrigger className=\"w-[180px]\">\n        <SelectValue />\n      </SelectTrigger>\n      <SelectContent>\n        <SelectItem value=\"15\">15 seconds</SelectItem>\n        <SelectItem value=\"30\">30 seconds</SelectItem>\n        <SelectItem value=\"60\">1 minute</SelectItem>\n        <SelectItem value=\"120\">2 minutes</SelectItem>\n        <SelectItem value=\"300\">5 minutes</SelectItem>\n        <SelectItem value=\"600\">10 minutes</SelectItem>\n      </SelectContent>\n    </Select>\n  ),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Test duration selector',\n      },\n    },\n  },\n};\n\n// Language selector\nexport const LanguageSelector: Story = {\n  render: () => (\n    <Select defaultValue=\"english\">\n      <SelectTrigger className=\"w-[200px]\">\n        <SelectValue />\n      </SelectTrigger>\n      <SelectContent>\n        <SelectItem value=\"english\">🇺🇸 English</SelectItem>\n        <SelectItem value=\"spanish\">🇪🇸 Spanish</SelectItem>\n        <SelectItem value=\"french\">🇫🇷 French</SelectItem>\n        <SelectItem value=\"german\">🇩🇪 German</SelectItem>\n        <SelectItem value=\"italian\">🇮🇹 Italian</SelectItem>\n        <SelectItem value=\"portuguese\">🇵🇹 Portuguese</SelectItem>\n        <SelectItem value=\"russian\">🇷🇺 Russian</SelectItem>\n        <SelectItem value=\"japanese\">🇯🇵 Japanese</SelectItem>\n        <SelectItem value=\"korean\">🇰🇷 Korean</SelectItem>\n        <SelectItem value=\"chinese\">🇨🇳 Chinese</SelectItem>\n      </SelectContent>\n    </Select>\n  ),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Language selector with flag emojis',\n      },\n    },\n  },\n};\n\n// Small size\nexport const SmallSize: Story = {\n  render: () => (\n    <Select>\n      <SelectTrigger size=\"sm\" className=\"w-[140px]\">\n        <SelectValue placeholder=\"Small select\" />\n      </SelectTrigger>\n      <SelectContent>\n        <SelectItem value=\"option1\">Option 1</SelectItem>\n        <SelectItem value=\"option2\">Option 2</SelectItem>\n        <SelectItem value=\"option3\">Option 3</SelectItem>\n      </SelectContent>\n    </Select>\n  ),\n};\n\n// Dark mode\nexport const DarkMode: Story = {\n  render: () => (\n    <Select>\n      <SelectTrigger className=\"w-[180px]\">\n        <SelectValue placeholder=\"Select an option\" />\n      </SelectTrigger>\n      <SelectContent>\n        <SelectItem value=\"option1\">Option 1</SelectItem>\n        <SelectItem value=\"option2\">Option 2</SelectItem>\n        <SelectItem value=\"option3\">Option 3</SelectItem>\n      </SelectContent>\n    </Select>\n  ),\n  globals: {\n    colorScheme: 'dark',\n  },\n};\n\n// Form example\nexport const FormExample: Story = {\n  render: () => (\n    <form className=\"w-80 space-y-4\">\n      <div className=\"space-y-2\">\n        <label htmlFor=\"mode\" className=\"text-sm font-medium\">\n          Game Mode\n        </label>\n        <Select defaultValue=\"time\">\n          <SelectTrigger id=\"mode\" className=\"w-full\">\n            <SelectValue />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"time\">Time Mode</SelectItem>\n            <SelectItem value=\"words\">Words Mode</SelectItem>\n            <SelectItem value=\"quote\">Quote Mode</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n      <div className=\"space-y-2\">\n        <label htmlFor=\"difficulty\" className=\"text-sm font-medium\">\n          Difficulty\n        </label>\n        <Select defaultValue=\"normal\">\n          <SelectTrigger id=\"difficulty\" className=\"w-full\">\n            <SelectValue />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"easy\">Easy</SelectItem>\n            <SelectItem value=\"normal\">Normal</SelectItem>\n            <SelectItem value=\"hard\">Hard</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n      <div className=\"space-y-2\">\n        <label htmlFor=\"duration\" className=\"text-sm font-medium\">\n          Duration\n        </label>\n        <Select defaultValue=\"60\">\n          <SelectTrigger id=\"duration\" className=\"w-full\">\n            <SelectValue />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"30\">30 seconds</SelectItem>\n            <SelectItem value=\"60\">1 minute</SelectItem>\n            <SelectItem value=\"120\">2 minutes</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n    </form>\n  ),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Complete form example with multiple selects',\n      },\n    },\n  },\n};\n"],"names":[],"sourceRoot":""}