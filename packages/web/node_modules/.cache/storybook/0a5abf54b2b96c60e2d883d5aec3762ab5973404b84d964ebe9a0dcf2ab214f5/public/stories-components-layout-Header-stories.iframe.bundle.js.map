{"version":3,"file":"stories-components-layout-Header-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;AAKA;AAAA;;AACA;AACA;AACA;;AAEA;AAAA;;;;;;AACA;AAAA;;;;;;;;;;;;AAEA;AACA;AACA;;AAEA;AAAA;;;;;;AACA;AAAA;;;;;;;;;;;;AAEA;AACA;AACA;;AAEA;AAAA;;;;;;AACA;AAAA;;;;;;;;;;;;AAEA;AACA;AACA;;AAEA;AAAA;;;;;;AACA;AAAA;;;;;;;;;;;;;;;;;;AAIA;AACA;;AACA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;AAKA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAMA;;;AAvDA;AACA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAUA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAGA;AAnBA;AAqBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;AAGA;;;;;;;;;AAGA;AACA;AAAA;AAAA;;;;;AAGA;AAAA;AACA;;;;;;;;;;;;;;AAIA;AAAA;AACA;AAAA;AAAA;;;;;AAGA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;AAEA;AAAA;AACA;AAAA;AAAA;;;;;AAGA;AAAA;AAAA;AACA;AACA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;AAFA;;;;;;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://type/./src/components/layout/Header.tsx","webpack://type/./src/components/ui/button.tsx","webpack://type/./src/lib/utils.ts","webpack://type/./src/stories/components/layout/Header.stories.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { Home, User, BrainCircuit, Settings } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { useModalStore } from '@/store/useModalStore';\nimport { useAuthStore } from '@/store/useAuthStore';\n\nexport function Header() {\n  const { openAuthModal } = useModalStore();\n  const { user, logout } = useAuthStore();\n  return (\n    <header className=\"bg-background flex items-center justify-between border-b px-6 py-4\">\n      <div className=\"flex items-center gap-4\">\n        <Link href=\"/\" className=\"text-xl font-bold\">\n          TypeAmp\n        </Link>\n      </div>\n\n      <nav className=\"flex items-center gap-6\">\n        <Link\n          href=\"/\"\n          className=\"text-muted-foreground hover:text-foreground transition-base flex items-center gap-2\"\n        >\n          <Home className=\"h-4 w-4\" />\n          <span>Home</span>\n        </Link>\n        <Link\n          href=\"/profile\"\n          className=\"text-muted-foreground hover:text-foreground transition-base flex items-center gap-2\"\n        >\n          <User className=\"h-4 w-4\" />\n          <span>Profile</span>\n        </Link>\n        <Link\n          href=\"/learn\"\n          className=\"text-muted-foreground hover:text-foreground transition-base flex items-center gap-2\"\n        >\n          <BrainCircuit className=\"h-4 w-4\" />\n          <span>Learn</span>\n        </Link>\n        <Link\n          href=\"/customize\"\n          className=\"text-muted-foreground hover:text-foreground transition-base flex items-center gap-2\"\n        >\n          <Settings className=\"h-4 w-4\" />\n          <span>Customize</span>\n        </Link>\n      </nav>\n\n      {user ? (\n        <div className=\"flex items-center gap-4\">\n          <span className=\"text-muted-foreground text-sm\">{user.email}</span>\n          <Button variant=\"outline\" onClick={logout}>\n            Logout\n          </Button>\n        </div>\n      ) : (\n        <Button variant=\"outline\" onClick={openAuthModal}>\n          Login\n        </Button>\n      )}\n    </header>\n  );\n}\n","import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-base disabled-state [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 focus-ring aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          'bg-primary text-primary-foreground shadow-sm hover:opacity-95',\n        destructive:\n          'bg-destructive text-white shadow-sm hover:opacity-95 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60',\n        outline:\n          'border bg-background shadow-sm hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50',\n        secondary:\n          'bg-secondary text-secondary-foreground shadow-sm hover:opacity-95',\n        ghost:\n          'hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50',\n        link: 'text-primary underline-offset-4 hover:underline',\n      },\n      size: {\n        default: 'h-input px-4 py-2 has-[>svg]:px-3',\n        sm: 'h-input-sm rounded-md gap-1.5 px-3 has-[>svg]:px-2.5',\n        lg: 'h-input-lg rounded-md px-6 has-[>svg]:px-4',\n        icon: 'h-input w-input',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n);\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<'button'> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean;\n  }) {\n  const Comp = asChild ? Slot : 'button';\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  );\n}\n\nexport { Button, buttonVariants };\n","import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","import type { Meta, StoryObj } from '@storybook/nextjs';\nimport { Header } from '@/components/layout/Header';\n\nconst meta = {\n  title: 'Components/Layout/Header',\n  component: Header,\n  parameters: {\n    layout: 'fullscreen',\n    docs: {\n      description: {\n        component:\n          'Main navigation header for the TypeAmp application with authentication state management.',\n      },\n    },\n  },\n  tags: ['layout', 'navigation', 'autodocs'],\n} satisfies Meta<typeof Header>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n// Default state (not authenticated)\nexport const Default: Story = {\n  parameters: {\n    mockStore: {\n      auth: {\n        user: null,\n        token: null,\n      },\n    },\n  },\n};\n\n// Authenticated user\nexport const Authenticated: Story = {\n  parameters: {\n    mockStore: {\n      auth: {\n        user: {\n          id: '1',\n          username: 'speedtyper',\n          email: 'user@example.com',\n        },\n        token: 'mock-token',\n      },\n    },\n    docs: {\n      description: {\n        story: 'Header when user is logged in, showing email and logout button',\n      },\n    },\n  },\n};\n\n// Long email address\nexport const LongEmailAddress: Story = {\n  parameters: {\n    mockStore: {\n      auth: {\n        user: {\n          id: '1',\n          username: 'professional_speed_typer',\n          email: 'professional.speed.typer@example-company.com',\n        },\n        token: 'mock-token',\n      },\n    },\n    docs: {\n      description: {\n        story: 'Header with a long email address to test text overflow',\n      },\n    },\n  },\n};\n\n// Dark mode\nexport const DarkMode: Story = {\n  parameters: {\n    mockStore: {\n      auth: {\n        user: null,\n        token: null,\n      },\n    },\n  },\n  globals: {\n    colorScheme: 'dark',\n  },\n};\n\n// Dark mode authenticated\nexport const DarkModeAuthenticated: Story = {\n  parameters: {\n    mockStore: {\n      auth: {\n        user: {\n          id: '1',\n          username: 'nighttyper',\n          email: 'night@typer.com',\n        },\n        token: 'mock-token',\n      },\n    },\n  },\n  globals: {\n    colorScheme: 'dark',\n  },\n};\n\n// Different themes\nexport const NordTheme: Story = {\n  parameters: {\n    mockStore: {\n      auth: {\n        user: null,\n        token: null,\n      },\n    },\n  },\n  globals: {\n    theme: 'nord',\n  },\n};\n\nexport const DraculaTheme: Story = {\n  parameters: {\n    mockStore: {\n      auth: {\n        user: {\n          id: '1',\n          username: 'dracula_fan',\n          email: 'dracula@theme.com',\n        },\n        token: 'mock-token',\n      },\n    },\n  },\n  globals: {\n    theme: 'dracula',\n  },\n};\n\n// Mobile view\nexport const MobileView: Story = {\n  parameters: {\n    mockStore: {\n      auth: {\n        user: null,\n        token: null,\n      },\n    },\n    viewport: {\n      defaultViewport: 'mobile',\n    },\n    docs: {\n      description: {\n        story: 'Header responsive behavior on mobile devices',\n      },\n    },\n  },\n};\n\n// Tablet view\nexport const TabletView: Story = {\n  parameters: {\n    mockStore: {\n      auth: {\n        user: {\n          id: '1',\n          username: 'tabletuser',\n          email: 'tablet@user.com',\n        },\n        token: 'mock-token',\n      },\n    },\n    viewport: {\n      defaultViewport: 'tablet',\n    },\n    docs: {\n      description: {\n        story: 'Header responsive behavior on tablet devices',\n      },\n    },\n  },\n};\n\n// With hover states\nexport const HoverStates: Story = {\n  parameters: {\n    mockStore: {\n      auth: {\n        user: null,\n        token: null,\n      },\n    },\n    docs: {\n      description: {\n        story: 'Demonstrates hover states on navigation links',\n      },\n    },\n  },\n};\n\n// Interactive login flow\nexport const InteractiveLogin: Story = {\n  parameters: {\n    mockStore: {\n      auth: {\n        user: null,\n        token: null,\n      },\n    },\n    docs: {\n      description: {\n        story: 'Click the login button to simulate opening auth modal',\n      },\n    },\n  },\n};\n\n// Interactive logout flow\nexport const InteractiveLogout: Story = {\n  parameters: {\n    mockStore: {\n      auth: {\n        user: {\n          id: '1',\n          username: 'testuser',\n          email: 'test@user.com',\n        },\n        token: 'mock-token',\n      },\n    },\n    docs: {\n      description: {\n        story: 'Click the logout button to simulate logout action',\n      },\n    },\n  },\n};\n\n// Navigation showcase\nexport const NavigationShowcase: Story = {\n  render: () => (\n    <div className=\"space-y-8\">\n      <div>\n        <h3 className=\"text-muted-foreground mb-2 text-sm font-medium\">\n          Default State\n        </h3>\n        <Header />\n      </div>\n\n      <div>\n        <h3 className=\"text-muted-foreground mb-2 text-sm font-medium\">\n          Authenticated State\n        </h3>\n        <div className=\"[&_header]:rounded-lg [&_header]:border\">\n          <Header />\n        </div>\n      </div>\n\n      <div className=\"rounded-lg bg-slate-900 p-4\">\n        <h3 className=\"mb-2 text-sm font-medium text-slate-400\">\n          Dark Background\n        </h3>\n        <div className=\"[&_header]:rounded-lg\">\n          <Header />\n        </div>\n      </div>\n    </div>\n  ),\n  parameters: {\n    mockStore: {\n      auth: {\n        user: null,\n        token: null,\n      },\n    },\n    docs: {\n      description: {\n        story: 'Showcases the header in different contexts',\n      },\n    },\n  },\n};\n\n// Fixed position example\nexport const FixedPosition: Story = {\n  render: () => (\n    <div className=\"h-[600px] overflow-y-auto\">\n      <div className=\"sticky top-0 z-50\">\n        <Header />\n      </div>\n      <div className=\"space-y-4 p-8\">\n        <p className=\"text-muted-foreground\">\n          Scroll down to see the sticky header behavior...\n        </p>\n        {Array.from({ length: 20 }).map((_, i) => (\n          <div key={i} className=\"bg-muted rounded-lg p-4\">\n            <p>Content block {i + 1}</p>\n            <p className=\"text-muted-foreground text-sm\">\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n            </p>\n          </div>\n        ))}\n      </div>\n    </div>\n  ),\n  parameters: {\n    mockStore: {\n      auth: {\n        user: {\n          id: '1',\n          username: 'scrolluser',\n          email: 'scroll@test.com',\n        },\n        token: 'mock-token',\n      },\n    },\n    layout: 'padded',\n    docs: {\n      description: {\n        story: 'Header with sticky positioning for scrollable content',\n      },\n    },\n  },\n};\n"],"names":[],"sourceRoot":""}