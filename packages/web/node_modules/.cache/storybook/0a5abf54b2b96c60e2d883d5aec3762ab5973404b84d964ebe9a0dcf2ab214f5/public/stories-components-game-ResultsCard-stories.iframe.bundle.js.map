{"version":3,"file":"stories-components-game-ResultsCard-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://type/./src/stories/components/game/ResultsCard.stories.tsx"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/nextjs';\nimport { ResultsCard } from '@/components/game/ResultsCard';\n\nconst meta = {\n  title: 'Components/Game/ResultsCard',\n  component: ResultsCard,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component:\n          'Displays test results after completing a typing session, including WPM, accuracy, and detailed statistics.',\n      },\n    },\n  },\n  tags: ['game', 'results', 'autodocs'],\n} satisfies Meta<typeof ResultsCard>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n// Keep Practicing performance (< 40 WPM)\nexport const KeepPracticing: Story = {\n  parameters: {\n    mockStore: {\n      game: {\n        stats: {\n          wpm: 35,\n          rawWpm: 38,\n          accuracy: 85.5,\n          correctChars: 150,\n          incorrectChars: 26,\n          totalChars: 176,\n          elapsedTime: 60000,\n        },\n        testFailed: false,\n        failureReason: null,\n        testConfig: {\n          mode: 'time',\n          duration: 60,\n          difficulty: 'Normal',\n        },\n      },\n      auth: {\n        token: null,\n      },\n    },\n    docs: {\n      description: {\n        story: 'Beginner-level performance with room for improvement',\n      },\n    },\n  },\n};\n\n// Great Job performance (40-59 WPM)\nexport const GreatJob: Story = {\n  parameters: {\n    mockStore: {\n      game: {\n        stats: {\n          wpm: 52,\n          rawWpm: 55,\n          accuracy: 92.3,\n          correctChars: 260,\n          incorrectChars: 22,\n          totalChars: 282,\n          elapsedTime: 60000,\n        },\n        testFailed: false,\n        failureReason: null,\n        testConfig: {\n          mode: 'time',\n          duration: 60,\n          difficulty: 'Normal',\n        },\n      },\n      auth: {\n        token: null,\n      },\n    },\n    docs: {\n      description: {\n        story: 'Average typing performance',\n      },\n    },\n  },\n};\n\n// Excellent Typing performance (60-79 WPM)\nexport const ExcellentTyping: Story = {\n  parameters: {\n    mockStore: {\n      game: {\n        stats: {\n          wpm: 72,\n          rawWpm: 75,\n          accuracy: 96.8,\n          correctChars: 360,\n          incorrectChars: 12,\n          totalChars: 372,\n          elapsedTime: 60000,\n        },\n        testFailed: false,\n        failureReason: null,\n        testConfig: {\n          mode: 'time',\n          duration: 60,\n          difficulty: 'Normal',\n        },\n      },\n      auth: {\n        token: null,\n      },\n    },\n    docs: {\n      description: {\n        story: 'Above average typing performance',\n      },\n    },\n  },\n};\n\n// Outstanding Performance (80+ WPM)\nexport const OutstandingPerformance: Story = {\n  parameters: {\n    mockStore: {\n      game: {\n        stats: {\n          wpm: 95,\n          rawWpm: 98,\n          accuracy: 98.5,\n          correctChars: 475,\n          incorrectChars: 7,\n          totalChars: 482,\n          elapsedTime: 60000,\n        },\n        testFailed: false,\n        failureReason: null,\n        testConfig: {\n          mode: 'time',\n          duration: 60,\n          difficulty: 'Normal',\n        },\n      },\n      auth: {\n        token: null,\n      },\n    },\n    docs: {\n      description: {\n        story: 'Professional-level typing performance',\n      },\n    },\n  },\n};\n\n// Perfect accuracy\nexport const PerfectAccuracy: Story = {\n  parameters: {\n    mockStore: {\n      game: {\n        stats: {\n          wpm: 65,\n          rawWpm: 65,\n          accuracy: 100,\n          correctChars: 325,\n          incorrectChars: 0,\n          totalChars: 325,\n          elapsedTime: 60000,\n        },\n        testFailed: false,\n        failureReason: null,\n        testConfig: {\n          mode: 'time',\n          duration: 60,\n          difficulty: 'Normal',\n        },\n      },\n      auth: {\n        token: null,\n      },\n    },\n    docs: {\n      description: {\n        story: 'Perfect 100% accuracy result',\n      },\n    },\n  },\n};\n\n// Poor accuracy\nexport const PoorAccuracy: Story = {\n  parameters: {\n    mockStore: {\n      game: {\n        stats: {\n          wpm: 45,\n          rawWpm: 60,\n          accuracy: 75.0,\n          correctChars: 225,\n          incorrectChars: 75,\n          totalChars: 300,\n          elapsedTime: 60000,\n        },\n        testFailed: false,\n        failureReason: null,\n        testConfig: {\n          mode: 'time',\n          duration: 60,\n          difficulty: 'Normal',\n        },\n      },\n      auth: {\n        token: null,\n      },\n    },\n    docs: {\n      description: {\n        story: 'Low accuracy with many errors',\n      },\n    },\n  },\n};\n\n// Authenticated user (score saved)\nexport const AuthenticatedUser: Story = {\n  parameters: {\n    mockStore: {\n      game: {\n        stats: {\n          wpm: 68,\n          rawWpm: 71,\n          accuracy: 94.5,\n          correctChars: 340,\n          incorrectChars: 20,\n          totalChars: 360,\n          elapsedTime: 60000,\n        },\n        testFailed: false,\n        failureReason: null,\n        testConfig: {\n          mode: 'time',\n          duration: 60,\n          difficulty: 'Normal',\n        },\n      },\n      auth: {\n        token: 'mock-token',\n        user: {\n          id: '1',\n          username: 'speedtyper',\n          email: 'user@example.com',\n        },\n      },\n    },\n    docs: {\n      description: {\n        story: 'Shows \"Saved!\" button for authenticated users',\n      },\n    },\n  },\n};\n\n// Failed test - Expert mode\nexport const FailedTestExpert: Story = {\n  parameters: {\n    mockStore: {\n      game: {\n        stats: {\n          wpm: 28,\n          rawWpm: 35,\n          accuracy: 82.0,\n          correctChars: 140,\n          incorrectChars: 31,\n          totalChars: 171,\n          elapsedTime: 45000,\n        },\n        testFailed: true,\n        failureReason: 'Too many errors! Accuracy dropped below 85%.',\n        testConfig: {\n          mode: 'time',\n          duration: 60,\n          difficulty: 'Expert',\n        },\n      },\n      auth: {\n        token: null,\n      },\n    },\n    docs: {\n      description: {\n        story: 'Failed test in Expert mode due to low accuracy',\n      },\n    },\n  },\n};\n\n// Failed test - Master mode\nexport const FailedTestMaster: Story = {\n  parameters: {\n    mockStore: {\n      game: {\n        stats: {\n          wpm: 45,\n          rawWpm: 50,\n          accuracy: 88.0,\n          correctChars: 225,\n          incorrectChars: 31,\n          totalChars: 256,\n          elapsedTime: 30000,\n        },\n        testFailed: true,\n        failureReason: 'Too many errors! Accuracy dropped below 90%.',\n        testConfig: {\n          mode: 'time',\n          duration: 60,\n          difficulty: 'Master',\n        },\n      },\n      auth: {\n        token: null,\n      },\n    },\n    docs: {\n      description: {\n        story: 'Failed test in Master mode due to accuracy threshold',\n      },\n    },\n  },\n};\n\n// Words mode result\nexport const WordsMode: Story = {\n  parameters: {\n    mockStore: {\n      game: {\n        stats: {\n          wpm: 58,\n          rawWpm: 61,\n          accuracy: 93.5,\n          correctChars: 250,\n          incorrectChars: 17,\n          totalChars: 267,\n          elapsedTime: 52000,\n        },\n        testFailed: false,\n        failureReason: null,\n        testConfig: {\n          mode: 'words',\n          wordCount: 50,\n          difficulty: 'Normal',\n        },\n      },\n      auth: {\n        token: null,\n      },\n    },\n    docs: {\n      description: {\n        story: 'Results from words mode test',\n      },\n    },\n  },\n};\n\n// Short duration test\nexport const ShortDuration: Story = {\n  parameters: {\n    mockStore: {\n      game: {\n        stats: {\n          wpm: 82,\n          rawWpm: 85,\n          accuracy: 96.5,\n          correctChars: 68,\n          incorrectChars: 3,\n          totalChars: 71,\n          elapsedTime: 15000,\n        },\n        testFailed: false,\n        failureReason: null,\n        testConfig: {\n          mode: 'time',\n          duration: 15,\n          difficulty: 'Normal',\n        },\n      },\n      auth: {\n        token: null,\n      },\n    },\n    docs: {\n      description: {\n        story: '15-second quick test results',\n      },\n    },\n  },\n};\n\n// Dark mode\nexport const DarkMode: Story = {\n  parameters: {\n    mockStore: {\n      game: {\n        stats: {\n          wpm: 65,\n          rawWpm: 68,\n          accuracy: 94.5,\n          correctChars: 325,\n          incorrectChars: 19,\n          totalChars: 344,\n          elapsedTime: 60000,\n        },\n        testFailed: false,\n        failureReason: null,\n        testConfig: {\n          mode: 'time',\n          duration: 60,\n          difficulty: 'Normal',\n        },\n      },\n      auth: {\n        token: null,\n      },\n    },\n  },\n  globals: {\n    colorScheme: 'dark',\n  },\n};\n\n// Different themes\nexport const DraculaTheme: Story = {\n  parameters: {\n    mockStore: {\n      game: {\n        stats: {\n          wpm: 70,\n          rawWpm: 73,\n          accuracy: 95.8,\n          correctChars: 350,\n          incorrectChars: 15,\n          totalChars: 365,\n          elapsedTime: 60000,\n        },\n        testFailed: false,\n        failureReason: null,\n        testConfig: {\n          mode: 'time',\n          duration: 60,\n          difficulty: 'Normal',\n        },\n      },\n      auth: {\n        token: null,\n      },\n    },\n  },\n  globals: {\n    theme: 'dracula',\n  },\n};\n\n// Mobile view\nexport const MobileView: Story = {\n  parameters: {\n    mockStore: {\n      game: {\n        stats: {\n          wpm: 55,\n          rawWpm: 58,\n          accuracy: 91.5,\n          correctChars: 275,\n          incorrectChars: 26,\n          totalChars: 301,\n          elapsedTime: 60000,\n        },\n        testFailed: false,\n        failureReason: null,\n        testConfig: {\n          mode: 'time',\n          duration: 60,\n          difficulty: 'Normal',\n        },\n      },\n      auth: {\n        token: null,\n      },\n    },\n    viewport: {\n      defaultViewport: 'mobile',\n    },\n    docs: {\n      description: {\n        story: 'Responsive design for mobile devices',\n      },\n    },\n  },\n};\n"],"names":[],"sourceRoot":""}