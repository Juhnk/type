"use strict";
self["webpackHotUpdatetype"]("stories-components-game-TypingArea-stories",{

/***/ "./src/components/game/TypingArea.tsx":
/*!********************************************!*\
  !*** ./src/components/game/TypingArea.tsx ***!
  \********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TypingArea: () => (/* binding */ TypingArea)
/* harmony export */ });
/* harmony import */ var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/react-refresh/runtime.js */ "../../node_modules/react-refresh/runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "../../node_modules/next/dist/compiled/react/jsx-dev-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "../../node_modules/next/dist/compiled/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _store_useGameStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/store/useGameStore */ "./src/store/useGameStore.ts");
/* harmony import */ var _ResultsCard__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ResultsCard */ "./src/components/game/ResultsCard.tsx");
/* harmony import */ var _LoadingState__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./LoadingState */ "./src/components/game/LoadingState.tsx");
/* harmony import */ var _ErrorState__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ErrorState */ "./src/components/game/ErrorState.tsx");
/* harmony import */ var _TimerDisplay__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./TimerDisplay */ "./src/components/game/TimerDisplay.tsx");
/* harmony import */ var _LiveStats__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./LiveStats */ "./src/components/game/LiveStats.tsx");
/* harmony import */ var _WordsProgress__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./WordsProgress */ "./src/components/game/WordsProgress.tsx");
/* harmony import */ var _hooks_useTimerCleanup__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/hooks/useTimerCleanup */ "./src/hooks/useTimerCleanup.ts");
/* harmony import */ var _hooks_useDeviceDetection__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @/hooks/useDeviceDetection */ "./src/hooks/useDeviceDetection.ts");
/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @/lib/utils */ "./src/lib/utils.ts");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");

__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));


var _s = __webpack_require__.$Refresh$.signature();
'use client';











// Helper function to calculate current word boundaries
const getCurrentWordBounds = (currentWordIndex, wordBoundaries, textLength)=>{
    const start = wordBoundaries[currentWordIndex] || 0;
    const end = wordBoundaries[currentWordIndex + 1] || textLength;
    return {
        start,
        end
    };
};
function TypingArea() {
    _s();
    var _s1 = __webpack_require__.$Refresh$.signature(), _s2 = __webpack_require__.$Refresh$.signature();
    // Use timer cleanup hooks
    (0,_hooks_useTimerCleanup__WEBPACK_IMPORTED_MODULE_10__.useTimerCleanup)();
    (0,_hooks_useTimerCleanup__WEBPACK_IMPORTED_MODULE_10__.useTimerVisibility)();
    // Mobile detection and optimization
    const { isMobile, isTouchDevice } = (0,_hooks_useDeviceDetection__WEBPACK_IMPORTED_MODULE_11__.useDeviceDetection)();
    const hasVirtualKeyboard = (0,_hooks_useDeviceDetection__WEBPACK_IMPORTED_MODULE_11__.useVirtualKeyboard)();
    // Use atomic selectors to prevent infinite loop and optimize performance
    const charStates = (0,_store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore)({
        "TypingArea.useGameStore[charStates]": (state)=>state.charStates
    }["TypingArea.useGameStore[charStates]"]);
    const gameStatus = (0,_store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore)({
        "TypingArea.useGameStore[gameStatus]": (state)=>state.gameStatus
    }["TypingArea.useGameStore[gameStatus]"]);
    const testConfig = (0,_store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore)({
        "TypingArea.useGameStore[testConfig]": (state)=>state.testConfig
    }["TypingArea.useGameStore[testConfig]"]);
    const textWindow = (0,_store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore)({
        "TypingArea.useGameStore[textWindow]": (state)=>state.textWindow
    }["TypingArea.useGameStore[textWindow]"]);
    const handleKeyPress = (0,_store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore)({
        "TypingArea.useGameStore[handleKeyPress]": (state)=>state.handleKeyPress
    }["TypingArea.useGameStore[handleKeyPress]"]);
    const isPreparingGame = (0,_store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore)({
        "TypingArea.useGameStore[isPreparingGame]": (state)=>state.isPreparingGame
    }["TypingArea.useGameStore[isPreparingGame]"]);
    const gamePreparationError = (0,_store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore)({
        "TypingArea.useGameStore[gamePreparationError]": (state)=>state.gamePreparationError
    }["TypingArea.useGameStore[gamePreparationError]"]);
    const prepareGame = (0,_store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore)({
        "TypingArea.useGameStore[prepareGame]": (state)=>state.prepareGame
    }["TypingArea.useGameStore[prepareGame]"]);
    const useFallbackWords = (0,_store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore)({
        "TypingArea.useGameStore[useFallbackWords]": (state)=>state.useFallbackWords
    }["TypingArea.useGameStore[useFallbackWords]"]);
    // Prepare game on component mount
    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({
        "TypingArea.useEffect": ()=>{
            prepareGame();
        }
    }["TypingArea.useEffect"], [
        prepareGame
    ]);
    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({
        "TypingArea.useEffect": ()=>{
            const handleKeyDown = {
                "TypingArea.useEffect.handleKeyDown": (event)=>{
                    // Prevent default browser actions for specific keys
                    if (event.key === 'Tab' || event.key === 'Escape' || event.key === ' ' && event.target === document.body) {
                        event.preventDefault();
                    }
                    // Only handle typing when game is ready or running
                    if (gameStatus === 'ready' || gameStatus === 'running') {
                        handleKeyPress(event.key);
                    }
                }
            }["TypingArea.useEffect.handleKeyDown"];
            // Add global keydown listener
            document.addEventListener('keydown', handleKeyDown);
            // Cleanup function to remove listener
            return ({
                "TypingArea.useEffect": ()=>{
                    document.removeEventListener('keydown', handleKeyDown);
                }
            })["TypingArea.useEffect"];
        }
    }["TypingArea.useEffect"], [
        gameStatus,
        handleKeyPress
    ]);
    const getCharClassName = (status)=>{
        switch(status){
            case 'correct':
                return 'text-success bg-success-soft';
            case 'incorrect':
                return 'text-error bg-error-soft';
            case 'current':
                return 'bg-primary text-primary-foreground animate-pulse border-l-2 border-primary';
            default:
                return 'text-muted-foreground';
        }
    };
    // Component to render the appropriate typing display based on mode
    const TypingDisplay = ()=>{
        if (testConfig.mode === 'time') {
            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(TimeModePastedComponent, {}, void 0, false, {
                fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                lineNumber: 98,
                columnNumber: 14
            }, this);
        } else {
            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(StandardTypingDisplay, {}, void 0, false, {
                fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                lineNumber: 100,
                columnNumber: 14
            }, this);
        }
    };
    // Optimized auto-scrolling display for time mode
    const TimeModePastedComponent = ()=>{
        _s1();
        const { lines, lineCharOffsets, scrollOffset } = textWindow;
        // Get word tracking state
        const currentWordIndex = (0,_store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore)({
            "TypingArea.TimeModePastedComponent.useGameStore[currentWordIndex]": (state)=>state.currentWordIndex
        }["TypingArea.TimeModePastedComponent.useGameStore[currentWordIndex]"]);
        const wordBoundaries = (0,_store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore)({
            "TypingArea.TimeModePastedComponent.useGameStore[wordBoundaries]": (state)=>state.wordBoundaries
        }["TypingArea.TimeModePastedComponent.useGameStore[wordBoundaries]"]);
        // Simple, performant scrolling - no complex interpolation needed
        // The store handles the timing, we just smoothly animate the transition
        // Buffer rendering to prevent content popping
        const renderBuffer = 2;
        const startIndex = Math.max(0, scrollOffset - renderBuffer);
        const endIndex = Math.min(lines.length, scrollOffset + 3 + renderBuffer);
        const linesToRender = lines.slice(startIndex, endIndex);
        // Calculate current word boundaries
        const { start: wordStart, end: wordEnd } = getCurrentWordBounds(currentWordIndex, wordBoundaries, charStates.length);
        // Memoize the line rendering for performance
        const renderLineWithCharacterStates = react__WEBPACK_IMPORTED_MODULE_2___default().useMemo({
            "TypingArea.TimeModePastedComponent.useMemo[renderLineWithCharacterStates]": ()=>{
                return ({
                    "TypingArea.TimeModePastedComponent.useMemo[renderLineWithCharacterStates]": (line, lineIndex)=>{
                        const globalLineIndex = startIndex + lineIndex;
                        const lineStartChar = lineCharOffsets[globalLineIndex] || 0;
                        return line.split('').map({
                            "TypingArea.TimeModePastedComponent.useMemo[renderLineWithCharacterStates]": (char, charIndex)=>{
                                const globalCharIndex = lineStartChar + charIndex;
                                const charState = charStates[globalCharIndex];
                                if (!charState) return null;
                                const isInCurrentWord = globalCharIndex >= wordStart && globalCharIndex < wordEnd && char !== ' ';
                                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("span", {
                                    className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_12__.cn)('transition-colors duration-150', getCharClassName(charState.status), isInCurrentWord && 'bg-primary/10 dark:bg-primary/15'),
                                    children: char === ' ' ? '\u00A0' : char
                                }, `${globalLineIndex}-${charIndex}`, false, {
                                    fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                                    lineNumber: 143,
                                    columnNumber: 13
                                }, this);
                            }
                        }["TypingArea.TimeModePastedComponent.useMemo[renderLineWithCharacterStates]"]);
                    }
                })["TypingArea.TimeModePastedComponent.useMemo[renderLineWithCharacterStates]"];
            }
        }["TypingArea.TimeModePastedComponent.useMemo[renderLineWithCharacterStates]"], [
            lineCharOffsets,
            startIndex,
            charStates,
            wordStart,
            wordEnd
        ]);
        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
            className: "typing-container relative",
            children: [
                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                    className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_12__.cn)('overflow-hidden', // Responsive height
                    isMobile ? 'h-20' : 'h-24'),
                    role: "textbox",
                    "aria-multiline": "true",
                    "aria-describedby": "typing-instructions game-status-live",
                    tabIndex: 0,
                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_12__.cn)('font-mono leading-8', // Responsive text size
                        isMobile ? 'text-base' : 'text-lg sm:text-xl'),
                        style: {
                            transform: `translateY(-${(scrollOffset - startIndex) * (isMobile ? 28 : 32)}px)`,
                            transition: 'transform 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94)',
                            willChange: 'transform'
                        },
                        children: linesToRender.map((line, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                                className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_12__.cn)('leading-8', isMobile ? 'min-h-[28px]' : 'min-h-[32px]'),
                                role: "textbox",
                                "aria-label": `Line ${startIndex + index + 1}`,
                                children: renderLineWithCharacterStates(line, index)
                            }, `line-${startIndex + index}`, false, {
                                fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                                lineNumber: 185,
                                columnNumber: 15
                            }, this))
                    }, void 0, false, {
                        fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                        lineNumber: 172,
                        columnNumber: 11
                    }, this)
                }, void 0, false, {
                    fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                    lineNumber: 161,
                    columnNumber: 9
                }, this),
                (0,_store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore)({
                    "TypingArea.TimeModePastedComponent.useGameStore": (state)=>state.isContentStreaming
                }["TypingArea.TimeModePastedComponent.useGameStore"]) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                    className: "absolute top-0 right-0 animate-pulse text-xs text-info",
                    children: "Loading more content..."
                }, void 0, false, {
                    fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                    lineNumber: 202,
                    columnNumber: 11
                }, this),
                gameStatus === 'ready' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("p", {
                    className: "text-muted-foreground mt-6 text-center text-sm",
                    children: "Start typing to begin the test..."
                }, void 0, false, {
                    fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                    lineNumber: 208,
                    columnNumber: 11
                }, this),
                gameStatus === 'paused' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("p", {
                    className: "mt-6 text-center text-sm font-medium text-warning",
                    children: "Test paused - continue typing to resume"
                }, void 0, false, {
                    fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                    lineNumber: 214,
                    columnNumber: 11
                }, this)
            ]
        }, void 0, true, {
            fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
            lineNumber: 159,
            columnNumber: 7
        }, this);
    };
    _s1(TimeModePastedComponent, "cKWpn3FXRLZiaVfDHJhzXEZd6gw=", false, function() {
        return [
            _store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore,
            _store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore,
            _store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore
        ];
    });
    // Standard display for words and quote modes
    const StandardTypingDisplay = ()=>{
        _s2();
        // Get word tracking state
        const currentWordIndex = (0,_store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore)({
            "TypingArea.StandardTypingDisplay.useGameStore[currentWordIndex]": (state)=>state.currentWordIndex
        }["TypingArea.StandardTypingDisplay.useGameStore[currentWordIndex]"]);
        const wordBoundaries = (0,_store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore)({
            "TypingArea.StandardTypingDisplay.useGameStore[wordBoundaries]": (state)=>state.wordBoundaries
        }["TypingArea.StandardTypingDisplay.useGameStore[wordBoundaries]"]);
        // Calculate current word boundaries
        const { start, end } = getCurrentWordBounds(currentWordIndex, wordBoundaries, charStates.length);
        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
            className: "typing-container relative",
            children: [
                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                    className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_12__.cn)('w-full font-mono leading-relaxed tracking-wide break-words focus:outline-none', // Responsive text size and spacing
                    isMobile ? 'min-h-[150px] text-base' : 'min-h-[200px] text-lg sm:text-xl lg:text-2xl'),
                    role: "textbox",
                    "aria-multiline": "true",
                    "aria-describedby": "typing-instructions game-status-live",
                    tabIndex: 0,
                    children: charStates.map((charState, index)=>{
                        const isInCurrentWord = index >= start && index < end && charState.char !== ' ';
                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("span", {
                            className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_12__.cn)('transition-colors duration-150', getCharClassName(charState.status), isInCurrentWord && 'bg-primary/10 dark:bg-primary/15'),
                            "aria-label": charState.status === 'current' ? 'Current character' : undefined,
                            children: charState.char === ' ' ? '\u00A0' : charState.char
                        }, index, false, {
                            fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                            lineNumber: 254,
                            columnNumber: 15
                        }, this);
                    })
                }, void 0, false, {
                    fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                    lineNumber: 237,
                    columnNumber: 9
                }, this),
                gameStatus === 'ready' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("p", {
                    className: "text-muted-foreground mt-6 text-center text-sm",
                    children: "Start typing to begin the test..."
                }, void 0, false, {
                    fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                    lineNumber: 272,
                    columnNumber: 11
                }, this),
                gameStatus === 'paused' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("p", {
                    className: "mt-6 text-center text-sm font-medium text-warning",
                    children: "Test paused - continue typing to resume"
                }, void 0, false, {
                    fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                    lineNumber: 278,
                    columnNumber: 11
                }, this)
            ]
        }, void 0, true, {
            fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
            lineNumber: 236,
            columnNumber: 7
        }, this);
    };
    _s2(StandardTypingDisplay, "9bMJsh5pJuTQlnKV67sUUuCi3uw=", false, function() {
        return [
            _store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore,
            _store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore
        ];
    });
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_12__.cn)('mx-auto w-full max-w-5xl space-y-6', // Mobile optimizations
        isMobile && 'space-y-4 px-4', hasVirtualKeyboard && 'pb-4'),
        children: [
            testConfig.mode === 'time' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                className: "flex justify-center",
                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_TimerDisplay__WEBPACK_IMPORTED_MODULE_7__.TimerDisplay, {}, void 0, false, {
                    fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                    lineNumber: 298,
                    columnNumber: 11
                }, this)
            }, void 0, false, {
                fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                lineNumber: 297,
                columnNumber: 9
            }, this),
            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_WordsProgress__WEBPACK_IMPORTED_MODULE_9__.WordsProgress, {}, void 0, false, {
                fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                lineNumber: 303,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                className: "w-full",
                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                    className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_12__.cn)('bg-card focus-within:ring-ring rounded-lg border focus-within:ring-2', // Responsive padding
                    isMobile ? 'p-4' : 'p-6 sm:p-8', // Touch optimizations
                    isTouchDevice && 'touch-manipulation'),
                    role: "main",
                    "aria-label": "Typing practice area",
                    children: [
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                            id: "typing-instructions",
                            className: "sr-only",
                            children: [
                                testConfig.mode === 'time' ? `Type the text shown to practice your typing speed. Timer: ${testConfig.duration} seconds.` : testConfig.mode === 'words' ? `Type ${testConfig.wordCount} words as quickly and accurately as possible.` : 'Type the quote shown as quickly and accurately as possible.',
                                ' ',
                                "Use backspace to correct mistakes. Press Escape to open the command palette. Current difficulty: ",
                                testConfig.difficulty,
                                "."
                            ]
                        }, void 0, true, {
                            fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                            lineNumber: 319,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                            id: "game-status-live",
                            className: "sr-only",
                            "aria-live": "polite",
                            "aria-atomic": "false",
                            children: [
                                gameStatus === 'ready' && 'Ready to start typing',
                                gameStatus === 'running' && 'Test in progress',
                                gameStatus === 'paused' && 'Test paused',
                                gameStatus === 'finished' && 'Test completed'
                            ]
                        }, void 0, true, {
                            fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                            lineNumber: 330,
                            columnNumber: 11
                        }, this),
                        isPreparingGame ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_LoadingState__WEBPACK_IMPORTED_MODULE_5__.LoadingState, {
                            message: "Preparing your typing challenge...",
                            variant: "preparing"
                        }, void 0, false, {
                            fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                            lineNumber: 343,
                            columnNumber: 13
                        }, this) : gamePreparationError ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_ErrorState__WEBPACK_IMPORTED_MODULE_6__.ErrorState, {
                            error: `Game preparation failed: ${gamePreparationError}`,
                            onRetry: prepareGame,
                            onFallback: useFallbackWords
                        }, void 0, false, {
                            fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                            lineNumber: 348,
                            columnNumber: 13
                        }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(TypingDisplay, {}, void 0, false, {
                            fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                            lineNumber: 354,
                            columnNumber: 13
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                    lineNumber: 307,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                lineNumber: 306,
                columnNumber: 7
            }, this),
            gameStatus === 'running' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                className: "flex justify-center",
                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_LiveStats__WEBPACK_IMPORTED_MODULE_8__.LiveStats, {}, void 0, false, {
                    fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                    lineNumber: 362,
                    columnNumber: 11
                }, this)
            }, void 0, false, {
                fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                lineNumber: 361,
                columnNumber: 9
            }, this),
            gameStatus === 'finished' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_ResultsCard__WEBPACK_IMPORTED_MODULE_4__.ResultsCard, {}, void 0, false, {
                fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
                lineNumber: 367,
                columnNumber: 37
            }, this)
        ]
    }, void 0, true, {
        fileName: "/home/juhnk/repos/type/packages/web/src/components/game/TypingArea.tsx",
        lineNumber: 287,
        columnNumber: 5
    }, this);
}
_s(TypingArea, "qEhtvAwDmkVM4H7G/mK53JvIbY4=", false, function() {
    return [
        _hooks_useTimerCleanup__WEBPACK_IMPORTED_MODULE_10__.useTimerCleanup,
        _hooks_useTimerCleanup__WEBPACK_IMPORTED_MODULE_10__.useTimerVisibility,
        _hooks_useDeviceDetection__WEBPACK_IMPORTED_MODULE_11__.useDeviceDetection,
        _hooks_useDeviceDetection__WEBPACK_IMPORTED_MODULE_11__.useVirtualKeyboard,
        _store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore,
        _store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore,
        _store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore,
        _store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore,
        _store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore,
        _store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore,
        _store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore,
        _store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore,
        _store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore
    ];
});
_c = TypingArea;
TypingArea.__docgenInfo = {
    "description": "",
    "methods": [],
    "displayName": "TypingArea"
};
var _c;
__webpack_require__.$Refresh$.register(_c, "TypingArea");


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});
//# sourceMappingURL=stories-components-game-TypingArea-stories.0467506412cf8eb9b7c0.hot-update.js.map