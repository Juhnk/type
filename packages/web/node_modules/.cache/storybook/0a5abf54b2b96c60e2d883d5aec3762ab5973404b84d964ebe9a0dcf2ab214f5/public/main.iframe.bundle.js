(self["webpackChunktype"] = self["webpackChunktype"] || []).push([["main"],{

/***/ "../../node_modules/@storybook/nextjs/dist sync recursive":
/*!*******************************************************!*\
  !*** ../../node_modules/@storybook/nextjs/dist/ sync ***!
  \*******************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "../../node_modules/@storybook/nextjs/dist sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../node_modules/postcss-loader/dist/cjs.js!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[18].use[0]!./src/app/globals.css":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../node_modules/postcss-loader/dist/cjs.js!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[18].use[0]!./src/app/globals.css ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ "../../node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ "../../node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --color-red-50: oklch(97.1% 0.013 17.38);
    --color-red-100: oklch(93.6% 0.032 17.717);
    --color-red-200: oklch(88.5% 0.062 18.334);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-800: oklch(44.4% 0.177 26.899);
    --color-orange-500: oklch(70.5% 0.213 47.604);
    --color-orange-600: oklch(64.6% 0.222 41.116);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-yellow-600: oklch(68.1% 0.162 75.834);
    --color-green-100: oklch(96.2% 0.044 156.743);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-green-700: oklch(52.7% 0.154 150.069);
    --color-green-800: oklch(44.8% 0.119 151.328);
    --color-teal-600: oklch(60% 0.118 184.704);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-purple-500: oklch(62.7% 0.265 303.9);
    --color-purple-600: oklch(55.8% 0.288 302.321);
    --color-pink-500: oklch(65.6% 0.241 354.308);
    --color-slate-400: oklch(70.4% 0.04 256.788);
    --color-slate-500: oklch(55.4% 0.046 257.417);
    --color-slate-900: oklch(20.8% 0.042 265.755);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-xs: 20rem;
    --container-lg: 32rem;
    --container-2xl: 42rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --tracking-tight: -0.025em;
    --tracking-normal: 0em;
    --tracking-wide: 0.025em;
    --tracking-widest: 0.1em;
    --leading-relaxed: 1.625;
    --radius-xs: 0.125rem;
    --radius-sm: calc(var(--radius) - 4px);
    --radius-md: calc(var(--radius) - 2px);
    --radius-lg: var(--radius);
    --radius-xl: calc(var(--radius) + 4px);
    --shadow-xs: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --shadow-sm: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
    --shadow-2xl: 0 25px 50px -12px rgb(0 0 0 / 0.25);
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --animate-bounce: bounce 1s infinite;
    --blur-sm: 8px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-inter);
    --default-mono-font-family: var(--font-roboto-mono);
    --color-success: var(--color-success);
    --color-success-foreground: var(--color-success-foreground);
    --color-success-soft: var(--color-success-soft);
    --color-error: var(--color-error);
    --color-error-foreground: var(--color-error-foreground);
    --color-error-soft: var(--color-error-soft);
    --color-warning: var(--color-warning);
    --color-warning-foreground: var(--color-warning-foreground);
    --color-warning-soft: var(--color-warning-soft);
    --color-info: var(--color-info);
    --color-info-foreground: var(--color-info-foreground);
    --color-info-soft: var(--color-info-soft);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .\\@container\\/card-header {
    container-type: inline-size;
    container-name: card-header;
  }
  .pointer-events-none {
    pointer-events: none;
  }
  .invisible {
    visibility: hidden;
  }
  .visible {
    visibility: visible;
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .inset-y-0 {
    inset-block: calc(var(--spacing) * 0);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-2\\.5 {
    top: calc(var(--spacing) * 2.5);
  }
  .top-4 {
    top: calc(var(--spacing) * 4);
  }
  .top-\\[50\\%\\] {
    top: 50%;
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-2 {
    right: calc(var(--spacing) * 2);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .\\!left-0 {
    left: calc(var(--spacing) * 0) !important;
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-2 {
    left: calc(var(--spacing) * 2);
  }
  .left-\\[50\\%\\] {
    left: 50%;
  }
  .isolate {
    isolation: isolate;
  }
  .z-50 {
    z-index: 50;
  }
  .z-\\[9998\\] {
    z-index: 9998;
  }
  .z-\\[9999\\] {
    z-index: 9999;
  }
  .col-start-2 {
    grid-column-start: 2;
  }
  .row-span-2 {
    grid-row: span 2 / span 2;
  }
  .row-start-1 {
    grid-row-start: 1;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .-mx-1 {
    margin-inline: calc(var(--spacing) * -1);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }
  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }
  .ms-3 {
    margin-inline-start: calc(var(--spacing) * 3);
  }
  .me-2 {
    margin-inline-end: calc(var(--spacing) * 2);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .ml-4 {
    margin-left: calc(var(--spacing) * 4);
  }
  .ml-auto {
    margin-left: auto;
  }
  .line-clamp-1 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .table-caption {
    display: table-caption;
  }
  .table-cell {
    display: table-cell;
  }
  .table-row {
    display: table-row;
  }
  .field-sizing-content {
    field-sizing: content;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .size-3\\.5 {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }
  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .h-1 {
    height: calc(var(--spacing) * 1);
  }
  .h-1\\.5 {
    height: calc(var(--spacing) * 1.5);
  }
  .h-2 {
    height: calc(var(--spacing) * 2);
  }
  .h-2\\.5 {
    height: calc(var(--spacing) * 2.5);
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-9 {
    height: calc(var(--spacing) * 9);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-24 {
    height: calc(var(--spacing) * 24);
  }
  .h-\\[1\\.15rem\\] {
    height: 1.15rem;
  }
  .h-\\[300px\\] {
    height: 300px;
  }
  .h-\\[600px\\] {
    height: 600px;
  }
  .h-\\[var\\(--radix-select-trigger-height\\)\\] {
    height: var(--radix-select-trigger-height);
  }
  .h-auto {
    height: auto;
  }
  .h-full {
    height: 100%;
  }
  .h-px {
    height: 1px;
  }
  .max-h-\\(--radix-select-content-available-height\\) {
    max-height: var(--radix-select-content-available-height);
  }
  .max-h-\\[300px\\] {
    max-height: 300px;
  }
  .min-h-4 {
    min-height: calc(var(--spacing) * 4);
  }
  .min-h-16 {
    min-height: calc(var(--spacing) * 16);
  }
  .min-h-\\[28px\\] {
    min-height: 28px;
  }
  .min-h-\\[32px\\] {
    min-height: 32px;
  }
  .min-h-\\[120px\\] {
    min-height: 120px;
  }
  .min-h-\\[150px\\] {
    min-height: 150px;
  }
  .min-h-\\[200px\\] {
    min-height: 200px;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-0\\.5 {
    width: calc(var(--spacing) * 0.5);
  }
  .w-1\\.5 {
    width: calc(var(--spacing) * 1.5);
  }
  .w-1\\/4 {
    width: calc(1/4 * 100%);
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-2\\.5 {
    width: calc(var(--spacing) * 2.5);
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-80 {
    width: calc(var(--spacing) * 80);
  }
  .w-96 {
    width: calc(var(--spacing) * 96);
  }
  .w-\\[1ch\\] {
    width: 1ch;
  }
  .w-\\[140px\\] {
    width: 140px;
  }
  .w-\\[150px\\] {
    width: 150px;
  }
  .w-\\[180px\\] {
    width: 180px;
  }
  .w-\\[200px\\] {
    width: 200px;
  }
  .w-\\[400px\\] {
    width: 400px;
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-4xl {
    max-width: var(--container-4xl);
  }
  .max-w-5xl {
    max-width: var(--container-5xl);
  }
  .max-w-7xl {
    max-width: var(--container-7xl);
  }
  .max-w-\\[calc\\(100\\%-2rem\\)\\] {
    max-width: calc(100% - 2rem);
  }
  .max-w-lg {
    max-width: var(--container-lg);
  }
  .max-w-xs {
    max-width: var(--container-xs);
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .min-w-\\[8rem\\] {
    min-width: 8rem;
  }
  .min-w-\\[var\\(--radix-select-trigger-width\\)\\] {
    min-width: var(--radix-select-trigger-width);
  }
  .flex-1 {
    flex: 1;
  }
  .flex-shrink-0 {
    flex-shrink: 0;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .grow {
    flex-grow: 1;
  }
  .caption-bottom {
    caption-side: bottom;
  }
  .origin-\\(--radix-select-content-transform-origin\\) {
    transform-origin: var(--radix-select-content-transform-origin);
  }
  .translate-x-\\[-50\\%\\] {
    --tw-translate-x: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-\\[-50\\%\\] {
    --tw-translate-y: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .scale-75 {
    --tw-scale-x: 75%;
    --tw-scale-y: 75%;
    --tw-scale-z: 75%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-125 {
    --tw-scale-x: 125%;
    --tw-scale-y: 125%;
    --tw-scale-z: 125%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-bounce {
    animation: var(--animate-bounce);
  }
  .animate-pulse {
    animation: var(--animate-pulse);
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .cursor-default {
    cursor: default;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .touch-manipulation {
    touch-action: manipulation;
  }
  .touch-none {
    touch-action: none;
  }
  .resize {
    resize: both;
  }
  .resize-none {
    resize: none;
  }
  .scroll-my-1 {
    scroll-margin-block: calc(var(--spacing) * 1);
  }
  .scroll-py-1 {
    scroll-padding-block: calc(var(--spacing) * 1);
  }
  .list-inside {
    list-style-position: inside;
  }
  .list-decimal {
    list-style-type: decimal;
  }
  .auto-rows-min {
    grid-auto-rows: min-content;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-cols-\\[0_1fr\\] {
    grid-template-columns: 0 1fr;
  }
  .grid-rows-\\[auto_auto\\] {
    grid-template-rows: auto auto;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-col-reverse {
    flex-direction: column-reverse;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-items-start {
    justify-items: start;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-1\\.5 {
    gap: calc(var(--spacing) * 1.5);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .space-y-0 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-0\\.5 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 0.5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 0.5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-1 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-3 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-8 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-4 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .gap-y-0\\.5 {
    row-gap: calc(var(--spacing) * 0.5);
  }
  .self-start {
    align-self: flex-start;
  }
  .justify-self-end {
    justify-self: flex-end;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-x-hidden {
    overflow-x: hidden;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius);
  }
  .rounded-md {
    border-radius: calc(var(--radius) - 2px);
  }
  .rounded-sm {
    border-radius: calc(var(--radius) - 4px);
  }
  .rounded-xl {
    border-radius: calc(var(--radius) + 4px);
  }
  .rounded-xs {
    border-radius: var(--radius-xs);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-l-2 {
    border-left-style: var(--tw-border-style);
    border-left-width: 2px;
  }
  .border-border {
    border-color: var(--border);
  }
  .border-error {
    border-color: var(--color-error);
  }
  .border-error\\/20 {
    border-color: var(--color-error);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-error) 20%, transparent);
    }
  }
  .border-green-500 {
    border-color: var(--color-green-500);
  }
  .border-input {
    border-color: var(--input);
  }
  .border-muted {
    border-color: var(--muted);
  }
  .border-muted-foreground\\/20 {
    border-color: var(--muted-foreground);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--muted-foreground) 20%, transparent);
    }
  }
  .border-primary {
    border-color: var(--primary);
  }
  .border-primary\\/20 {
    border-color: var(--primary);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--primary) 20%, transparent);
    }
  }
  .border-red-200 {
    border-color: var(--color-red-200);
  }
  .border-success {
    border-color: var(--color-success);
  }
  .border-success\\/20 {
    border-color: var(--color-success);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-success) 20%, transparent);
    }
  }
  .border-transparent {
    border-color: transparent;
  }
  .border-warning {
    border-color: var(--color-warning);
  }
  .border-warning\\/20 {
    border-color: var(--color-warning);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-warning) 20%, transparent);
    }
  }
  .border-yellow-500 {
    border-color: var(--color-yellow-500);
  }
  .bg-accent {
    background-color: var(--accent);
  }
  .bg-background {
    background-color: var(--background);
  }
  .bg-background\\/80 {
    background-color: var(--background);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--background) 80%, transparent);
    }
  }
  .bg-black\\/50 {
    background-color: color-mix(in srgb, #000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-border {
    background-color: var(--border);
  }
  .bg-border\\/50 {
    background-color: var(--border);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--border) 50%, transparent);
    }
  }
  .bg-card {
    background-color: var(--card);
  }
  .bg-destructive {
    background-color: var(--destructive);
  }
  .bg-error {
    background-color: var(--color-error);
  }
  .bg-error-soft {
    background-color: var(--color-error-soft);
  }
  .bg-error\\/10 {
    background-color: var(--color-error);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-error) 10%, transparent);
    }
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-gray-600 {
    background-color: var(--color-gray-600);
  }
  .bg-gray-900 {
    background-color: var(--color-gray-900);
  }
  .bg-green-100 {
    background-color: var(--color-green-100);
  }
  .bg-green-600 {
    background-color: var(--color-green-600);
  }
  .bg-info {
    background-color: var(--color-info);
  }
  .bg-info-soft {
    background-color: var(--color-info-soft);
  }
  .bg-muted {
    background-color: var(--muted);
  }
  .bg-muted-foreground {
    background-color: var(--muted-foreground);
  }
  .bg-muted-foreground\\/40 {
    background-color: var(--muted-foreground);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--muted-foreground) 40%, transparent);
    }
  }
  .bg-muted\\/50 {
    background-color: var(--muted);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--muted) 50%, transparent);
    }
  }
  .bg-popover {
    background-color: var(--popover);
  }
  .bg-primary {
    background-color: var(--primary);
  }
  .bg-primary\\/5 {
    background-color: var(--primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--primary) 5%, transparent);
    }
  }
  .bg-primary\\/10 {
    background-color: var(--primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--primary) 10%, transparent);
    }
  }
  .bg-primary\\/20 {
    background-color: var(--primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--primary) 20%, transparent);
    }
  }
  .bg-primary\\/30 {
    background-color: var(--primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--primary) 30%, transparent);
    }
  }
  .bg-purple-600 {
    background-color: var(--color-purple-600);
  }
  .bg-red-50 {
    background-color: var(--color-red-50);
  }
  .bg-red-100 {
    background-color: var(--color-red-100);
  }
  .bg-secondary {
    background-color: var(--secondary);
  }
  .bg-secondary\\/50 {
    background-color: var(--secondary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--secondary) 50%, transparent);
    }
  }
  .bg-slate-500 {
    background-color: var(--color-slate-500);
  }
  .bg-slate-900 {
    background-color: var(--color-slate-900);
  }
  .bg-success {
    background-color: var(--color-success);
  }
  .bg-success-soft {
    background-color: var(--color-success-soft);
  }
  .bg-teal-600 {
    background-color: var(--color-teal-600);
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-warning {
    background-color: var(--color-warning);
  }
  .bg-warning-soft {
    background-color: var(--color-warning-soft);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-yellow-500 {
    background-color: var(--color-yellow-500);
  }
  .bg-yellow-600 {
    background-color: var(--color-yellow-600);
  }
  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-purple-500 {
    --tw-gradient-from: var(--color-purple-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-transparent {
    --tw-gradient-from: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-yellow-500 {
    --tw-gradient-from: var(--color-yellow-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .via-white\\/20 {
    --tw-gradient-via: color-mix(in srgb, #fff 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-via: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .to-orange-500 {
    --tw-gradient-to: var(--color-orange-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-pink-500 {
    --tw-gradient-to: var(--color-pink-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .fill-current {
    fill: currentcolor;
  }
  .fill-muted-foreground {
    fill: var(--muted-foreground);
  }
  .stroke-muted {
    stroke: var(--muted);
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .py-0\\.5 {
    padding-block: calc(var(--spacing) * 0.5);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }
  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }
  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }
  .pr-8 {
    padding-right: calc(var(--spacing) * 8);
  }
  .pr-10 {
    padding-right: calc(var(--spacing) * 10);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pb-6 {
    padding-bottom: calc(var(--spacing) * 6);
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .pl-8 {
    padding-left: calc(var(--spacing) * 8);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .align-middle {
    vertical-align: middle;
  }
  .font-mono {
    font-family: var(--font-roboto-mono);
  }
  .font-sans {
    font-family: var(--font-inter);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .leading-8 {
    --tw-leading: calc(var(--spacing) * 8);
    line-height: calc(var(--spacing) * 8);
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  .tracking-wide {
    --tw-tracking: var(--tracking-wide);
    letter-spacing: var(--tracking-wide);
  }
  .tracking-widest {
    --tw-tracking: var(--tracking-widest);
    letter-spacing: var(--tracking-widest);
  }
  .break-words {
    overflow-wrap: break-word;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .whitespace-pre-wrap {
    white-space: pre-wrap;
  }
  .text-accent-foreground {
    color: var(--accent-foreground);
  }
  .text-blue-500 {
    color: var(--color-blue-500);
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-card-foreground {
    color: var(--card-foreground);
  }
  .text-current {
    color: currentcolor;
  }
  .text-destructive {
    color: var(--destructive);
  }
  .text-error {
    color: var(--color-error);
  }
  .text-foreground {
    color: var(--foreground);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-green-500 {
    color: var(--color-green-500);
  }
  .text-green-600 {
    color: var(--color-green-600);
  }
  .text-green-700 {
    color: var(--color-green-700);
  }
  .text-green-800 {
    color: var(--color-green-800);
  }
  .text-info {
    color: var(--color-info);
  }
  .text-muted-foreground {
    color: var(--muted-foreground);
  }
  .text-muted-foreground\\/50 {
    color: var(--muted-foreground);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--muted-foreground) 50%, transparent);
    }
  }
  .text-muted-foreground\\/75 {
    color: var(--muted-foreground);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--muted-foreground) 75%, transparent);
    }
  }
  .text-orange-600 {
    color: var(--color-orange-600);
  }
  .text-popover-foreground {
    color: var(--popover-foreground);
  }
  .text-primary {
    color: var(--primary);
  }
  .text-primary-foreground {
    color: var(--primary-foreground);
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-red-600 {
    color: var(--color-red-600);
  }
  .text-red-800 {
    color: var(--color-red-800);
  }
  .text-secondary-foreground {
    color: var(--secondary-foreground);
  }
  .text-slate-400 {
    color: var(--color-slate-400);
  }
  .text-success {
    color: var(--color-success);
  }
  .text-warning {
    color: var(--color-warning);
  }
  .text-warning-foreground {
    color: var(--color-warning-foreground);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-yellow-500 {
    color: var(--color-yellow-500);
  }
  .text-yellow-600 {
    color: var(--color-yellow-600);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .underline {
    text-decoration-line: underline;
  }
  .underline-offset-4 {
    text-underline-offset: 4px;
  }
  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .opacity-50 {
    opacity: 50%;
  }
  .opacity-70 {
    opacity: 70%;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-0 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-primary {
    --tw-ring-color: var(--primary);
  }
  .ring-ring {
    --tw-ring-color: var(--ring);
  }
  .ring-offset-2 {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }
  .ring-offset-background {
    --tw-ring-offset-color: var(--background);
  }
  .outline-hidden {
    --tw-outline-style: none;
    outline-style: none;
    @media (forced-colors: active) {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\\[color\\,box-shadow\\] {
    transition-property: color,box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-15 {
    --tw-duration: 15ms;
    transition-duration: 15ms;
  }
  .duration-30 {
    --tw-duration: 30ms;
    transition-duration: 30ms;
  }
  .duration-60 {
    --tw-duration: 60ms;
    transition-duration: 60ms;
  }
  .duration-100 {
    --tw-duration: 100ms;
    transition-duration: 100ms;
  }
  .duration-120 {
    --tw-duration: 120ms;
    transition-duration: 120ms;
  }
  .duration-150 {
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .fade-in {
    --tw-enter-opacity: 0;
  }
  .paused {
    animation-play-state: paused;
  }
  .running {
    animation-play-state: running;
  }
  .peer-disabled\\:cursor-not-allowed {
    &:is(:where(.peer):disabled ~ *) {
      cursor: not-allowed;
    }
  }
  .peer-disabled\\:opacity-70 {
    &:is(:where(.peer):disabled ~ *) {
      opacity: 70%;
    }
  }
  .selection\\:bg-primary {
    & *::selection {
      background-color: var(--primary);
    }
    &::selection {
      background-color: var(--primary);
    }
  }
  .selection\\:text-primary-foreground {
    & *::selection {
      color: var(--primary-foreground);
    }
    &::selection {
      color: var(--primary-foreground);
    }
  }
  .file\\:inline-flex {
    &::file-selector-button {
      display: inline-flex;
    }
  }
  .file\\:h-7 {
    &::file-selector-button {
      height: calc(var(--spacing) * 7);
    }
  }
  .file\\:border-0 {
    &::file-selector-button {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
  }
  .file\\:bg-transparent {
    &::file-selector-button {
      background-color: transparent;
    }
  }
  .file\\:text-sm {
    &::file-selector-button {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .file\\:font-medium {
    &::file-selector-button {
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
    }
  }
  .file\\:text-foreground {
    &::file-selector-button {
      color: var(--foreground);
    }
  }
  .placeholder\\:text-muted-foreground {
    &::placeholder {
      color: var(--muted-foreground);
    }
  }
  .focus-within\\:ring-2 {
    &:focus-within {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-within\\:ring-ring {
    &:focus-within {
      --tw-ring-color: var(--ring);
    }
  }
  .hover\\:border-muted-foreground {
    &:hover {
      @media (hover: hover) {
        border-color: var(--muted-foreground);
      }
    }
  }
  .hover\\:bg-accent {
    &:hover {
      @media (hover: hover) {
        background-color: var(--accent);
      }
    }
  }
  .hover\\:bg-muted {
    &:hover {
      @media (hover: hover) {
        background-color: var(--muted);
      }
    }
  }
  .hover\\:bg-muted\\/50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--muted);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--muted) 50%, transparent);
        }
      }
    }
  }
  .hover\\:bg-primary {
    &:hover {
      @media (hover: hover) {
        background-color: var(--primary);
      }
    }
  }
  .hover\\:bg-primary\\/90 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--primary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--primary) 90%, transparent);
        }
      }
    }
  }
  .hover\\:bg-secondary\\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--secondary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
        }
      }
    }
  }
  .hover\\:text-accent-foreground {
    &:hover {
      @media (hover: hover) {
        color: var(--accent-foreground);
      }
    }
  }
  .hover\\:text-foreground {
    &:hover {
      @media (hover: hover) {
        color: var(--foreground);
      }
    }
  }
  .hover\\:text-muted-foreground\\/80 {
    &:hover {
      @media (hover: hover) {
        color: var(--muted-foreground);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--muted-foreground) 80%, transparent);
        }
      }
    }
  }
  .hover\\:text-primary-foreground {
    &:hover {
      @media (hover: hover) {
        color: var(--primary-foreground);
      }
    }
  }
  .hover\\:text-primary\\/80 {
    &:hover {
      @media (hover: hover) {
        color: var(--primary);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--primary) 80%, transparent);
        }
      }
    }
  }
  .hover\\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .hover\\:opacity-95 {
    &:hover {
      @media (hover: hover) {
        opacity: 95%;
      }
    }
  }
  .hover\\:opacity-100 {
    &:hover {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .focus\\:bg-accent {
    &:focus {
      background-color: var(--accent);
    }
  }
  .focus\\:text-accent-foreground {
    &:focus {
      color: var(--accent-foreground);
    }
  }
  .focus\\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\\:ring-blue-500 {
    &:focus {
      --tw-ring-color: var(--color-blue-500);
    }
  }
  .focus\\:ring-primary {
    &:focus {
      --tw-ring-color: var(--primary);
    }
  }
  .focus\\:ring-ring {
    &:focus {
      --tw-ring-color: var(--ring);
    }
  }
  .focus\\:ring-offset-2 {
    &:focus {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus\\:outline-hidden {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
  }
  .focus\\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .focus-visible\\:border-green-500 {
    &:focus-visible {
      border-color: var(--color-green-500);
    }
  }
  .focus-visible\\:border-ring {
    &:focus-visible {
      border-color: var(--ring);
    }
  }
  .focus-visible\\:border-yellow-500 {
    &:focus-visible {
      border-color: var(--color-yellow-500);
    }
  }
  .focus-visible\\:ring-2 {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\\:ring-\\[3px\\] {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\\:ring-destructive\\/20 {
    &:focus-visible {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
    }
  }
  .focus-visible\\:ring-ring {
    &:focus-visible {
      --tw-ring-color: var(--ring);
    }
  }
  .focus-visible\\:ring-ring\\/50 {
    &:focus-visible {
      --tw-ring-color: var(--ring);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
      }
    }
  }
  .focus-visible\\:ring-offset-2 {
    &:focus-visible {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus-visible\\:outline-none {
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .disabled\\:pointer-events-none {
    &:disabled {
      pointer-events: none;
    }
  }
  .disabled\\:cursor-not-allowed {
    &:disabled {
      cursor: not-allowed;
    }
  }
  .disabled\\:opacity-50 {
    &:disabled {
      opacity: 50%;
    }
  }
  .has-data-\\[slot\\=card-action\\]\\:grid-cols-\\[1fr_auto\\] {
    &:has(*[data-slot="card-action"]) {
      grid-template-columns: 1fr auto;
    }
  }
  .has-\\[\\>svg\\]\\:grid-cols-\\[calc\\(var\\(--spacing\\)\\*4\\)_1fr\\] {
    &:has(>svg) {
      grid-template-columns: calc(var(--spacing) * 4) 1fr;
    }
  }
  .has-\\[\\>svg\\]\\:gap-x-3 {
    &:has(>svg) {
      column-gap: calc(var(--spacing) * 3);
    }
  }
  .has-\\[\\>svg\\]\\:px-2\\.5 {
    &:has(>svg) {
      padding-inline: calc(var(--spacing) * 2.5);
    }
  }
  .has-\\[\\>svg\\]\\:px-3 {
    &:has(>svg) {
      padding-inline: calc(var(--spacing) * 3);
    }
  }
  .has-\\[\\>svg\\]\\:px-4 {
    &:has(>svg) {
      padding-inline: calc(var(--spacing) * 4);
    }
  }
  .aria-invalid\\:border-destructive {
    &[aria-invalid="true"] {
      border-color: var(--destructive);
    }
  }
  .aria-invalid\\:ring-destructive\\/20 {
    &[aria-invalid="true"] {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
    }
  }
  .data-\\[disabled\\]\\:pointer-events-none {
    &[data-disabled] {
      pointer-events: none;
    }
  }
  .data-\\[disabled\\]\\:opacity-50 {
    &[data-disabled] {
      opacity: 50%;
    }
  }
  .data-\\[disabled\\=true\\]\\:pointer-events-none {
    &[data-disabled="true"] {
      pointer-events: none;
    }
  }
  .data-\\[disabled\\=true\\]\\:opacity-50 {
    &[data-disabled="true"] {
      opacity: 50%;
    }
  }
  .data-\\[error\\=true\\]\\:text-destructive {
    &[data-error="true"] {
      color: var(--destructive);
    }
  }
  .data-\\[orientation\\=horizontal\\]\\:h-px {
    &[data-orientation="horizontal"] {
      height: 1px;
    }
  }
  .data-\\[orientation\\=horizontal\\]\\:w-full {
    &[data-orientation="horizontal"] {
      width: 100%;
    }
  }
  .data-\\[orientation\\=vertical\\]\\:h-full {
    &[data-orientation="vertical"] {
      height: 100%;
    }
  }
  .data-\\[orientation\\=vertical\\]\\:w-px {
    &[data-orientation="vertical"] {
      width: 1px;
    }
  }
  .data-\\[placeholder\\]\\:text-muted-foreground {
    &[data-placeholder] {
      color: var(--muted-foreground);
    }
  }
  .data-\\[selected\\=true\\]\\:bg-accent {
    &[data-selected="true"] {
      background-color: var(--accent);
    }
  }
  .data-\\[selected\\=true\\]\\:text-accent-foreground {
    &[data-selected="true"] {
      color: var(--accent-foreground);
    }
  }
  .data-\\[side\\=bottom\\]\\:translate-y-1 {
    &[data-side="bottom"] {
      --tw-translate-y: calc(var(--spacing) * 1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\\[side\\=bottom\\]\\:slide-in-from-top-2 {
    &[data-side="bottom"] {
      --tw-enter-translate-y: calc(2*var(--spacing)*-1);
    }
  }
  .data-\\[side\\=left\\]\\:-translate-x-1 {
    &[data-side="left"] {
      --tw-translate-x: calc(var(--spacing) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\\[side\\=left\\]\\:slide-in-from-right-2 {
    &[data-side="left"] {
      --tw-enter-translate-x: calc(2*var(--spacing));
    }
  }
  .data-\\[side\\=right\\]\\:translate-x-1 {
    &[data-side="right"] {
      --tw-translate-x: calc(var(--spacing) * 1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\\[side\\=right\\]\\:slide-in-from-left-2 {
    &[data-side="right"] {
      --tw-enter-translate-x: calc(2*var(--spacing)*-1);
    }
  }
  .data-\\[side\\=top\\]\\:-translate-y-1 {
    &[data-side="top"] {
      --tw-translate-y: calc(var(--spacing) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\\[side\\=top\\]\\:slide-in-from-bottom-2 {
    &[data-side="top"] {
      --tw-enter-translate-y: calc(2*var(--spacing));
    }
  }
  .\\*\\:data-\\[slot\\=alert-description\\]\\:text-destructive\\/90 {
    :is(& > *) {
      &[data-slot="alert-description"] {
        color: var(--destructive);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--destructive) 90%, transparent);
        }
      }
    }
  }
  .\\*\\*\\:data-\\[slot\\=command-input-wrapper\\]\\:h-12 {
    :is(& *) {
      &[data-slot="command-input-wrapper"] {
        height: calc(var(--spacing) * 12);
      }
    }
  }
  .\\*\\:data-\\[slot\\=select-value\\]\\:line-clamp-1 {
    :is(& > *) {
      &[data-slot="select-value"] {
        overflow: hidden;
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 1;
      }
    }
  }
  .\\*\\:data-\\[slot\\=select-value\\]\\:flex {
    :is(& > *) {
      &[data-slot="select-value"] {
        display: flex;
      }
    }
  }
  .\\*\\:data-\\[slot\\=select-value\\]\\:items-center {
    :is(& > *) {
      &[data-slot="select-value"] {
        align-items: center;
      }
    }
  }
  .\\*\\:data-\\[slot\\=select-value\\]\\:gap-2 {
    :is(& > *) {
      &[data-slot="select-value"] {
        gap: calc(var(--spacing) * 2);
      }
    }
  }
  .data-\\[state\\=active\\]\\:bg-background {
    &[data-state="active"] {
      background-color: var(--background);
    }
  }
  .data-\\[state\\=active\\]\\:text-foreground {
    &[data-state="active"] {
      color: var(--foreground);
    }
  }
  .data-\\[state\\=active\\]\\:shadow-sm {
    &[data-state="active"] {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .data-\\[state\\=checked\\]\\:translate-x-\\[calc\\(100\\%-2px\\)\\] {
    &[data-state="checked"] {
      --tw-translate-x: calc(100% - 2px);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\\[state\\=checked\\]\\:bg-green-500 {
    &[data-state="checked"] {
      background-color: var(--color-green-500);
    }
  }
  .data-\\[state\\=checked\\]\\:bg-orange-500 {
    &[data-state="checked"] {
      background-color: var(--color-orange-500);
    }
  }
  .data-\\[state\\=checked\\]\\:bg-primary {
    &[data-state="checked"] {
      background-color: var(--primary);
    }
  }
  .data-\\[state\\=checked\\]\\:bg-purple-500 {
    &[data-state="checked"] {
      background-color: var(--color-purple-500);
    }
  }
  .data-\\[state\\=closed\\]\\:animate-out {
    &[data-state="closed"] {
      animation: exit var(--tw-animation-duration,var(--tw-duration,.15s))var(--tw-ease,ease)var(--tw-animation-delay,0s)var(--tw-animation-iteration-count,1)var(--tw-animation-direction,normal)var(--tw-animation-fill-mode,none);
    }
  }
  .data-\\[state\\=closed\\]\\:fade-out-0 {
    &[data-state="closed"] {
      --tw-exit-opacity: calc(0/100);
      --tw-exit-opacity: 0;
    }
  }
  .data-\\[state\\=closed\\]\\:zoom-out-95 {
    &[data-state="closed"] {
      --tw-exit-scale: calc(95*1%);
      --tw-exit-scale: .95;
    }
  }
  .data-\\[state\\=open\\]\\:animate-in {
    &[data-state="open"] {
      animation: enter var(--tw-animation-duration,var(--tw-duration,.15s))var(--tw-ease,ease)var(--tw-animation-delay,0s)var(--tw-animation-iteration-count,1)var(--tw-animation-direction,normal)var(--tw-animation-fill-mode,none);
    }
  }
  .data-\\[state\\=open\\]\\:bg-accent {
    &[data-state="open"] {
      background-color: var(--accent);
    }
  }
  .data-\\[state\\=open\\]\\:text-muted-foreground {
    &[data-state="open"] {
      color: var(--muted-foreground);
    }
  }
  .data-\\[state\\=open\\]\\:fade-in-0 {
    &[data-state="open"] {
      --tw-enter-opacity: calc(0/100);
      --tw-enter-opacity: 0;
    }
  }
  .data-\\[state\\=open\\]\\:zoom-in-95 {
    &[data-state="open"] {
      --tw-enter-scale: calc(95*1%);
      --tw-enter-scale: .95;
    }
  }
  .data-\\[state\\=selected\\]\\:bg-muted {
    &[data-state="selected"] {
      background-color: var(--muted);
    }
  }
  .data-\\[state\\=unchecked\\]\\:translate-x-0 {
    &[data-state="unchecked"] {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\\[state\\=unchecked\\]\\:bg-input {
    &[data-state="unchecked"] {
      background-color: var(--input);
    }
  }
  .sm\\:block {
    @media (width >= 40rem) {
      display: block;
    }
  }
  .sm\\:hidden {
    @media (width >= 40rem) {
      display: none;
    }
  }
  .sm\\:h-6 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 6);
    }
  }
  .sm\\:h-10 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 10);
    }
  }
  .sm\\:w-20 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 20);
    }
  }
  .sm\\:max-w-\\[425px\\] {
    @media (width >= 40rem) {
      max-width: 425px;
    }
  }
  .sm\\:max-w-lg {
    @media (width >= 40rem) {
      max-width: var(--container-lg);
    }
  }
  .sm\\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\\:grid-cols-3 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .sm\\:grid-cols-6 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(6, minmax(0, 1fr));
    }
  }
  .sm\\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\\:items-center {
    @media (width >= 40rem) {
      align-items: center;
    }
  }
  .sm\\:justify-end {
    @media (width >= 40rem) {
      justify-content: flex-end;
    }
  }
  .sm\\:gap-4 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 4);
    }
  }
  .sm\\:gap-6 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 6);
    }
  }
  .sm\\:space-y-0 {
    @media (width >= 40rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .sm\\:space-y-6 {
    @media (width >= 40rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .sm\\:p-4 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 4);
    }
  }
  .sm\\:p-6 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 6);
    }
  }
  .sm\\:p-8 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 8);
    }
  }
  .sm\\:px-6 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .sm\\:text-left {
    @media (width >= 40rem) {
      text-align: left;
    }
  }
  .sm\\:text-2xl {
    @media (width >= 40rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .sm\\:text-3xl {
    @media (width >= 40rem) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .sm\\:text-sm {
    @media (width >= 40rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .sm\\:text-xl {
    @media (width >= 40rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .md\\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\\:grid-cols-4 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .md\\:text-sm {
    @media (width >= 48rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .lg\\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .lg\\:grid-cols-4 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .lg\\:space-y-8 {
    @media (width >= 64rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .lg\\:p-8 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 8);
    }
  }
  .lg\\:px-8 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .lg\\:text-2xl {
    @media (width >= 64rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .lg\\:text-4xl {
    @media (width >= 64rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .dark\\:border-input {
    &:is(.dark *) {
      border-color: var(--input);
    }
  }
  .dark\\:bg-destructive\\/60 {
    &:is(.dark *) {
      background-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
      }
    }
  }
  .dark\\:bg-gray-800 {
    &:is(.dark *) {
      background-color: var(--color-gray-800);
    }
  }
  .dark\\:bg-gray-900 {
    &:is(.dark *) {
      background-color: var(--color-gray-900);
    }
  }
  .dark\\:bg-input\\/30 {
    &:is(.dark *) {
      background-color: var(--input);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--input) 30%, transparent);
      }
    }
  }
  .dark\\:bg-primary\\/15 {
    &:is(.dark *) {
      background-color: var(--primary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--primary) 15%, transparent);
      }
    }
  }
  .dark\\:text-gray-400 {
    &:is(.dark *) {
      color: var(--color-gray-400);
    }
  }
  .dark\\:hover\\:bg-accent\\/50 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--accent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--accent) 50%, transparent);
          }
        }
      }
    }
  }
  .dark\\:hover\\:bg-input\\/50 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--input);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--input) 50%, transparent);
          }
        }
      }
    }
  }
  .dark\\:focus-visible\\:ring-destructive\\/40 {
    &:is(.dark *) {
      &:focus-visible {
        --tw-ring-color: var(--destructive);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
        }
      }
    }
  }
  .dark\\:aria-invalid\\:ring-destructive\\/40 {
    &:is(.dark *) {
      &[aria-invalid="true"] {
        --tw-ring-color: var(--destructive);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
        }
      }
    }
  }
  .dark\\:data-\\[state\\=checked\\]\\:bg-primary-foreground {
    &:is(.dark *) {
      &[data-state="checked"] {
        background-color: var(--primary-foreground);
      }
    }
  }
  .dark\\:data-\\[state\\=unchecked\\]\\:bg-foreground {
    &:is(.dark *) {
      &[data-state="unchecked"] {
        background-color: var(--foreground);
      }
    }
  }
  .dark\\:data-\\[state\\=unchecked\\]\\:bg-input\\/80 {
    &:is(.dark *) {
      &[data-state="unchecked"] {
        background-color: var(--input);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--input) 80%, transparent);
        }
      }
    }
  }
  .\\[\\&_\\[cmdk-group-heading\\]\\]\\:px-2 {
    & [cmdk-group-heading] {
      padding-inline: calc(var(--spacing) * 2);
    }
  }
  .\\[\\&_\\[cmdk-group-heading\\]\\]\\:py-1\\.5 {
    & [cmdk-group-heading] {
      padding-block: calc(var(--spacing) * 1.5);
    }
  }
  .\\[\\&_\\[cmdk-group-heading\\]\\]\\:text-xs {
    & [cmdk-group-heading] {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }
  .\\[\\&_\\[cmdk-group-heading\\]\\]\\:font-medium {
    & [cmdk-group-heading] {
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
    }
  }
  .\\[\\&_\\[cmdk-group-heading\\]\\]\\:text-muted-foreground {
    & [cmdk-group-heading] {
      color: var(--muted-foreground);
    }
  }
  .\\[\\&_\\[cmdk-group\\]\\]\\:px-2 {
    & [cmdk-group] {
      padding-inline: calc(var(--spacing) * 2);
    }
  }
  .\\[\\&_\\[cmdk-group\\]\\:not\\(\\[hidden\\]\\)_\\~\\[cmdk-group\\]\\]\\:pt-0 {
    & [cmdk-group]:not([hidden]) ~[cmdk-group] {
      padding-top: calc(var(--spacing) * 0);
    }
  }
  .\\[\\&_\\[cmdk-input-wrapper\\]_svg\\]\\:h-5 {
    & [cmdk-input-wrapper] svg {
      height: calc(var(--spacing) * 5);
    }
  }
  .\\[\\&_\\[cmdk-input-wrapper\\]_svg\\]\\:w-5 {
    & [cmdk-input-wrapper] svg {
      width: calc(var(--spacing) * 5);
    }
  }
  .\\[\\&_\\[cmdk-input\\]\\]\\:h-12 {
    & [cmdk-input] {
      height: calc(var(--spacing) * 12);
    }
  }
  .\\[\\&_\\[cmdk-item\\]\\]\\:px-2 {
    & [cmdk-item] {
      padding-inline: calc(var(--spacing) * 2);
    }
  }
  .\\[\\&_\\[cmdk-item\\]\\]\\:py-3 {
    & [cmdk-item] {
      padding-block: calc(var(--spacing) * 3);
    }
  }
  .\\[\\&_\\[cmdk-item\\]_svg\\]\\:h-5 {
    & [cmdk-item] svg {
      height: calc(var(--spacing) * 5);
    }
  }
  .\\[\\&_\\[cmdk-item\\]_svg\\]\\:w-5 {
    & [cmdk-item] svg {
      width: calc(var(--spacing) * 5);
    }
  }
  .\\[\\&_header\\]\\:rounded-lg {
    & header {
      border-radius: var(--radius);
    }
  }
  .\\[\\&_header\\]\\:border {
    & header {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .\\[\\&_p\\]\\:leading-relaxed {
    & p {
      --tw-leading: var(--leading-relaxed);
      line-height: var(--leading-relaxed);
    }
  }
  .\\[\\&_svg\\]\\:pointer-events-none {
    & svg {
      pointer-events: none;
    }
  }
  .\\[\\&_svg\\]\\:shrink-0 {
    & svg {
      flex-shrink: 0;
    }
  }
  .\\[\\&_svg\\:not\\(\\[class\\*\\=\\'size-\\'\\]\\)\\]\\:size-4 {
    & svg:not([class*='size-']) {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
  }
  .\\[\\&_svg\\:not\\(\\[class\\*\\=\\'text-\\'\\]\\)\\]\\:text-muted-foreground {
    & svg:not([class*='text-']) {
      color: var(--muted-foreground);
    }
  }
  .\\[\\&_tr\\]\\:border-b {
    & tr {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 1px;
    }
  }
  .\\[\\&_tr\\:last-child\\]\\:border-0 {
    & tr:last-child {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
  }
  .\\[\\&\\:has\\(\\[role\\=checkbox\\]\\)\\]\\:pr-0 {
    &:has([role=checkbox]) {
      padding-right: calc(var(--spacing) * 0);
    }
  }
  .\\[\\.border-b\\]\\:pb-6 {
    &:is(.border-b) {
      padding-bottom: calc(var(--spacing) * 6);
    }
  }
  .\\[\\.border-t\\]\\:pt-6 {
    &:is(.border-t) {
      padding-top: calc(var(--spacing) * 6);
    }
  }
  .\\*\\:\\[span\\]\\:last\\:flex {
    :is(& > *) {
      &:is(span) {
        &:last-child {
          display: flex;
        }
      }
    }
  }
  .\\*\\:\\[span\\]\\:last\\:items-center {
    :is(& > *) {
      &:is(span) {
        &:last-child {
          align-items: center;
        }
      }
    }
  }
  .\\*\\:\\[span\\]\\:last\\:gap-2 {
    :is(& > *) {
      &:is(span) {
        &:last-child {
          gap: calc(var(--spacing) * 2);
        }
      }
    }
  }
  .\\[\\&\\>\\[role\\=checkbox\\]\\]\\:translate-y-\\[2px\\] {
    &>[role=checkbox] {
      --tw-translate-y: 2px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .\\[\\&\\>svg\\]\\:pointer-events-none {
    &>svg {
      pointer-events: none;
    }
  }
  .\\[\\&\\>svg\\]\\:size-3 {
    &>svg {
      width: calc(var(--spacing) * 3);
      height: calc(var(--spacing) * 3);
    }
  }
  .\\[\\&\\>svg\\]\\:size-4 {
    &>svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
  }
  .\\[\\&\\>svg\\]\\:translate-y-0\\.5 {
    &>svg {
      --tw-translate-y: calc(var(--spacing) * 0.5);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .\\[\\&\\>svg\\]\\:text-current {
    &>svg {
      color: currentcolor;
    }
  }
  .\\[\\&\\>tr\\]\\:last\\:border-b-0 {
    &>tr {
      &:last-child {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 0px;
      }
    }
  }
  .\\[a\\&\\]\\:hover\\:bg-accent {
    a& {
      &:hover {
        @media (hover: hover) {
          background-color: var(--accent);
        }
      }
    }
  }
  .\\[a\\&\\]\\:hover\\:bg-destructive\\/90 {
    a& {
      &:hover {
        @media (hover: hover) {
          background-color: var(--destructive);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
          }
        }
      }
    }
  }
  .\\[a\\&\\]\\:hover\\:bg-primary\\/90 {
    a& {
      &:hover {
        @media (hover: hover) {
          background-color: var(--primary);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--primary) 90%, transparent);
          }
        }
      }
    }
  }
  .\\[a\\&\\]\\:hover\\:bg-secondary\\/90 {
    a& {
      &:hover {
        @media (hover: hover) {
          background-color: var(--secondary);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--secondary) 90%, transparent);
          }
        }
      }
    }
  }
  .\\[a\\&\\]\\:hover\\:text-accent-foreground {
    a& {
      &:hover {
        @media (hover: hover) {
          color: var(--accent-foreground);
        }
      }
    }
  }
}
@property --tw-animation-delay {
  syntax: "*";
  inherits: false;
  initial-value: 0s;
}
@property --tw-animation-direction {
  syntax: "*";
  inherits: false;
  initial-value: normal;
}
@property --tw-animation-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-animation-fill-mode {
  syntax: "*";
  inherits: false;
  initial-value: none;
}
@property --tw-animation-iteration-count {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-enter-opacity {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-enter-rotate {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-enter-scale {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-enter-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-enter-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-exit-opacity {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-exit-rotate {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-exit-scale {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-exit-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-exit-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@layer tokens {
  :root {
    --space-0: 0;
    --space-0_5: 0.125rem;
    --space-1: 0.25rem;
    --space-1_5: 0.375rem;
    --space-2: 0.5rem;
    --space-2_5: 0.625rem;
    --space-3: 0.75rem;
    --space-3_5: 0.875rem;
    --space-4: 1rem;
    --space-5: 1.25rem;
    --space-6: 1.5rem;
    --space-7: 1.75rem;
    --space-8: 2rem;
    --space-9: 2.25rem;
    --space-10: 2.5rem;
    --space-11: 2.75rem;
    --space-12: 3rem;
    --text-xxs: 0.625rem;
    --text-xxs-lh: 1rem;
    --text-xs: 0.75rem;
    --text-xs-lh: 1rem;
    --text-sm: 0.875rem;
    --text-sm-lh: 1.25rem;
    --text-base: 1rem;
    --text-base-lh: 1.5rem;
    --text-lg: 1.125rem;
    --text-lg-lh: 1.75rem;
    --text-xl: 1.25rem;
    --text-xl-lh: 1.75rem;
    --text-2xl: 1.5rem;
    --text-2xl-lh: 2rem;
    --text-3xl: 1.875rem;
    --text-3xl-lh: 2.25rem;
    --text-4xl: 2.25rem;
    --text-4xl-lh: 2.5rem;
    --text-5xl: 3rem;
    --text-5xl-lh: 1;
    --text-6xl: 3.75rem;
    --text-6xl-lh: 1;
    --font-normal: 400;
    --font-medium: 500;
    --font-semibold: 600;
    --font-bold: 700;
    --tracking-tighter: -0.05em;
    --tracking-tight: -0.025em;
    --tracking-normal: 0;
    --tracking-wide: 0.025em;
    --tracking-wider: 0.05em;
    --tracking-widest: 0.1em;
    --text-body-xs: var(--text-xs);
    --text-body-xs-lh: var(--text-xs-lh);
    --text-body-sm: var(--text-sm);
    --text-body-sm-lh: var(--text-sm-lh);
    --text-body-base: var(--text-base);
    --text-body-base-lh: var(--text-base-lh);
    --text-body-lg: var(--text-lg);
    --text-body-lg-lh: var(--text-lg-lh);
    --text-heading-sm: var(--text-xl);
    --text-heading-sm-lh: var(--text-xl-lh);
    --text-heading-base: var(--text-2xl);
    --text-heading-base-lh: var(--text-2xl-lh);
    --text-heading-lg: var(--text-3xl);
    --text-heading-lg-lh: var(--text-3xl-lh);
    --text-heading-xl: var(--text-4xl);
    --text-heading-xl-lh: var(--text-4xl-lh);
    --shadow-xs: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --shadow-sm: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
    --shadow-2xl: 0 25px 50px -12px rgb(0 0 0 / 0.25);
    --shadow-inner: inset 0 2px 4px 0 rgb(0 0 0 / 0.05);
    --shadow-none: 0 0 #0000;
    --duration-instant: 0ms;
    --duration-fast: 150ms;
    --duration-normal: 250ms;
    --duration-slow: 350ms;
    --duration-slower: 500ms;
    --duration-slowest: 1000ms;
    --ease-linear: linear;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --ease-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);
    --ease-smooth: cubic-bezier(0.25, 0.46, 0.45, 0.94);
    --animate-pulse-subtle: pulse-subtle 2s cubic-bezier(0.4, 0, 0.6, 1)
      infinite;
    --animate-spin-slow: spin 3s linear infinite;
    --animate-fade-in: fade-in var(--duration-normal) var(--ease-out);
    --animate-slide-up: slide-up var(--duration-normal) var(--ease-out);
    --animate-scale-in: scale-in var(--duration-fast) var(--ease-out);
    --z-auto: auto;
    --z-0: 0;
    --z-10: 10;
    --z-20: 20;
    --z-30: 30;
    --z-40: 40;
    --z-50: 50;
    --z-modal: 100;
    --z-popover: 200;
    --z-dropdown: 300;
    --z-tooltip: 400;
    --z-notification: 500;
    --input-height-sm: 2rem;
    --input-height-default: 2.25rem;
    --input-height-lg: 2.5rem;
    --ring-width: 2px;
    --ring-offset: 2px;
    --opacity-disabled: 0.5;
    --hover-opacity: 0.95;
    --active-opacity: 0.9;
    --icon-xs: 0.75rem;
    --icon-sm: 0.875rem;
    --icon-base: 1rem;
    --icon-lg: 1.25rem;
    --icon-xl: 1.5rem;
    --screen-sm: 640px;
    --screen-md: 768px;
    --screen-lg: 1024px;
    --screen-xl: 1280px;
    --screen-2xl: 1536px;
    --color-success: oklch(0.6 0.118 184.704);
    --color-success-foreground: oklch(1 0 0);
    --color-warning: oklch(0.828 0.189 84.429);
    --color-warning-foreground: oklch(0.129 0.042 264.695);
    --color-error: var(--destructive);
    --color-error-foreground: var(--primary-foreground);
    --color-info: oklch(0.488 0.243 264.376);
    --color-info-foreground: oklch(1 0 0);
    --color-success-soft: oklch(0.6 0.118 184.704 / 0.1);
    --color-warning-soft: oklch(0.828 0.189 84.429 / 0.1);
    --color-error-soft: oklch(0.577 0.245 27.325 / 0.1);
    --color-info-soft: oklch(0.488 0.243 264.376 / 0.1);
  }
}
.dark {
  --color-success: oklch(0.696 0.17 162.48);
  --color-warning: oklch(0.769 0.188 70.08);
  --color-info: oklch(0.6 0.118 184.704);
  --color-success-soft: oklch(0.696 0.17 162.48 / 0.1);
  --color-warning-soft: oklch(0.769 0.188 70.08 / 0.1);
  --color-error-soft: oklch(0.704 0.191 22.216 / 0.1);
  --color-info-soft: oklch(0.6 0.118 184.704 / 0.1);
}
@layer utilities {
  .focus-ring {
    --tw-outline-style: none;
    outline-style: none;
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:focus-visible {
      --tw-ring-color: var(--ring);
    }
    &:focus-visible {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .disabled-state {
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
  }
  .transition-base {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-timing-function: var(--ease-in-out);
    transition-duration: var(--duration-normal);
  }
  .elevation-low {
    box-shadow: var(--shadow-sm);
  }
  .elevation-medium {
    box-shadow: var(--shadow-md);
  }
  .elevation-high {
    box-shadow: var(--shadow-lg);
  }
  .text-body-sm {
    font-size: var(--text-sm);
    line-height: var(--text-sm-lh);
    letter-spacing: var(--tracking-normal);
  }
  .text-body {
    font-size: var(--text-base);
    line-height: var(--text-base-lh);
    letter-spacing: var(--tracking-normal);
  }
  .text-body-lg {
    font-size: var(--text-lg);
    line-height: var(--text-lg-lh);
    letter-spacing: var(--tracking-normal);
  }
  .text-heading-sm {
    font-size: var(--text-xl);
    line-height: var(--text-xl-lh);
    font-weight: var(--font-semibold);
    letter-spacing: var(--tracking-tight);
  }
  .text-heading {
    font-size: var(--text-2xl);
    line-height: var(--text-2xl-lh);
    font-weight: var(--font-semibold);
    letter-spacing: var(--tracking-tight);
  }
  .text-heading-lg {
    font-size: var(--text-3xl);
    line-height: var(--text-3xl-lh);
    font-weight: var(--font-bold);
    letter-spacing: var(--tracking-tight);
  }
  .form-field {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .form-group {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  @screen sm {
    .sm\\:space-responsive {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  @screen md {
    .md\\:space-responsive {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
}
:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.129 0.042 264.695);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.129 0.042 264.695);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.129 0.042 264.695);
  --primary: oklch(0.208 0.042 265.755);
  --primary-foreground: oklch(0.984 0.003 247.858);
  --secondary: oklch(0.968 0.007 247.896);
  --secondary-foreground: oklch(0.208 0.042 265.755);
  --muted: oklch(0.968 0.007 247.896);
  --muted-foreground: oklch(0.554 0.046 257.417);
  --accent: oklch(0.968 0.007 247.896);
  --accent-foreground: oklch(0.208 0.042 265.755);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.929 0.013 255.508);
  --input: oklch(0.929 0.013 255.508);
  --ring: oklch(0.704 0.04 256.788);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.984 0.003 247.858);
  --sidebar-foreground: oklch(0.129 0.042 264.695);
  --sidebar-primary: oklch(0.208 0.042 265.755);
  --sidebar-primary-foreground: oklch(0.984 0.003 247.858);
  --sidebar-accent: oklch(0.968 0.007 247.896);
  --sidebar-accent-foreground: oklch(0.208 0.042 265.755);
  --sidebar-border: oklch(0.929 0.013 255.508);
  --sidebar-ring: oklch(0.704 0.04 256.788);
  --color-success: oklch(0.6 0.118 184.704);
  --color-success-foreground: oklch(1 0 0);
  --color-success-soft: oklch(0.6 0.118 184.704 / 0.1);
  --color-error: oklch(0.577 0.245 27.325);
  --color-error-foreground: oklch(0.984 0.003 247.858);
  --color-error-soft: oklch(0.577 0.245 27.325 / 0.1);
  --color-warning: oklch(0.828 0.189 84.429);
  --color-warning-foreground: oklch(0.129 0.042 264.695);
  --color-warning-soft: oklch(0.828 0.189 84.429 / 0.1);
  --color-info: oklch(0.488 0.243 264.376);
  --color-info-foreground: oklch(1 0 0);
  --color-info-soft: oklch(0.488 0.243 264.376 / 0.1);
}
.dark {
  --background: oklch(0.129 0.042 264.695);
  --foreground: oklch(0.984 0.003 247.858);
  --card: oklch(0.208 0.042 265.755);
  --card-foreground: oklch(0.984 0.003 247.858);
  --popover: oklch(0.208 0.042 265.755);
  --popover-foreground: oklch(0.984 0.003 247.858);
  --primary: oklch(0.929 0.013 255.508);
  --primary-foreground: oklch(0.208 0.042 265.755);
  --secondary: oklch(0.279 0.041 260.031);
  --secondary-foreground: oklch(0.984 0.003 247.858);
  --muted: oklch(0.279 0.041 260.031);
  --muted-foreground: oklch(0.704 0.04 256.788);
  --accent: oklch(0.279 0.041 260.031);
  --accent-foreground: oklch(0.984 0.003 247.858);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.551 0.027 264.364);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.208 0.042 265.755);
  --sidebar-foreground: oklch(0.984 0.003 247.858);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.984 0.003 247.858);
  --sidebar-accent: oklch(0.279 0.041 260.031);
  --sidebar-accent-foreground: oklch(0.984 0.003 247.858);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.551 0.027 264.364);
  --color-success: oklch(0.696 0.17 162.48);
  --color-success-foreground: oklch(1 0 0);
  --color-success-soft: oklch(0.696 0.17 162.48 / 0.1);
  --color-error: oklch(0.704 0.191 22.216);
  --color-error-foreground: oklch(0.984 0.003 247.858);
  --color-error-soft: oklch(0.704 0.191 22.216 / 0.1);
  --color-warning: oklch(0.769 0.188 70.08);
  --color-warning-foreground: oklch(0.129 0.042 264.695);
  --color-warning-soft: oklch(0.769 0.188 70.08 / 0.1);
  --color-info: oklch(0.6 0.118 184.704);
  --color-info-foreground: oklch(1 0 0);
  --color-info-soft: oklch(0.6 0.118 184.704 / 0.1);
}
@layer base {
  * {
    border-color: var(--border);
    outline-color: var(--ring);
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }
  body {
    background-color: var(--background);
    color: var(--foreground);
  }
}
@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}
.animate-shimmer {
  animation: shimmer 2s infinite;
}
.scrolling-text {
  transition: transform 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  will-change: transform;
  transform-origin: top left;
  backface-visibility: hidden;
  perspective: 1000px;
}
.scrolling-text-line {
  height: 2rem;
  line-height: 2rem;
  display: flex;
  align-items: center;
  contain: layout style;
  transform: translateZ(0);
}
.typing-container {
  contain: layout style paint;
  transform: translateZ(0);
  isolation: isolate;
}
.ultra-smooth-text {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeSpeed;
  transform: translateZ(0);
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}
@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity,1);
    transform: translate3d(var(--tw-enter-translate-x,0),var(--tw-enter-translate-y,0),0)scale3d(var(--tw-enter-scale,1),var(--tw-enter-scale,1),var(--tw-enter-scale,1))rotate(var(--tw-enter-rotate,0));
  }
}
@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity,1);
    transform: translate3d(var(--tw-exit-translate-x,0),var(--tw-exit-translate-y,0),0)scale3d(var(--tw-exit-scale,1),var(--tw-exit-scale,1),var(--tw-exit-scale,1))rotate(var(--tw-exit-rotate,0));
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-animation-delay: 0s;
      --tw-animation-direction: normal;
      --tw-animation-duration: initial;
      --tw-animation-fill-mode: none;
      --tw-animation-iteration-count: 1;
      --tw-enter-opacity: 1;
      --tw-enter-rotate: 0;
      --tw-enter-scale: 1;
      --tw-enter-translate-x: 0;
      --tw-enter-translate-y: 0;
      --tw-exit-opacity: 1;
      --tw-exit-rotate: 0;
      --tw-exit-scale: 1;
      --tw-exit-translate-x: 0;
      --tw-exit-translate-y: 0;
    }
  }
}
`, "",{"version":3,"sources":["<no source>","webpack://./../../node_modules/tailwindcss/index.css","webpack://./src/app/globals.css","webpack://./../../node_modules/tw-animate-css/dist/tw-animate.css","webpack://./src/styles/design-tokens.css"],"names":[],"mappings":"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","sourcesContent":[null,"@layer theme, base, components, utilities;\n\n@layer theme {\n  @theme default {\n    --font-sans:\n      ui-sans-serif, system-ui, sans-serif, \"Apple Color Emoji\",\n      \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n    --font-serif: ui-serif, Georgia, Cambria, \"Times New Roman\", Times, serif;\n    --font-mono:\n      ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\",\n      \"Courier New\", monospace;\n\n    --color-red-50: oklch(97.1% 0.013 17.38);\n    --color-red-100: oklch(93.6% 0.032 17.717);\n    --color-red-200: oklch(88.5% 0.062 18.334);\n    --color-red-300: oklch(80.8% 0.114 19.571);\n    --color-red-400: oklch(70.4% 0.191 22.216);\n    --color-red-500: oklch(63.7% 0.237 25.331);\n    --color-red-600: oklch(57.7% 0.245 27.325);\n    --color-red-700: oklch(50.5% 0.213 27.518);\n    --color-red-800: oklch(44.4% 0.177 26.899);\n    --color-red-900: oklch(39.6% 0.141 25.723);\n    --color-red-950: oklch(25.8% 0.092 26.042);\n\n    --color-orange-50: oklch(98% 0.016 73.684);\n    --color-orange-100: oklch(95.4% 0.038 75.164);\n    --color-orange-200: oklch(90.1% 0.076 70.697);\n    --color-orange-300: oklch(83.7% 0.128 66.29);\n    --color-orange-400: oklch(75% 0.183 55.934);\n    --color-orange-500: oklch(70.5% 0.213 47.604);\n    --color-orange-600: oklch(64.6% 0.222 41.116);\n    --color-orange-700: oklch(55.3% 0.195 38.402);\n    --color-orange-800: oklch(47% 0.157 37.304);\n    --color-orange-900: oklch(40.8% 0.123 38.172);\n    --color-orange-950: oklch(26.6% 0.079 36.259);\n\n    --color-amber-50: oklch(98.7% 0.022 95.277);\n    --color-amber-100: oklch(96.2% 0.059 95.617);\n    --color-amber-200: oklch(92.4% 0.12 95.746);\n    --color-amber-300: oklch(87.9% 0.169 91.605);\n    --color-amber-400: oklch(82.8% 0.189 84.429);\n    --color-amber-500: oklch(76.9% 0.188 70.08);\n    --color-amber-600: oklch(66.6% 0.179 58.318);\n    --color-amber-700: oklch(55.5% 0.163 48.998);\n    --color-amber-800: oklch(47.3% 0.137 46.201);\n    --color-amber-900: oklch(41.4% 0.112 45.904);\n    --color-amber-950: oklch(27.9% 0.077 45.635);\n\n    --color-yellow-50: oklch(98.7% 0.026 102.212);\n    --color-yellow-100: oklch(97.3% 0.071 103.193);\n    --color-yellow-200: oklch(94.5% 0.129 101.54);\n    --color-yellow-300: oklch(90.5% 0.182 98.111);\n    --color-yellow-400: oklch(85.2% 0.199 91.936);\n    --color-yellow-500: oklch(79.5% 0.184 86.047);\n    --color-yellow-600: oklch(68.1% 0.162 75.834);\n    --color-yellow-700: oklch(55.4% 0.135 66.442);\n    --color-yellow-800: oklch(47.6% 0.114 61.907);\n    --color-yellow-900: oklch(42.1% 0.095 57.708);\n    --color-yellow-950: oklch(28.6% 0.066 53.813);\n\n    --color-lime-50: oklch(98.6% 0.031 120.757);\n    --color-lime-100: oklch(96.7% 0.067 122.328);\n    --color-lime-200: oklch(93.8% 0.127 124.321);\n    --color-lime-300: oklch(89.7% 0.196 126.665);\n    --color-lime-400: oklch(84.1% 0.238 128.85);\n    --color-lime-500: oklch(76.8% 0.233 130.85);\n    --color-lime-600: oklch(64.8% 0.2 131.684);\n    --color-lime-700: oklch(53.2% 0.157 131.589);\n    --color-lime-800: oklch(45.3% 0.124 130.933);\n    --color-lime-900: oklch(40.5% 0.101 131.063);\n    --color-lime-950: oklch(27.4% 0.072 132.109);\n\n    --color-green-50: oklch(98.2% 0.018 155.826);\n    --color-green-100: oklch(96.2% 0.044 156.743);\n    --color-green-200: oklch(92.5% 0.084 155.995);\n    --color-green-300: oklch(87.1% 0.15 154.449);\n    --color-green-400: oklch(79.2% 0.209 151.711);\n    --color-green-500: oklch(72.3% 0.219 149.579);\n    --color-green-600: oklch(62.7% 0.194 149.214);\n    --color-green-700: oklch(52.7% 0.154 150.069);\n    --color-green-800: oklch(44.8% 0.119 151.328);\n    --color-green-900: oklch(39.3% 0.095 152.535);\n    --color-green-950: oklch(26.6% 0.065 152.934);\n\n    --color-emerald-50: oklch(97.9% 0.021 166.113);\n    --color-emerald-100: oklch(95% 0.052 163.051);\n    --color-emerald-200: oklch(90.5% 0.093 164.15);\n    --color-emerald-300: oklch(84.5% 0.143 164.978);\n    --color-emerald-400: oklch(76.5% 0.177 163.223);\n    --color-emerald-500: oklch(69.6% 0.17 162.48);\n    --color-emerald-600: oklch(59.6% 0.145 163.225);\n    --color-emerald-700: oklch(50.8% 0.118 165.612);\n    --color-emerald-800: oklch(43.2% 0.095 166.913);\n    --color-emerald-900: oklch(37.8% 0.077 168.94);\n    --color-emerald-950: oklch(26.2% 0.051 172.552);\n\n    --color-teal-50: oklch(98.4% 0.014 180.72);\n    --color-teal-100: oklch(95.3% 0.051 180.801);\n    --color-teal-200: oklch(91% 0.096 180.426);\n    --color-teal-300: oklch(85.5% 0.138 181.071);\n    --color-teal-400: oklch(77.7% 0.152 181.912);\n    --color-teal-500: oklch(70.4% 0.14 182.503);\n    --color-teal-600: oklch(60% 0.118 184.704);\n    --color-teal-700: oklch(51.1% 0.096 186.391);\n    --color-teal-800: oklch(43.7% 0.078 188.216);\n    --color-teal-900: oklch(38.6% 0.063 188.416);\n    --color-teal-950: oklch(27.7% 0.046 192.524);\n\n    --color-cyan-50: oklch(98.4% 0.019 200.873);\n    --color-cyan-100: oklch(95.6% 0.045 203.388);\n    --color-cyan-200: oklch(91.7% 0.08 205.041);\n    --color-cyan-300: oklch(86.5% 0.127 207.078);\n    --color-cyan-400: oklch(78.9% 0.154 211.53);\n    --color-cyan-500: oklch(71.5% 0.143 215.221);\n    --color-cyan-600: oklch(60.9% 0.126 221.723);\n    --color-cyan-700: oklch(52% 0.105 223.128);\n    --color-cyan-800: oklch(45% 0.085 224.283);\n    --color-cyan-900: oklch(39.8% 0.07 227.392);\n    --color-cyan-950: oklch(30.2% 0.056 229.695);\n\n    --color-sky-50: oklch(97.7% 0.013 236.62);\n    --color-sky-100: oklch(95.1% 0.026 236.824);\n    --color-sky-200: oklch(90.1% 0.058 230.902);\n    --color-sky-300: oklch(82.8% 0.111 230.318);\n    --color-sky-400: oklch(74.6% 0.16 232.661);\n    --color-sky-500: oklch(68.5% 0.169 237.323);\n    --color-sky-600: oklch(58.8% 0.158 241.966);\n    --color-sky-700: oklch(50% 0.134 242.749);\n    --color-sky-800: oklch(44.3% 0.11 240.79);\n    --color-sky-900: oklch(39.1% 0.09 240.876);\n    --color-sky-950: oklch(29.3% 0.066 243.157);\n\n    --color-blue-50: oklch(97% 0.014 254.604);\n    --color-blue-100: oklch(93.2% 0.032 255.585);\n    --color-blue-200: oklch(88.2% 0.059 254.128);\n    --color-blue-300: oklch(80.9% 0.105 251.813);\n    --color-blue-400: oklch(70.7% 0.165 254.624);\n    --color-blue-500: oklch(62.3% 0.214 259.815);\n    --color-blue-600: oklch(54.6% 0.245 262.881);\n    --color-blue-700: oklch(48.8% 0.243 264.376);\n    --color-blue-800: oklch(42.4% 0.199 265.638);\n    --color-blue-900: oklch(37.9% 0.146 265.522);\n    --color-blue-950: oklch(28.2% 0.091 267.935);\n\n    --color-indigo-50: oklch(96.2% 0.018 272.314);\n    --color-indigo-100: oklch(93% 0.034 272.788);\n    --color-indigo-200: oklch(87% 0.065 274.039);\n    --color-indigo-300: oklch(78.5% 0.115 274.713);\n    --color-indigo-400: oklch(67.3% 0.182 276.935);\n    --color-indigo-500: oklch(58.5% 0.233 277.117);\n    --color-indigo-600: oklch(51.1% 0.262 276.966);\n    --color-indigo-700: oklch(45.7% 0.24 277.023);\n    --color-indigo-800: oklch(39.8% 0.195 277.366);\n    --color-indigo-900: oklch(35.9% 0.144 278.697);\n    --color-indigo-950: oklch(25.7% 0.09 281.288);\n\n    --color-violet-50: oklch(96.9% 0.016 293.756);\n    --color-violet-100: oklch(94.3% 0.029 294.588);\n    --color-violet-200: oklch(89.4% 0.057 293.283);\n    --color-violet-300: oklch(81.1% 0.111 293.571);\n    --color-violet-400: oklch(70.2% 0.183 293.541);\n    --color-violet-500: oklch(60.6% 0.25 292.717);\n    --color-violet-600: oklch(54.1% 0.281 293.009);\n    --color-violet-700: oklch(49.1% 0.27 292.581);\n    --color-violet-800: oklch(43.2% 0.232 292.759);\n    --color-violet-900: oklch(38% 0.189 293.745);\n    --color-violet-950: oklch(28.3% 0.141 291.089);\n\n    --color-purple-50: oklch(97.7% 0.014 308.299);\n    --color-purple-100: oklch(94.6% 0.033 307.174);\n    --color-purple-200: oklch(90.2% 0.063 306.703);\n    --color-purple-300: oklch(82.7% 0.119 306.383);\n    --color-purple-400: oklch(71.4% 0.203 305.504);\n    --color-purple-500: oklch(62.7% 0.265 303.9);\n    --color-purple-600: oklch(55.8% 0.288 302.321);\n    --color-purple-700: oklch(49.6% 0.265 301.924);\n    --color-purple-800: oklch(43.8% 0.218 303.724);\n    --color-purple-900: oklch(38.1% 0.176 304.987);\n    --color-purple-950: oklch(29.1% 0.149 302.717);\n\n    --color-fuchsia-50: oklch(97.7% 0.017 320.058);\n    --color-fuchsia-100: oklch(95.2% 0.037 318.852);\n    --color-fuchsia-200: oklch(90.3% 0.076 319.62);\n    --color-fuchsia-300: oklch(83.3% 0.145 321.434);\n    --color-fuchsia-400: oklch(74% 0.238 322.16);\n    --color-fuchsia-500: oklch(66.7% 0.295 322.15);\n    --color-fuchsia-600: oklch(59.1% 0.293 322.896);\n    --color-fuchsia-700: oklch(51.8% 0.253 323.949);\n    --color-fuchsia-800: oklch(45.2% 0.211 324.591);\n    --color-fuchsia-900: oklch(40.1% 0.17 325.612);\n    --color-fuchsia-950: oklch(29.3% 0.136 325.661);\n\n    --color-pink-50: oklch(97.1% 0.014 343.198);\n    --color-pink-100: oklch(94.8% 0.028 342.258);\n    --color-pink-200: oklch(89.9% 0.061 343.231);\n    --color-pink-300: oklch(82.3% 0.12 346.018);\n    --color-pink-400: oklch(71.8% 0.202 349.761);\n    --color-pink-500: oklch(65.6% 0.241 354.308);\n    --color-pink-600: oklch(59.2% 0.249 0.584);\n    --color-pink-700: oklch(52.5% 0.223 3.958);\n    --color-pink-800: oklch(45.9% 0.187 3.815);\n    --color-pink-900: oklch(40.8% 0.153 2.432);\n    --color-pink-950: oklch(28.4% 0.109 3.907);\n\n    --color-rose-50: oklch(96.9% 0.015 12.422);\n    --color-rose-100: oklch(94.1% 0.03 12.58);\n    --color-rose-200: oklch(89.2% 0.058 10.001);\n    --color-rose-300: oklch(81% 0.117 11.638);\n    --color-rose-400: oklch(71.2% 0.194 13.428);\n    --color-rose-500: oklch(64.5% 0.246 16.439);\n    --color-rose-600: oklch(58.6% 0.253 17.585);\n    --color-rose-700: oklch(51.4% 0.222 16.935);\n    --color-rose-800: oklch(45.5% 0.188 13.697);\n    --color-rose-900: oklch(41% 0.159 10.272);\n    --color-rose-950: oklch(27.1% 0.105 12.094);\n\n    --color-slate-50: oklch(98.4% 0.003 247.858);\n    --color-slate-100: oklch(96.8% 0.007 247.896);\n    --color-slate-200: oklch(92.9% 0.013 255.508);\n    --color-slate-300: oklch(86.9% 0.022 252.894);\n    --color-slate-400: oklch(70.4% 0.04 256.788);\n    --color-slate-500: oklch(55.4% 0.046 257.417);\n    --color-slate-600: oklch(44.6% 0.043 257.281);\n    --color-slate-700: oklch(37.2% 0.044 257.287);\n    --color-slate-800: oklch(27.9% 0.041 260.031);\n    --color-slate-900: oklch(20.8% 0.042 265.755);\n    --color-slate-950: oklch(12.9% 0.042 264.695);\n\n    --color-gray-50: oklch(98.5% 0.002 247.839);\n    --color-gray-100: oklch(96.7% 0.003 264.542);\n    --color-gray-200: oklch(92.8% 0.006 264.531);\n    --color-gray-300: oklch(87.2% 0.01 258.338);\n    --color-gray-400: oklch(70.7% 0.022 261.325);\n    --color-gray-500: oklch(55.1% 0.027 264.364);\n    --color-gray-600: oklch(44.6% 0.03 256.802);\n    --color-gray-700: oklch(37.3% 0.034 259.733);\n    --color-gray-800: oklch(27.8% 0.033 256.848);\n    --color-gray-900: oklch(21% 0.034 264.665);\n    --color-gray-950: oklch(13% 0.028 261.692);\n\n    --color-zinc-50: oklch(98.5% 0 0);\n    --color-zinc-100: oklch(96.7% 0.001 286.375);\n    --color-zinc-200: oklch(92% 0.004 286.32);\n    --color-zinc-300: oklch(87.1% 0.006 286.286);\n    --color-zinc-400: oklch(70.5% 0.015 286.067);\n    --color-zinc-500: oklch(55.2% 0.016 285.938);\n    --color-zinc-600: oklch(44.2% 0.017 285.786);\n    --color-zinc-700: oklch(37% 0.013 285.805);\n    --color-zinc-800: oklch(27.4% 0.006 286.033);\n    --color-zinc-900: oklch(21% 0.006 285.885);\n    --color-zinc-950: oklch(14.1% 0.005 285.823);\n\n    --color-neutral-50: oklch(98.5% 0 0);\n    --color-neutral-100: oklch(97% 0 0);\n    --color-neutral-200: oklch(92.2% 0 0);\n    --color-neutral-300: oklch(87% 0 0);\n    --color-neutral-400: oklch(70.8% 0 0);\n    --color-neutral-500: oklch(55.6% 0 0);\n    --color-neutral-600: oklch(43.9% 0 0);\n    --color-neutral-700: oklch(37.1% 0 0);\n    --color-neutral-800: oklch(26.9% 0 0);\n    --color-neutral-900: oklch(20.5% 0 0);\n    --color-neutral-950: oklch(14.5% 0 0);\n\n    --color-stone-50: oklch(98.5% 0.001 106.423);\n    --color-stone-100: oklch(97% 0.001 106.424);\n    --color-stone-200: oklch(92.3% 0.003 48.717);\n    --color-stone-300: oklch(86.9% 0.005 56.366);\n    --color-stone-400: oklch(70.9% 0.01 56.259);\n    --color-stone-500: oklch(55.3% 0.013 58.071);\n    --color-stone-600: oklch(44.4% 0.011 73.639);\n    --color-stone-700: oklch(37.4% 0.01 67.558);\n    --color-stone-800: oklch(26.8% 0.007 34.298);\n    --color-stone-900: oklch(21.6% 0.006 56.043);\n    --color-stone-950: oklch(14.7% 0.004 49.25);\n\n    --color-black: #000;\n    --color-white: #fff;\n\n    --spacing: 0.25rem;\n\n    --breakpoint-sm: 40rem;\n    --breakpoint-md: 48rem;\n    --breakpoint-lg: 64rem;\n    --breakpoint-xl: 80rem;\n    --breakpoint-2xl: 96rem;\n\n    --container-3xs: 16rem;\n    --container-2xs: 18rem;\n    --container-xs: 20rem;\n    --container-sm: 24rem;\n    --container-md: 28rem;\n    --container-lg: 32rem;\n    --container-xl: 36rem;\n    --container-2xl: 42rem;\n    --container-3xl: 48rem;\n    --container-4xl: 56rem;\n    --container-5xl: 64rem;\n    --container-6xl: 72rem;\n    --container-7xl: 80rem;\n\n    --text-xs: 0.75rem;\n    --text-xs--line-height: calc(1 / 0.75);\n    --text-sm: 0.875rem;\n    --text-sm--line-height: calc(1.25 / 0.875);\n    --text-base: 1rem;\n    --text-base--line-height: calc(1.5 / 1);\n    --text-lg: 1.125rem;\n    --text-lg--line-height: calc(1.75 / 1.125);\n    --text-xl: 1.25rem;\n    --text-xl--line-height: calc(1.75 / 1.25);\n    --text-2xl: 1.5rem;\n    --text-2xl--line-height: calc(2 / 1.5);\n    --text-3xl: 1.875rem;\n    --text-3xl--line-height: calc(2.25 / 1.875);\n    --text-4xl: 2.25rem;\n    --text-4xl--line-height: calc(2.5 / 2.25);\n    --text-5xl: 3rem;\n    --text-5xl--line-height: 1;\n    --text-6xl: 3.75rem;\n    --text-6xl--line-height: 1;\n    --text-7xl: 4.5rem;\n    --text-7xl--line-height: 1;\n    --text-8xl: 6rem;\n    --text-8xl--line-height: 1;\n    --text-9xl: 8rem;\n    --text-9xl--line-height: 1;\n\n    --font-weight-thin: 100;\n    --font-weight-extralight: 200;\n    --font-weight-light: 300;\n    --font-weight-normal: 400;\n    --font-weight-medium: 500;\n    --font-weight-semibold: 600;\n    --font-weight-bold: 700;\n    --font-weight-extrabold: 800;\n    --font-weight-black: 900;\n\n    --tracking-tighter: -0.05em;\n    --tracking-tight: -0.025em;\n    --tracking-normal: 0em;\n    --tracking-wide: 0.025em;\n    --tracking-wider: 0.05em;\n    --tracking-widest: 0.1em;\n\n    --leading-tight: 1.25;\n    --leading-snug: 1.375;\n    --leading-normal: 1.5;\n    --leading-relaxed: 1.625;\n    --leading-loose: 2;\n\n    --radius-xs: 0.125rem;\n    --radius-sm: 0.25rem;\n    --radius-md: 0.375rem;\n    --radius-lg: 0.5rem;\n    --radius-xl: 0.75rem;\n    --radius-2xl: 1rem;\n    --radius-3xl: 1.5rem;\n    --radius-4xl: 2rem;\n\n    --shadow-2xs: 0 1px rgb(0 0 0 / 0.05);\n    --shadow-xs: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n    --shadow-sm: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);\n    --shadow-md:\n      0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\n    --shadow-lg:\n      0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\n    --shadow-xl:\n      0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);\n    --shadow-2xl: 0 25px 50px -12px rgb(0 0 0 / 0.25);\n\n    --inset-shadow-2xs: inset 0 1px rgb(0 0 0 / 0.05);\n    --inset-shadow-xs: inset 0 1px 1px rgb(0 0 0 / 0.05);\n    --inset-shadow-sm: inset 0 2px 4px rgb(0 0 0 / 0.05);\n\n    --drop-shadow-xs: 0 1px 1px rgb(0 0 0 / 0.05);\n    --drop-shadow-sm: 0 1px 2px rgb(0 0 0 / 0.15);\n    --drop-shadow-md: 0 3px 3px rgb(0 0 0 / 0.12);\n    --drop-shadow-lg: 0 4px 4px rgb(0 0 0 / 0.15);\n    --drop-shadow-xl: 0 9px 7px rgb(0 0 0 / 0.1);\n    --drop-shadow-2xl: 0 25px 25px rgb(0 0 0 / 0.15);\n\n    --text-shadow-2xs: 0px 1px 0px rgb(0 0 0 / 0.15);\n    --text-shadow-xs: 0px 1px 1px rgb(0 0 0 / 0.2);\n    --text-shadow-sm:\n      0px 1px 0px rgb(0 0 0 / 0.075), 0px 1px 1px rgb(0 0 0 / 0.075),\n      0px 2px 2px rgb(0 0 0 / 0.075);\n    --text-shadow-md:\n      0px 1px 1px rgb(0 0 0 / 0.1), 0px 1px 2px rgb(0 0 0 / 0.1),\n      0px 2px 4px rgb(0 0 0 / 0.1);\n    --text-shadow-lg:\n      0px 1px 2px rgb(0 0 0 / 0.1), 0px 3px 2px rgb(0 0 0 / 0.1),\n      0px 4px 8px rgb(0 0 0 / 0.1);\n\n    --ease-in: cubic-bezier(0.4, 0, 1, 1);\n    --ease-out: cubic-bezier(0, 0, 0.2, 1);\n    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);\n\n    --animate-spin: spin 1s linear infinite;\n    --animate-ping: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;\n    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n    --animate-bounce: bounce 1s infinite;\n\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n\n    @keyframes ping {\n      75%,\n      100% {\n        transform: scale(2);\n        opacity: 0;\n      }\n    }\n\n    @keyframes pulse {\n      50% {\n        opacity: 0.5;\n      }\n    }\n\n    @keyframes bounce {\n      0%,\n      100% {\n        transform: translateY(-25%);\n        animation-timing-function: cubic-bezier(0.8, 0, 1, 1);\n      }\n\n      50% {\n        transform: none;\n        animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n      }\n    }\n\n    --blur-xs: 4px;\n    --blur-sm: 8px;\n    --blur-md: 12px;\n    --blur-lg: 16px;\n    --blur-xl: 24px;\n    --blur-2xl: 40px;\n    --blur-3xl: 64px;\n\n    --perspective-dramatic: 100px;\n    --perspective-near: 300px;\n    --perspective-normal: 500px;\n    --perspective-midrange: 800px;\n    --perspective-distant: 1200px;\n\n    --aspect-video: 16 / 9;\n\n    --default-transition-duration: 150ms;\n    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    --default-font-family: --theme(--font-sans, initial);\n    --default-font-feature-settings: --theme(\n      --font-sans--font-feature-settings,\n      initial\n    );\n    --default-font-variation-settings: --theme(\n      --font-sans--font-variation-settings,\n      initial\n    );\n    --default-mono-font-family: --theme(--font-mono, initial);\n    --default-mono-font-feature-settings: --theme(\n      --font-mono--font-feature-settings,\n      initial\n    );\n    --default-mono-font-variation-settings: --theme(\n      --font-mono--font-variation-settings,\n      initial\n    );\n  }\n\n  /* Deprecated */\n  @theme default inline reference {\n    --blur: 8px;\n    --shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);\n    --shadow-inner: inset 0 2px 4px 0 rgb(0 0 0 / 0.05);\n    --drop-shadow: 0 1px 2px rgb(0 0 0 / 0.1), 0 1px 1px rgb(0 0 0 / 0.06);\n    --radius: 0.25rem;\n    --max-width-prose: 65ch;\n  }\n}\n\n@layer base {\n  /*\n  1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\n  2. Remove default margins and padding\n  3. Reset all borders.\n*/\n\n  *,\n  ::after,\n  ::before,\n  ::backdrop,\n  ::file-selector-button {\n    box-sizing: border-box; /* 1 */\n    margin: 0; /* 2 */\n    padding: 0; /* 2 */\n    border: 0 solid; /* 3 */\n  }\n\n  /*\n  1. Use a consistent sensible line-height in all browsers.\n  2. Prevent adjustments of font size after orientation changes in iOS.\n  3. Use a more readable tab size.\n  4. Use the user's configured `sans` font-family by default.\n  5. Use the user's configured `sans` font-feature-settings by default.\n  6. Use the user's configured `sans` font-variation-settings by default.\n  7. Disable tap highlights on iOS.\n*/\n\n  html,\n  :host {\n    line-height: 1.5; /* 1 */\n    -webkit-text-size-adjust: 100%; /* 2 */\n    tab-size: 4; /* 3 */\n    font-family: --theme(\n      --default-font-family,\n      ui-sans-serif,\n      system-ui,\n      sans-serif,\n      \"Apple Color Emoji\",\n      \"Segoe UI Emoji\",\n      \"Segoe UI Symbol\",\n      \"Noto Color Emoji\"\n    ); /* 4 */\n    font-feature-settings: --theme(\n      --default-font-feature-settings,\n      normal\n    ); /* 5 */\n    font-variation-settings: --theme(\n      --default-font-variation-settings,\n      normal\n    ); /* 6 */\n    -webkit-tap-highlight-color: transparent; /* 7 */\n  }\n\n  /*\n  1. Add the correct height in Firefox.\n  2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n  3. Reset the default border style to a 1px solid border.\n*/\n\n  hr {\n    height: 0; /* 1 */\n    color: inherit; /* 2 */\n    border-top-width: 1px; /* 3 */\n  }\n\n  /*\n  Add the correct text decoration in Chrome, Edge, and Safari.\n*/\n\n  abbr:where([title]) {\n    -webkit-text-decoration: underline dotted;\n    text-decoration: underline dotted;\n  }\n\n  /*\n  Remove the default font size and weight for headings.\n*/\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-size: inherit;\n    font-weight: inherit;\n  }\n\n  /*\n  Reset links to optimize for opt-in styling instead of opt-out.\n*/\n\n  a {\n    color: inherit;\n    -webkit-text-decoration: inherit;\n    text-decoration: inherit;\n  }\n\n  /*\n  Add the correct font weight in Edge and Safari.\n*/\n\n  b,\n  strong {\n    font-weight: bolder;\n  }\n\n  /*\n  1. Use the user's configured `mono` font-family by default.\n  2. Use the user's configured `mono` font-feature-settings by default.\n  3. Use the user's configured `mono` font-variation-settings by default.\n  4. Correct the odd `em` font sizing in all browsers.\n*/\n\n  code,\n  kbd,\n  samp,\n  pre {\n    font-family: --theme(\n      --default-mono-font-family,\n      ui-monospace,\n      SFMono-Regular,\n      Menlo,\n      Monaco,\n      Consolas,\n      \"Liberation Mono\",\n      \"Courier New\",\n      monospace\n    ); /* 1 */\n    font-feature-settings: --theme(\n      --default-mono-font-feature-settings,\n      normal\n    ); /* 2 */\n    font-variation-settings: --theme(\n      --default-mono-font-variation-settings,\n      normal\n    ); /* 3 */\n    font-size: 1em; /* 4 */\n  }\n\n  /*\n  Add the correct font size in all browsers.\n*/\n\n  small {\n    font-size: 80%;\n  }\n\n  /*\n  Prevent `sub` and `sup` elements from affecting the line height in all browsers.\n*/\n\n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n\n  sub {\n    bottom: -0.25em;\n  }\n\n  sup {\n    top: -0.5em;\n  }\n\n  /*\n  1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n  2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n  3. Remove gaps between table borders by default.\n*/\n\n  table {\n    text-indent: 0; /* 1 */\n    border-color: inherit; /* 2 */\n    border-collapse: collapse; /* 3 */\n  }\n\n  /*\n  Use the modern Firefox focus style for all focusable elements.\n*/\n\n  :-moz-focusring {\n    outline: auto;\n  }\n\n  /*\n  Add the correct vertical alignment in Chrome and Firefox.\n*/\n\n  progress {\n    vertical-align: baseline;\n  }\n\n  /*\n  Add the correct display in Chrome and Safari.\n*/\n\n  summary {\n    display: list-item;\n  }\n\n  /*\n  Make lists unstyled by default.\n*/\n\n  ol,\n  ul,\n  menu {\n    list-style: none;\n  }\n\n  /*\n  1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\n  2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\n      This can trigger a poorly considered lint error in some tools but is included by design.\n*/\n\n  img,\n  svg,\n  video,\n  canvas,\n  audio,\n  iframe,\n  embed,\n  object {\n    display: block; /* 1 */\n    vertical-align: middle; /* 2 */\n  }\n\n  /*\n  Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\n*/\n\n  img,\n  video {\n    max-width: 100%;\n    height: auto;\n  }\n\n  /*\n  1. Inherit font styles in all browsers.\n  2. Remove border radius in all browsers.\n  3. Remove background color in all browsers.\n  4. Ensure consistent opacity for disabled states in all browsers.\n*/\n\n  button,\n  input,\n  select,\n  optgroup,\n  textarea,\n  ::file-selector-button {\n    font: inherit; /* 1 */\n    font-feature-settings: inherit; /* 1 */\n    font-variation-settings: inherit; /* 1 */\n    letter-spacing: inherit; /* 1 */\n    color: inherit; /* 1 */\n    border-radius: 0; /* 2 */\n    background-color: transparent; /* 3 */\n    opacity: 1; /* 4 */\n  }\n\n  /*\n  Restore default font weight.\n*/\n\n  :where(select:is([multiple], [size])) optgroup {\n    font-weight: bolder;\n  }\n\n  /*\n  Restore indentation.\n*/\n\n  :where(select:is([multiple], [size])) optgroup option {\n    padding-inline-start: 20px;\n  }\n\n  /*\n  Restore space after button.\n*/\n\n  ::file-selector-button {\n    margin-inline-end: 4px;\n  }\n\n  /*\n  Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\n*/\n\n  ::placeholder {\n    opacity: 1;\n  }\n\n  /*\n  Set the default placeholder color to a semi-transparent version of the current text color in browsers that do not\n  crash when using `color-mix(…)` with `currentcolor`. (https://github.com/tailwindlabs/tailwindcss/issues/17194)\n*/\n\n  @supports (not (-webkit-appearance: -apple-pay-button)) /* Not Safari */ or\n    (contain-intrinsic-size: 1px) /* Safari 17+ */ {\n    ::placeholder {\n      color: color-mix(in oklab, currentcolor 50%, transparent);\n    }\n  }\n\n  /*\n  Prevent resizing textareas horizontally by default.\n*/\n\n  textarea {\n    resize: vertical;\n  }\n\n  /*\n  Remove the inner padding in Chrome and Safari on macOS.\n*/\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  /*\n  1. Ensure date/time inputs have the same height when empty in iOS Safari.\n  2. Ensure text alignment can be changed on date/time inputs in iOS Safari.\n*/\n\n  ::-webkit-date-and-time-value {\n    min-height: 1lh; /* 1 */\n    text-align: inherit; /* 2 */\n  }\n\n  /*\n  Prevent height from changing on date/time inputs in macOS Safari when the input is set to `display: block`.\n*/\n\n  ::-webkit-datetime-edit {\n    display: inline-flex;\n  }\n\n  /*\n  Remove excess padding from pseudo-elements in date/time inputs to ensure consistent height across browsers.\n*/\n\n  ::-webkit-datetime-edit-fields-wrapper {\n    padding: 0;\n  }\n\n  ::-webkit-datetime-edit,\n  ::-webkit-datetime-edit-year-field,\n  ::-webkit-datetime-edit-month-field,\n  ::-webkit-datetime-edit-day-field,\n  ::-webkit-datetime-edit-hour-field,\n  ::-webkit-datetime-edit-minute-field,\n  ::-webkit-datetime-edit-second-field,\n  ::-webkit-datetime-edit-millisecond-field,\n  ::-webkit-datetime-edit-meridiem-field {\n    padding-block: 0;\n  }\n\n  /*\n  Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\n*/\n\n  :-moz-ui-invalid {\n    box-shadow: none;\n  }\n\n  /*\n  Correct the inability to style the border radius in iOS Safari.\n*/\n\n  button,\n  input:where([type=\"button\"], [type=\"reset\"], [type=\"submit\"]),\n  ::file-selector-button {\n    appearance: button;\n  }\n\n  /*\n  Correct the cursor style of increment and decrement buttons in Safari.\n*/\n\n  ::-webkit-inner-spin-button,\n  ::-webkit-outer-spin-button {\n    height: auto;\n  }\n\n  /*\n  Make elements with the HTML hidden attribute stay hidden by default.\n*/\n\n  [hidden]:where(:not([hidden=\"until-found\"])) {\n    display: none !important;\n  }\n}\n\n@layer utilities {\n  @tailwind utilities;\n}\n","@import 'tailwindcss';\n@import 'tw-animate-css';\n@import '../styles/design-tokens.css';\n\n@custom-variant dark (&:is(.dark *));\n\n@theme inline {\n  --color-background: var(--background);\n  --color-foreground: var(--foreground);\n  --font-sans: var(--font-inter);\n  --font-mono: var(--font-roboto-mono);\n  --color-sidebar-ring: var(--sidebar-ring);\n  --color-sidebar-border: var(--sidebar-border);\n  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);\n  --color-sidebar-accent: var(--sidebar-accent);\n  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);\n  --color-sidebar-primary: var(--sidebar-primary);\n  --color-sidebar-foreground: var(--sidebar-foreground);\n  --color-sidebar: var(--sidebar);\n  --color-chart-5: var(--chart-5);\n  --color-chart-4: var(--chart-4);\n  --color-chart-3: var(--chart-3);\n  --color-chart-2: var(--chart-2);\n  --color-chart-1: var(--chart-1);\n  --color-ring: var(--ring);\n  --color-input: var(--input);\n  --color-border: var(--border);\n  --color-destructive: var(--destructive);\n  --color-accent-foreground: var(--accent-foreground);\n  --color-accent: var(--accent);\n  --color-muted-foreground: var(--muted-foreground);\n  --color-muted: var(--muted);\n  --color-secondary-foreground: var(--secondary-foreground);\n  --color-secondary: var(--secondary);\n  --color-primary-foreground: var(--primary-foreground);\n  --color-primary: var(--primary);\n  --color-popover-foreground: var(--popover-foreground);\n  --color-popover: var(--popover);\n  --color-card-foreground: var(--card-foreground);\n  --color-card: var(--card);\n  --color-success: var(--color-success);\n  --color-success-foreground: var(--color-success-foreground);\n  --color-success-soft: var(--color-success-soft);\n  --color-error: var(--color-error);\n  --color-error-foreground: var(--color-error-foreground);\n  --color-error-soft: var(--color-error-soft);\n  --color-warning: var(--color-warning);\n  --color-warning-foreground: var(--color-warning-foreground);\n  --color-warning-soft: var(--color-warning-soft);\n  --color-info: var(--color-info);\n  --color-info-foreground: var(--color-info-foreground);\n  --color-info-soft: var(--color-info-soft);\n  --radius-sm: calc(var(--radius) - 4px);\n  --radius-md: calc(var(--radius) - 2px);\n  --radius-lg: var(--radius);\n  --radius-xl: calc(var(--radius) + 4px);\n}\n\n:root {\n  --radius: 0.625rem;\n  --background: oklch(1 0 0);\n  --foreground: oklch(0.129 0.042 264.695);\n  --card: oklch(1 0 0);\n  --card-foreground: oklch(0.129 0.042 264.695);\n  --popover: oklch(1 0 0);\n  --popover-foreground: oklch(0.129 0.042 264.695);\n  --primary: oklch(0.208 0.042 265.755);\n  --primary-foreground: oklch(0.984 0.003 247.858);\n  --secondary: oklch(0.968 0.007 247.896);\n  --secondary-foreground: oklch(0.208 0.042 265.755);\n  --muted: oklch(0.968 0.007 247.896);\n  --muted-foreground: oklch(0.554 0.046 257.417);\n  --accent: oklch(0.968 0.007 247.896);\n  --accent-foreground: oklch(0.208 0.042 265.755);\n  --destructive: oklch(0.577 0.245 27.325);\n  --border: oklch(0.929 0.013 255.508);\n  --input: oklch(0.929 0.013 255.508);\n  --ring: oklch(0.704 0.04 256.788);\n  --chart-1: oklch(0.646 0.222 41.116);\n  --chart-2: oklch(0.6 0.118 184.704);\n  --chart-3: oklch(0.398 0.07 227.392);\n  --chart-4: oklch(0.828 0.189 84.429);\n  --chart-5: oklch(0.769 0.188 70.08);\n  --sidebar: oklch(0.984 0.003 247.858);\n  --sidebar-foreground: oklch(0.129 0.042 264.695);\n  --sidebar-primary: oklch(0.208 0.042 265.755);\n  --sidebar-primary-foreground: oklch(0.984 0.003 247.858);\n  --sidebar-accent: oklch(0.968 0.007 247.896);\n  --sidebar-accent-foreground: oklch(0.208 0.042 265.755);\n  --sidebar-border: oklch(0.929 0.013 255.508);\n  --sidebar-ring: oklch(0.704 0.04 256.788);\n  /* Semantic Status Colors */\n  --color-success: oklch(0.6 0.118 184.704);\n  --color-success-foreground: oklch(1 0 0);\n  --color-success-soft: oklch(0.6 0.118 184.704 / 0.1);\n  --color-error: oklch(0.577 0.245 27.325);\n  --color-error-foreground: oklch(0.984 0.003 247.858);\n  --color-error-soft: oklch(0.577 0.245 27.325 / 0.1);\n  --color-warning: oklch(0.828 0.189 84.429);\n  --color-warning-foreground: oklch(0.129 0.042 264.695);\n  --color-warning-soft: oklch(0.828 0.189 84.429 / 0.1);\n  --color-info: oklch(0.488 0.243 264.376);\n  --color-info-foreground: oklch(1 0 0);\n  --color-info-soft: oklch(0.488 0.243 264.376 / 0.1);\n}\n\n.dark {\n  --background: oklch(0.129 0.042 264.695);\n  --foreground: oklch(0.984 0.003 247.858);\n  --card: oklch(0.208 0.042 265.755);\n  --card-foreground: oklch(0.984 0.003 247.858);\n  --popover: oklch(0.208 0.042 265.755);\n  --popover-foreground: oklch(0.984 0.003 247.858);\n  --primary: oklch(0.929 0.013 255.508);\n  --primary-foreground: oklch(0.208 0.042 265.755);\n  --secondary: oklch(0.279 0.041 260.031);\n  --secondary-foreground: oklch(0.984 0.003 247.858);\n  --muted: oklch(0.279 0.041 260.031);\n  --muted-foreground: oklch(0.704 0.04 256.788);\n  --accent: oklch(0.279 0.041 260.031);\n  --accent-foreground: oklch(0.984 0.003 247.858);\n  --destructive: oklch(0.704 0.191 22.216);\n  --border: oklch(1 0 0 / 10%);\n  --input: oklch(1 0 0 / 15%);\n  --ring: oklch(0.551 0.027 264.364);\n  --chart-1: oklch(0.488 0.243 264.376);\n  --chart-2: oklch(0.696 0.17 162.48);\n  --chart-3: oklch(0.769 0.188 70.08);\n  --chart-4: oklch(0.627 0.265 303.9);\n  --chart-5: oklch(0.645 0.246 16.439);\n  --sidebar: oklch(0.208 0.042 265.755);\n  --sidebar-foreground: oklch(0.984 0.003 247.858);\n  --sidebar-primary: oklch(0.488 0.243 264.376);\n  --sidebar-primary-foreground: oklch(0.984 0.003 247.858);\n  --sidebar-accent: oklch(0.279 0.041 260.031);\n  --sidebar-accent-foreground: oklch(0.984 0.003 247.858);\n  --sidebar-border: oklch(1 0 0 / 10%);\n  --sidebar-ring: oklch(0.551 0.027 264.364);\n  /* Semantic Status Colors - Dark Mode */\n  --color-success: oklch(0.696 0.17 162.48);\n  --color-success-foreground: oklch(1 0 0);\n  --color-success-soft: oklch(0.696 0.17 162.48 / 0.1);\n  --color-error: oklch(0.704 0.191 22.216);\n  --color-error-foreground: oklch(0.984 0.003 247.858);\n  --color-error-soft: oklch(0.704 0.191 22.216 / 0.1);\n  --color-warning: oklch(0.769 0.188 70.08);\n  --color-warning-foreground: oklch(0.129 0.042 264.695);\n  --color-warning-soft: oklch(0.769 0.188 70.08 / 0.1);\n  --color-info: oklch(0.6 0.118 184.704);\n  --color-info-foreground: oklch(1 0 0);\n  --color-info-soft: oklch(0.6 0.118 184.704 / 0.1);\n}\n\n@layer base {\n  * {\n    @apply border-border outline-ring/50;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}\n\n/* Custom animations */\n@keyframes shimmer {\n  0% {\n    transform: translateX(-100%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n}\n\n.animate-shimmer {\n  animation: shimmer 2s infinite;\n}\n\n/* Ultra-smooth scrolling optimizations for typing text */\n.scrolling-text {\n  transition: transform 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  will-change: transform;\n  transform-origin: top left;\n  backface-visibility: hidden;\n  perspective: 1000px;\n}\n\n.scrolling-text-line {\n  height: 2rem; /* Exactly 32px - matches leading-8 */\n  line-height: 2rem;\n  display: flex;\n  align-items: center;\n  contain: layout style;\n  transform: translateZ(0); /* Individual line hardware acceleration */\n}\n\n/* Performance optimizations */\n.typing-container {\n  contain: layout style paint;\n  transform: translateZ(0); /* Force hardware acceleration */\n  isolation: isolate; /* Create new stacking context */\n}\n\n/* Eliminate sub-pixel rendering issues */\n.ultra-smooth-text {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeSpeed;\n  transform: translateZ(0);\n}\n","@property --tw-animation-delay{syntax:\"*\";inherits:false;initial-value:0s}@property --tw-animation-direction{syntax:\"*\";inherits:false;initial-value:normal}@property --tw-animation-duration{syntax:\"*\";inherits:false}@property --tw-animation-fill-mode{syntax:\"*\";inherits:false;initial-value:none}@property --tw-animation-iteration-count{syntax:\"*\";inherits:false;initial-value:1}@property --tw-enter-opacity{syntax:\"*\";inherits:false;initial-value:1}@property --tw-enter-rotate{syntax:\"*\";inherits:false;initial-value:0}@property --tw-enter-scale{syntax:\"*\";inherits:false;initial-value:1}@property --tw-enter-translate-x{syntax:\"*\";inherits:false;initial-value:0}@property --tw-enter-translate-y{syntax:\"*\";inherits:false;initial-value:0}@property --tw-exit-opacity{syntax:\"*\";inherits:false;initial-value:1}@property --tw-exit-rotate{syntax:\"*\";inherits:false;initial-value:0}@property --tw-exit-scale{syntax:\"*\";inherits:false;initial-value:1}@property --tw-exit-translate-x{syntax:\"*\";inherits:false;initial-value:0}@property --tw-exit-translate-y{syntax:\"*\";inherits:false;initial-value:0}@theme inline{--animation-delay-0: 0s; --animation-delay-75: 75ms; --animation-delay-100: .1s; --animation-delay-150: .15s; --animation-delay-200: .2s; --animation-delay-300: .3s; --animation-delay-500: .5s; --animation-delay-700: .7s; --animation-delay-1000: 1s; --animation-repeat-0: 0; --animation-repeat-1: 1; --animation-repeat-infinite: infinite; --animation-direction-normal: normal; --animation-direction-reverse: reverse; --animation-direction-alternate: alternate; --animation-direction-alternate-reverse: alternate-reverse; --animation-fill-mode-none: none; --animation-fill-mode-forwards: forwards; --animation-fill-mode-backwards: backwards; --animation-fill-mode-both: both; --percentage-0: 0; --percentage-5: .05; --percentage-10: .1; --percentage-15: .15; --percentage-20: .2; --percentage-25: .25; --percentage-30: .3; --percentage-35: .35; --percentage-40: .4; --percentage-45: .45; --percentage-50: .5; --percentage-55: .55; --percentage-60: .6; --percentage-65: .65; --percentage-70: .7; --percentage-75: .75; --percentage-80: .8; --percentage-85: .85; --percentage-90: .9; --percentage-95: .95; --percentage-100: 1; --percentage-translate-full: 1; --animate-in: enter var(--tw-animation-duration,var(--tw-duration,.15s))var(--tw-ease,ease)var(--tw-animation-delay,0s)var(--tw-animation-iteration-count,1)var(--tw-animation-direction,normal)var(--tw-animation-fill-mode,none); --animate-out: exit var(--tw-animation-duration,var(--tw-duration,.15s))var(--tw-ease,ease)var(--tw-animation-delay,0s)var(--tw-animation-iteration-count,1)var(--tw-animation-direction,normal)var(--tw-animation-fill-mode,none); @keyframes enter { from { opacity: var(--tw-enter-opacity,1); transform: translate3d(var(--tw-enter-translate-x,0),var(--tw-enter-translate-y,0),0)scale3d(var(--tw-enter-scale,1),var(--tw-enter-scale,1),var(--tw-enter-scale,1))rotate(var(--tw-enter-rotate,0)); }}@keyframes exit { to { opacity: var(--tw-exit-opacity,1); transform: translate3d(var(--tw-exit-translate-x,0),var(--tw-exit-translate-y,0),0)scale3d(var(--tw-exit-scale,1),var(--tw-exit-scale,1),var(--tw-exit-scale,1))rotate(var(--tw-exit-rotate,0)); }}--animate-accordion-down: accordion-down var(--tw-animation-duration,var(--tw-duration,.2s))ease-out; --animate-accordion-up: accordion-up var(--tw-animation-duration,var(--tw-duration,.2s))ease-out; --animate-collapsible-down: collapsible-down var(--tw-animation-duration,var(--tw-duration,.2s))ease-out; --animate-collapsible-up: collapsible-up var(--tw-animation-duration,var(--tw-duration,.2s))ease-out; @keyframes accordion-down { from { height: 0; }to { height: var(--radix-accordion-content-height,var(--bits-accordion-content-height,var(--reka-accordion-content-height,var(--kb-accordion-content-height,auto)))); }}@keyframes accordion-up { from { height: var(--radix-accordion-content-height,var(--bits-accordion-content-height,var(--reka-accordion-content-height,var(--kb-accordion-content-height,auto)))); }to { height: 0; }}@keyframes collapsible-down { from { height: 0; }to { height: var(--radix-collapsible-content-height,var(--bits-collapsible-content-height,var(--reka-collapsible-content-height,var(--kb-collapsible-content-height,auto)))); }}@keyframes collapsible-up { from { height: var(--radix-collapsible-content-height,var(--bits-collapsible-content-height,var(--reka-collapsible-content-height,var(--kb-collapsible-content-height,auto)))); }to { height: 0; }}--animate-caret-blink: caret-blink 1.25s ease-out infinite; @keyframes caret-blink { 0%,70%,100% { opacity: 1; }20%,50% { opacity: 0; }}}@utility animation-duration-*{--tw-animation-duration: calc(--value(number)*1ms); --tw-animation-duration: --value(--animation-duration-*,[duration],\"initial\",[*]); animation-duration: calc(--value(number)*1ms); animation-duration: --value(--animation-duration-*,[duration],\"initial\",[*]);}@utility delay-*{animation-delay: calc(--value(number)*1ms); animation-delay: --value(--animation-delay-*,[duration],\"initial\",[*]); --tw-animation-delay: calc(--value(number)*1ms); --tw-animation-delay: --value(--animation-delay-*,[duration],\"initial\",[*]);}@utility repeat-*{animation-iteration-count: --value(--animation-repeat-*,number,\"initial\",[*]); --tw-animation-iteration-count: --value(--animation-repeat-*,number,\"initial\",[*]);}@utility direction-*{animation-direction: --value(--animation-direction-*,\"initial\",[*]); --tw-animation-direction: --value(--animation-direction-*,\"initial\",[*]);}@utility fill-mode-*{animation-fill-mode: --value(--animation-fill-mode-*,\"initial\",[*]); --tw-animation-fill-mode: --value(--animation-fill-mode-*,\"initial\",[*]);}@utility running{animation-play-state: running;}@utility paused{animation-play-state: paused;}@utility play-state-*{animation-play-state: --value(\"initial\",[*]);}@utility fade-in{--tw-enter-opacity: 0;}@utility fade-in-*{--tw-enter-opacity: calc(--value(number)/100); --tw-enter-opacity: --value(--percentage-*,[*]);}@utility fade-out{--tw-exit-opacity: 0;}@utility fade-out-*{--tw-exit-opacity: calc(--value(number)/100); --tw-exit-opacity: --value(--percentage-*,[*]);}@utility zoom-in{--tw-enter-scale: 0;}@utility zoom-in-*{--tw-enter-scale: calc(--value(number)*1%); --tw-enter-scale: calc(--value(ratio)); --tw-enter-scale: --value(--percentage-*,[*]);}@utility -zoom-in-*{--tw-enter-scale: calc(--value(number)*-1%); --tw-enter-scale: calc(--value(ratio)*-1); --tw-enter-scale: --value(--percentage-*,[*]);}@utility zoom-out{--tw-exit-scale: 0;}@utility zoom-out-*{--tw-exit-scale: calc(--value(number)*1%); --tw-exit-scale: calc(--value(ratio)); --tw-exit-scale: --value(--percentage-*,[*]);}@utility -zoom-out-*{--tw-exit-scale: calc(--value(number)*-1%); --tw-exit-scale: calc(--value(ratio)*-1); --tw-exit-scale: --value(--percentage-*,[*]);}@utility spin-in{--tw-enter-rotate: 30deg;}@utility spin-in-*{--tw-enter-rotate: calc(--value(number)*1deg); --tw-enter-rotate: calc(--value(ratio)*360deg); --tw-enter-rotate: --value(--rotate-*,[*]);}@utility -spin-in{--tw-enter-rotate: -30deg;}@utility -spin-in-*{--tw-enter-rotate: calc(--value(number)*-1deg); --tw-enter-rotate: calc(--value(ratio)*-360deg); --tw-enter-rotate: --value(--rotate-*,[*]);}@utility spin-out{--tw-exit-rotate: 30deg;}@utility spin-out-*{--tw-exit-rotate: calc(--value(number)*1deg); --tw-exit-rotate: calc(--value(ratio)*360deg); --tw-exit-rotate: --value(--rotate-*,[*]);}@utility -spin-out{--tw-exit-rotate: -30deg;}@utility -spin-out-*{--tw-exit-rotate: calc(--value(number)*-1deg); --tw-exit-rotate: calc(--value(ratio)*-360deg); --tw-exit-rotate: --value(--rotate-*,[*]);}@utility slide-in-from-top{--tw-enter-translate-y: -100%;}@utility slide-in-from-top-*{--tw-enter-translate-y: calc(--value(integer)*var(--spacing)*-1); --tw-enter-translate-y: calc(--value(--percentage-*,--percentage-translate-*)*-100%); --tw-enter-translate-y: calc(--value(ratio)*-100%); --tw-enter-translate-y: calc(--value(--translate-*,[percentage],[length])*-1);}@utility slide-in-from-bottom{--tw-enter-translate-y: 100%;}@utility slide-in-from-bottom-*{--tw-enter-translate-y: calc(--value(integer)*var(--spacing)); --tw-enter-translate-y: calc(--value(--percentage-*,--percentage-translate-*)*100%); --tw-enter-translate-y: calc(--value(ratio)*100%); --tw-enter-translate-y: --value(--translate-*,[percentage],[length]);}@utility slide-in-from-left{--tw-enter-translate-x: -100%;}@utility slide-in-from-left-*{--tw-enter-translate-x: calc(--value(integer)*var(--spacing)*-1); --tw-enter-translate-x: calc(--value(--percentage-*,--percentage-translate-*)*-100%); --tw-enter-translate-x: calc(--value(ratio)*-100%); --tw-enter-translate-x: calc(--value(--translate-*,[percentage],[length])*-1);}@utility slide-in-from-right{--tw-enter-translate-x: 100%;}@utility slide-in-from-right-*{--tw-enter-translate-x: calc(--value(integer)*var(--spacing)); --tw-enter-translate-x: calc(--value(--percentage-*,--percentage-translate-*)*100%); --tw-enter-translate-x: calc(--value(ratio)*100%); --tw-enter-translate-x: --value(--translate-*,[percentage],[length]);}@utility slide-in-from-start{&:dir(ltr){ --tw-enter-translate-x: -100%; }&:dir(rtl){ --tw-enter-translate-x: 100%; }}@utility slide-in-from-start-*{&:where(:dir(ltr),[dir=\"ltr\"],[dir=\"ltr\"]*){ --tw-enter-translate-x: calc(--value(integer)*var(--spacing)*-1); --tw-enter-translate-x: calc(--value(--percentage-*,--percentage-translate-*)*-100%); --tw-enter-translate-x: calc(--value(ratio)*-100%); --tw-enter-translate-x: calc(--value(--translate-*,[percentage],[length])*-1); }&:where(:dir(rtl),[dir=\"rtl\"],[dir=\"rtl\"]*){ --tw-enter-translate-x: calc(--value(integer)*var(--spacing)); --tw-enter-translate-x: calc(--value(--percentage-*,--percentage-translate-*)*100%); --tw-enter-translate-x: calc(--value(ratio)*100%); --tw-enter-translate-x: --value(--translate-*,[percentage],[length]); }}@utility slide-in-from-end{&:dir(ltr){ --tw-enter-translate-x: 100%; }&:dir(rtl){ --tw-enter-translate-x: -100%; }}@utility slide-in-from-end-*{&:where(:dir(ltr),[dir=\"ltr\"],[dir=\"ltr\"]*){ --tw-enter-translate-x: calc(--value(integer)*var(--spacing)); --tw-enter-translate-x: calc(--value(--percentage-*,--percentage-translate-*)*100%); --tw-enter-translate-x: calc(--value(ratio)*100%); --tw-enter-translate-x: --value(--translate-*,[percentage],[length]); }&:where(:dir(rtl),[dir=\"rtl\"],[dir=\"rtl\"]*){ --tw-enter-translate-x: calc(--value(integer)*var(--spacing)*-1); --tw-enter-translate-x: calc(--value(--percentage-*,--percentage-translate-*)*-100%); --tw-enter-translate-x: calc(--value(ratio)*-100%); --tw-enter-translate-x: calc(--value(--translate-*,[percentage],[length])*-1); }}@utility slide-out-to-top{--tw-exit-translate-y: -100%;}@utility slide-out-to-top-*{--tw-exit-translate-y: calc(--value(integer)*var(--spacing)*-1); --tw-exit-translate-y: calc(--value(--percentage-*,--percentage-translate-*)*-100%); --tw-exit-translate-y: calc(--value(ratio)*-100%); --tw-exit-translate-y: calc(--value(--translate-*,[percentage],[length])*-1);}@utility slide-out-to-bottom{--tw-exit-translate-y: 100%;}@utility slide-out-to-bottom-*{--tw-exit-translate-y: calc(--value(integer)*var(--spacing)); --tw-exit-translate-y: calc(--value(--percentage-*,--percentage-translate-*)*100%); --tw-exit-translate-y: calc(--value(ratio)*100%); --tw-exit-translate-y: --value(--translate-*,[percentage],[length]);}@utility slide-out-to-left{--tw-exit-translate-x: -100%;}@utility slide-out-to-left-*{--tw-exit-translate-x: calc(--value(integer)*var(--spacing)*-1); --tw-exit-translate-x: calc(--value(--percentage-*,--percentage-translate-*)*-100%); --tw-exit-translate-x: calc(--value(ratio)*-100%); --tw-exit-translate-x: calc(--value(--translate-*,[percentage],[length])*-1);}@utility slide-out-to-right{--tw-exit-translate-x: 100%;}@utility slide-out-to-right-*{--tw-exit-translate-x: calc(--value(integer)*var(--spacing)); --tw-exit-translate-x: calc(--value(--percentage-*,--percentage-translate-*)*100%); --tw-exit-translate-x: calc(--value(ratio)*100%); --tw-exit-translate-x: --value(--translate-*,[percentage],[length]);}@utility slide-out-to-start{&:dir(ltr){ --tw-exit-translate-x: -100%; }&:dir(rtl){ --tw-exit-translate-x: 100%; }}@utility slide-out-to-start-*{&:where(:dir(ltr),[dir=\"ltr\"],[dir=\"ltr\"]*){ --tw-exit-translate-x: calc(--value(integer)*var(--spacing)*-1); --tw-exit-translate-x: calc(--value(--percentage-*,--percentage-translate-*)*-100%); --tw-exit-translate-x: calc(--value(ratio)*-100%); --tw-exit-translate-x: calc(--value(--translate-*,[percentage],[length])*-1); }&:where(:dir(rtl),[dir=\"rtl\"],[dir=\"rtl\"]*){ --tw-exit-translate-x: calc(--value(integer)*var(--spacing)); --tw-exit-translate-x: calc(--value(--percentage-*,--percentage-translate-*)*100%); --tw-exit-translate-x: calc(--value(ratio)*100%); --tw-exit-translate-x: --value(--translate-*,[percentage],[length]); }}@utility slide-out-to-end{&:dir(ltr){ --tw-exit-translate-x: 100%; }&:dir(rtl){ --tw-exit-translate-x: -100%; }}@utility slide-out-to-end-*{&:where(:dir(ltr),[dir=\"ltr\"],[dir=\"ltr\"]*){ --tw-exit-translate-x: calc(--value(integer)*var(--spacing)); --tw-exit-translate-x: calc(--value(--percentage-*,--percentage-translate-*)*100%); --tw-exit-translate-x: calc(--value(ratio)*100%); --tw-exit-translate-x: --value(--translate-*,[percentage],[length]); }&:where(:dir(rtl),[dir=\"rtl\"],[dir=\"rtl\"]*){ --tw-exit-translate-x: calc(--value(integer)*var(--spacing)*-1); --tw-exit-translate-x: calc(--value(--percentage-*,--percentage-translate-*)*-100%); --tw-exit-translate-x: calc(--value(ratio)*-100%); --tw-exit-translate-x: calc(--value(--translate-*,[percentage],[length])*-1); }}","/* TypeAmp Design System Tokens\n   ========================================================================== */\n\n/* Spacing Scale\n   Based on 4px base unit for consistency\n   ========================================================================== */\n@layer tokens {\n  :root {\n    /* Spacing tokens - use these for all padding, margin, and gap values */\n    --space-0: 0;\n    --space-0_5: 0.125rem; /* 2px */\n    --space-1: 0.25rem; /* 4px */\n    --space-1_5: 0.375rem; /* 6px */\n    --space-2: 0.5rem; /* 8px */\n    --space-2_5: 0.625rem; /* 10px */\n    --space-3: 0.75rem; /* 12px */\n    --space-3_5: 0.875rem; /* 14px */\n    --space-4: 1rem; /* 16px */\n    --space-5: 1.25rem; /* 20px */\n    --space-6: 1.5rem; /* 24px */\n    --space-7: 1.75rem; /* 28px */\n    --space-8: 2rem; /* 32px */\n    --space-9: 2.25rem; /* 36px */\n    --space-10: 2.5rem; /* 40px */\n    --space-11: 2.75rem; /* 44px */\n    --space-12: 3rem; /* 48px */\n\n    /* Typography Scale\n       Includes font size and line height for optimal readability\n       ========================================================================== */\n    --text-xxs: 0.625rem; /* 10px */\n    --text-xxs-lh: 1rem; /* 16px */\n\n    --text-xs: 0.75rem; /* 12px */\n    --text-xs-lh: 1rem; /* 16px */\n\n    --text-sm: 0.875rem; /* 14px */\n    --text-sm-lh: 1.25rem; /* 20px */\n\n    --text-base: 1rem; /* 16px */\n    --text-base-lh: 1.5rem; /* 24px */\n\n    --text-lg: 1.125rem; /* 18px */\n    --text-lg-lh: 1.75rem; /* 28px */\n\n    --text-xl: 1.25rem; /* 20px */\n    --text-xl-lh: 1.75rem; /* 28px */\n\n    --text-2xl: 1.5rem; /* 24px */\n    --text-2xl-lh: 2rem; /* 32px */\n\n    --text-3xl: 1.875rem; /* 30px */\n    --text-3xl-lh: 2.25rem; /* 36px */\n\n    --text-4xl: 2.25rem; /* 36px */\n    --text-4xl-lh: 2.5rem; /* 40px */\n\n    --text-5xl: 3rem; /* 48px */\n    --text-5xl-lh: 1;\n\n    --text-6xl: 3.75rem; /* 60px */\n    --text-6xl-lh: 1;\n\n    /* Font Weights */\n    --font-normal: 400;\n    --font-medium: 500;\n    --font-semibold: 600;\n    --font-bold: 700;\n\n    /* Letter Spacing */\n    --tracking-tighter: -0.05em;\n    --tracking-tight: -0.025em;\n    --tracking-normal: 0;\n    --tracking-wide: 0.025em;\n    --tracking-wider: 0.05em;\n    --tracking-widest: 0.1em;\n\n    /* Typography Utilities\n       Semantic text size combinations with line heights\n       ========================================================================== */\n    /* Body Text */\n    --text-body-xs: var(--text-xs);\n    --text-body-xs-lh: var(--text-xs-lh);\n\n    --text-body-sm: var(--text-sm);\n    --text-body-sm-lh: var(--text-sm-lh);\n\n    --text-body-base: var(--text-base);\n    --text-body-base-lh: var(--text-base-lh);\n\n    --text-body-lg: var(--text-lg);\n    --text-body-lg-lh: var(--text-lg-lh);\n\n    /* Heading Text */\n    --text-heading-sm: var(--text-xl);\n    --text-heading-sm-lh: var(--text-xl-lh);\n\n    --text-heading-base: var(--text-2xl);\n    --text-heading-base-lh: var(--text-2xl-lh);\n\n    --text-heading-lg: var(--text-3xl);\n    --text-heading-lg-lh: var(--text-3xl-lh);\n\n    --text-heading-xl: var(--text-4xl);\n    --text-heading-xl-lh: var(--text-4xl-lh);\n\n    /* Border Radius Scale\n       Already defined in globals.css, but documented here for reference\n       ========================================================================== */\n    /* \n    --radius-sm: calc(var(--radius) - 4px);  // 6px\n    --radius-md: calc(var(--radius) - 2px);  // 8px\n    --radius-lg: var(--radius);              // 10px\n    --radius-xl: calc(var(--radius) + 4px);  // 14px\n    --radius-full: 9999px;\n    */\n\n    /* Elevation/Shadow Scale\n       Progressive elevation for depth hierarchy\n       ========================================================================== */\n    --shadow-xs: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n    --shadow-sm: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);\n    --shadow-md:\n      0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\n    --shadow-lg:\n      0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\n    --shadow-xl:\n      0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);\n    --shadow-2xl: 0 25px 50px -12px rgb(0 0 0 / 0.25);\n    --shadow-inner: inset 0 2px 4px 0 rgb(0 0 0 / 0.05);\n    --shadow-none: 0 0 #0000;\n\n    /* Animation Tokens\n       Consistent timing and easing for all animations\n       ========================================================================== */\n    --duration-instant: 0ms;\n    --duration-fast: 150ms;\n    --duration-normal: 250ms;\n    --duration-slow: 350ms;\n    --duration-slower: 500ms;\n    --duration-slowest: 1000ms;\n\n    --ease-linear: linear;\n    --ease-in: cubic-bezier(0.4, 0, 1, 1);\n    --ease-out: cubic-bezier(0, 0, 0.2, 1);\n    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);\n    --ease-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);\n    --ease-smooth: cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n    /* Animation Utilities\n       Custom animation presets for common use cases\n       ========================================================================== */\n    --animate-pulse-subtle: pulse-subtle 2s cubic-bezier(0.4, 0, 0.6, 1)\n      infinite;\n    --animate-spin-slow: spin 3s linear infinite;\n    --animate-fade-in: fade-in var(--duration-normal) var(--ease-out);\n    --animate-slide-up: slide-up var(--duration-normal) var(--ease-out);\n    --animate-scale-in: scale-in var(--duration-fast) var(--ease-out);\n\n    /* Z-Index Scale\n       Layering system for proper stacking\n       ========================================================================== */\n    --z-auto: auto;\n    --z-0: 0;\n    --z-10: 10;\n    --z-20: 20;\n    --z-30: 30;\n    --z-40: 40;\n    --z-50: 50;\n    --z-modal: 100;\n    --z-popover: 200;\n    --z-dropdown: 300;\n    --z-tooltip: 400;\n    --z-notification: 500;\n\n    /* Component-Specific Tokens\n       Common values for consistency across components\n       ========================================================================== */\n\n    /* Input/Button Heights */\n    --input-height-sm: 2rem; /* 32px - h-8 */\n    --input-height-default: 2.25rem; /* 36px - h-9 */\n    --input-height-lg: 2.5rem; /* 40px - h-10 */\n\n    /* Focus Ring */\n    --ring-width: 2px;\n    --ring-offset: 2px;\n\n    /* Disabled Opacity */\n    --opacity-disabled: 0.5;\n\n    /* Hover/Active States */\n    --hover-opacity: 0.95;\n    --active-opacity: 0.9;\n\n    /* Icon Sizes */\n    --icon-xs: 0.75rem; /* 12px */\n    --icon-sm: 0.875rem; /* 14px */\n    --icon-base: 1rem; /* 16px */\n    --icon-lg: 1.25rem; /* 20px */\n    --icon-xl: 1.5rem; /* 24px */\n\n    /* Responsive Breakpoints\n       For reference - actual breakpoints in Tailwind config\n       ========================================================================== */\n    --screen-sm: 640px;\n    --screen-md: 768px;\n    --screen-lg: 1024px;\n    --screen-xl: 1280px;\n    --screen-2xl: 1536px;\n\n    /* Semantic Status Colors\n       Consistent colors for success, warning, and error states\n       ========================================================================== */\n    --color-success: oklch(0.6 0.118 184.704); /* Chart-2 green */\n    --color-success-foreground: oklch(1 0 0);\n    --color-warning: oklch(0.828 0.189 84.429); /* Chart-4 yellow */\n    --color-warning-foreground: oklch(0.129 0.042 264.695);\n    --color-error: var(--destructive);\n    --color-error-foreground: var(--primary-foreground);\n    --color-info: oklch(0.488 0.243 264.376); /* Primary blue */\n    --color-info-foreground: oklch(1 0 0);\n\n    /* Soft background variants for status */\n    --color-success-soft: oklch(0.6 0.118 184.704 / 0.1);\n    --color-warning-soft: oklch(0.828 0.189 84.429 / 0.1);\n    --color-error-soft: oklch(0.577 0.245 27.325 / 0.1);\n    --color-info-soft: oklch(0.488 0.243 264.376 / 0.1);\n  }\n}\n\n/* Dark mode semantic colors */\n.dark {\n  --color-success: oklch(0.696 0.17 162.48); /* Chart-2 dark green */\n  --color-warning: oklch(0.769 0.188 70.08); /* Chart-3 dark yellow */\n  --color-info: oklch(0.6 0.118 184.704); /* Chart-2 dark blue */\n  --color-success-soft: oklch(0.696 0.17 162.48 / 0.1);\n  --color-warning-soft: oklch(0.769 0.188 70.08 / 0.1);\n  --color-error-soft: oklch(0.704 0.191 22.216 / 0.1);\n  --color-info-soft: oklch(0.6 0.118 184.704 / 0.1);\n}\n\n/* Utility Classes\n   Common patterns as reusable classes\n   ========================================================================== */\n@layer utilities {\n  /* Consistent focus states */\n  .focus-ring {\n    @apply focus-visible:ring-ring outline-none focus-visible:ring-2 focus-visible:ring-offset-2;\n  }\n\n  /* Consistent disabled states */\n  .disabled-state {\n    @apply disabled:pointer-events-none disabled:opacity-50;\n  }\n\n  /* Consistent transitions */\n  .transition-base {\n    transition-property:\n      color, background-color, border-color, text-decoration-color, fill,\n      stroke, opacity, box-shadow, transform, filter, backdrop-filter;\n    transition-timing-function: var(--ease-in-out);\n    transition-duration: var(--duration-normal);\n  }\n\n  /* Card elevation patterns */\n  .elevation-low {\n    box-shadow: var(--shadow-sm);\n  }\n\n  .elevation-medium {\n    box-shadow: var(--shadow-md);\n  }\n\n  .elevation-high {\n    box-shadow: var(--shadow-lg);\n  }\n\n  /* Typography presets */\n  .text-body-sm {\n    font-size: var(--text-sm);\n    line-height: var(--text-sm-lh);\n    letter-spacing: var(--tracking-normal);\n  }\n\n  .text-body {\n    font-size: var(--text-base);\n    line-height: var(--text-base-lh);\n    letter-spacing: var(--tracking-normal);\n  }\n\n  .text-body-lg {\n    font-size: var(--text-lg);\n    line-height: var(--text-lg-lh);\n    letter-spacing: var(--tracking-normal);\n  }\n\n  .text-heading-sm {\n    font-size: var(--text-xl);\n    line-height: var(--text-xl-lh);\n    font-weight: var(--font-semibold);\n    letter-spacing: var(--tracking-tight);\n  }\n\n  .text-heading {\n    font-size: var(--text-2xl);\n    line-height: var(--text-2xl-lh);\n    font-weight: var(--font-semibold);\n    letter-spacing: var(--tracking-tight);\n  }\n\n  .text-heading-lg {\n    font-size: var(--text-3xl);\n    line-height: var(--text-3xl-lh);\n    font-weight: var(--font-bold);\n    letter-spacing: var(--tracking-tight);\n  }\n\n  /* Form field spacing */\n  .form-field {\n    @apply space-y-2;\n  }\n\n  .form-group {\n    @apply space-y-4;\n  }\n\n  /* Responsive spacing utilities */\n  @screen sm {\n    .sm\\:space-responsive {\n      @apply space-y-6;\n    }\n  }\n\n  @screen md {\n    .md\\:space-responsive {\n      @apply space-y-8;\n    }\n  }\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./.storybook/decorators/withMockStore.tsx":
/*!*************************************************!*\
  !*** ./.storybook/decorators/withMockStore.tsx ***!
  \*************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   withMockStore: () => (/* binding */ withMockStore)
/* harmony export */ });
/* harmony import */ var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/react-refresh/runtime.js */ "../../node_modules/react-refresh/runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "../../node_modules/next/dist/compiled/react/jsx-dev-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "../../node_modules/next/dist/compiled/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _src_store_useGameStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../src/store/useGameStore */ "./src/store/useGameStore.ts");
/* harmony import */ var _src_store_useAuthStore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../src/store/useAuthStore */ "./src/store/useAuthStore.ts");
/* harmony import */ var _src_store_useSettingsStore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../src/store/useSettingsStore */ "./src/store/useSettingsStore.ts");
/* harmony import */ var _src_store_useModalStore__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../src/store/useModalStore */ "./src/store/useModalStore.ts");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");

__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));


var _s = __webpack_require__.$Refresh$.signature();





// Default mock states for stores
const defaultGameState = {
    gameStatus: 'ready',
    charStates: [],
    textToType: 'The quick brown fox jumps over the lazy dog',
    userInput: '',
    stats: {
        wpm: 0,
        rawWpm: 0,
        accuracy: 100,
        correctChars: 0,
        incorrectChars: 0,
        totalChars: 0,
        startTime: null,
        endTime: null,
        duration: 0
    },
    testConfig: {
        mode: 'time',
        duration: 60,
        wordCount: 50,
        difficulty: 'Normal',
        textSource: 'english1k',
        punctuation: false
    },
    timeRemaining: 60000,
    wordsCompleted: 0,
    currentWordIndex: 0,
    wordBoundaries: [
        0,
        4,
        10,
        16,
        20,
        26,
        31,
        35,
        40
    ]
};
const defaultAuthState = {
    user: null,
    token: null,
    isAuthenticated: false,
    isLoading: false,
    error: null
};
const defaultSettingsState = {
    settings: {
        appearance: {
            theme: 'slate',
            font: 'Roboto Mono',
            fontSize: 18,
            caretStyle: 'line',
            caretColor: '#3b82f6',
            colorScheme: 'auto',
            animations: true,
            smoothCaret: true,
            showWpmCounter: true,
            showAccuracyCounter: true
        },
        behavior: {
            soundEffects: false,
            keyFeedback: false,
            defaultMode: 'time',
            defaultDifficulty: 'Normal',
            defaultDuration: 60,
            defaultWordCount: 50,
            paceCaretWpm: 0,
            paceCaretEnabled: false,
            autoSave: true,
            focusMode: false,
            quickRestart: true,
            blindMode: false
        }
    },
    isLoading: false
};
const defaultModalState = {
    isAuthModalOpen: false,
    openAuthModal: ()=>{},
    closeAuthModal: ()=>{}
};
const withMockStore = (Story, context)=>{
    var _context_parameters;
    _s();
    // Reset stores to default state before each story
    react__WEBPACK_IMPORTED_MODULE_2___default().useEffect({
        "withMockStore.useEffect": ()=>{
            var _context_parameters_mockStore, _context_parameters, _context_parameters_mockStore1, _context_parameters1, _context_parameters_mockStore2, _context_parameters2, _context_parameters_mockStore3, _context_parameters3;
            // Apply any story-specific store overrides
            const gameOverrides = ((_context_parameters = context.parameters) === null || _context_parameters === void 0 ? void 0 : (_context_parameters_mockStore = _context_parameters.mockStore) === null || _context_parameters_mockStore === void 0 ? void 0 : _context_parameters_mockStore.game) || {};
            const authOverrides = ((_context_parameters1 = context.parameters) === null || _context_parameters1 === void 0 ? void 0 : (_context_parameters_mockStore1 = _context_parameters1.mockStore) === null || _context_parameters_mockStore1 === void 0 ? void 0 : _context_parameters_mockStore1.auth) || {};
            const settingsOverrides = ((_context_parameters2 = context.parameters) === null || _context_parameters2 === void 0 ? void 0 : (_context_parameters_mockStore2 = _context_parameters2.mockStore) === null || _context_parameters_mockStore2 === void 0 ? void 0 : _context_parameters_mockStore2.settings) || {};
            const modalOverrides = ((_context_parameters3 = context.parameters) === null || _context_parameters3 === void 0 ? void 0 : (_context_parameters_mockStore3 = _context_parameters3.mockStore) === null || _context_parameters_mockStore3 === void 0 ? void 0 : _context_parameters_mockStore3.modal) || {};
            _src_store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore.setState({
                ...defaultGameState,
                ...gameOverrides
            });
            _src_store_useAuthStore__WEBPACK_IMPORTED_MODULE_4__.useAuthStore.setState({
                ...defaultAuthState,
                ...authOverrides
            });
            _src_store_useSettingsStore__WEBPACK_IMPORTED_MODULE_5__.useSettingsStore.setState({
                ...defaultSettingsState,
                ...settingsOverrides
            });
            _src_store_useModalStore__WEBPACK_IMPORTED_MODULE_6__.useModalStore.setState({
                ...defaultModalState,
                ...modalOverrides
            });
        }
    }["withMockStore.useEffect"], [
        (_context_parameters = context.parameters) === null || _context_parameters === void 0 ? void 0 : _context_parameters.mockStore
    ]);
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(Story, {}, void 0, false, {
        fileName: "/home/juhnk/repos/type/packages/web/.storybook/decorators/withMockStore.tsx",
        lineNumber: 115,
        columnNumber: 10
    }, undefined);
};
_s(withMockStore, "OD7bBpZva5O2jO+Puf00hKivP7c=");
withMockStore.__docgenInfo = {
    "description": "",
    "methods": [],
    "displayName": "withMockStore"
};


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./.storybook/decorators/withProviders.tsx":
/*!*************************************************!*\
  !*** ./.storybook/decorators/withProviders.tsx ***!
  \*************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   withProviders: () => (/* binding */ withProviders)
/* harmony export */ });
/* harmony import */ var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/react-refresh/runtime.js */ "../../node_modules/react-refresh/runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "../../node_modules/next/dist/compiled/react/jsx-dev-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "../../node_modules/next/dist/compiled/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _src_components_providers_AuthProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../src/components/providers/AuthProvider */ "./src/components/providers/AuthProvider.tsx");
/* harmony import */ var _src_components_providers_SettingsProvider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../src/components/providers/SettingsProvider */ "./src/components/providers/SettingsProvider.tsx");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");

__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));





const withProviders = (Story)=>{
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_src_components_providers_AuthProvider__WEBPACK_IMPORTED_MODULE_3__.AuthProvider, {
        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_src_components_providers_SettingsProvider__WEBPACK_IMPORTED_MODULE_4__.SettingsProvider, {
            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(Story, {}, void 0, false, {
                fileName: "/home/juhnk/repos/type/packages/web/.storybook/decorators/withProviders.tsx",
                lineNumber: 10,
                columnNumber: 9
            }, undefined)
        }, void 0, false, {
            fileName: "/home/juhnk/repos/type/packages/web/.storybook/decorators/withProviders.tsx",
            lineNumber: 9,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "/home/juhnk/repos/type/packages/web/.storybook/decorators/withProviders.tsx",
        lineNumber: 8,
        columnNumber: 5
    }, undefined);
};
withProviders.__docgenInfo = {
    "description": "",
    "methods": [],
    "displayName": "withProviders"
};


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./.storybook/preview.tsx":
/*!********************************!*\
  !*** ./.storybook/preview.tsx ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/react-refresh/runtime.js */ "../../node_modules/react-refresh/runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "../../node_modules/next/dist/compiled/react/jsx-dev-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "../../node_modules/next/dist/compiled/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _src_app_globals_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../src/app/globals.css */ "./src/app/globals.css");
/* harmony import */ var next_font_google_target_css_path_packages_web_storybook_preview_tsx_import_Inter_arguments_subsets_latin_variable_font_inter_variableName_inter___WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/font/google/target.css?{"path":"packages/web/.storybook/preview.tsx","import":"Inter","arguments":[{"subsets":["latin"],"variable":"--font-inter"}],"variableName":"inter"} */ "../../node_modules/next/font/google/target.css?{\"path\":\"packages/web/.storybook/preview.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"],\"variable\":\"--font-inter\"}],\"variableName\":\"inter\"}");
/* harmony import */ var next_font_google_target_css_path_packages_web_storybook_preview_tsx_import_Inter_arguments_subsets_latin_variable_font_inter_variableName_inter___WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_packages_web_storybook_preview_tsx_import_Inter_arguments_subsets_latin_variable_font_inter_variableName_inter___WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var next_font_google_target_css_path_packages_web_storybook_preview_tsx_import_Roboto_Mono_arguments_subsets_latin_variable_font_roboto_mono_variableName_robotoMono___WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/font/google/target.css?{"path":"packages/web/.storybook/preview.tsx","import":"Roboto_Mono","arguments":[{"subsets":["latin"],"variable":"--font-roboto-mono"}],"variableName":"robotoMono"} */ "../../node_modules/next/font/google/target.css?{\"path\":\"packages/web/.storybook/preview.tsx\",\"import\":\"Roboto_Mono\",\"arguments\":[{\"subsets\":[\"latin\"],\"variable\":\"--font-roboto-mono\"}],\"variableName\":\"robotoMono\"}");
/* harmony import */ var next_font_google_target_css_path_packages_web_storybook_preview_tsx_import_Roboto_Mono_arguments_subsets_latin_variable_font_roboto_mono_variableName_robotoMono___WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_packages_web_storybook_preview_tsx_import_Roboto_Mono_arguments_subsets_latin_variable_font_roboto_mono_variableName_robotoMono___WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _decorators_withProviders__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./decorators/withProviders */ "./.storybook/decorators/withProviders.tsx");
/* harmony import */ var _decorators_withMockStore__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./decorators/withMockStore */ "./.storybook/decorators/withMockStore.tsx");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");

__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));


var _s = __webpack_require__.$Refresh$.signature();

 // Import Tailwind CSS




// Theme decorator with proper types
const withTheme = (Story, context)=>{
    _s();
    // Apply theme and color scheme based on globals
    const theme = context.globals.theme || 'slate';
    const colorScheme = context.globals.colorScheme || 'light';
    react__WEBPACK_IMPORTED_MODULE_2___default().useEffect({
        "withTheme.useEffect": ()=>{
            // Update theme on document root
            document.documentElement.setAttribute('data-theme', theme);
            // Apply color scheme class
            if (colorScheme === 'dark') {
                document.documentElement.classList.add('dark');
                document.documentElement.classList.remove('light');
            } else if (colorScheme === 'light') {
                document.documentElement.classList.add('light');
                document.documentElement.classList.remove('dark');
            } else {
                // Auto mode - use system preference
                const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
                document.documentElement.classList.toggle('dark', prefersDark);
                document.documentElement.classList.toggle('light', !prefersDark);
            }
        }
    }["withTheme.useEffect"], [
        theme,
        colorScheme
    ]);
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
        className: `${(next_font_google_target_css_path_packages_web_storybook_preview_tsx_import_Inter_arguments_subsets_latin_variable_font_inter_variableName_inter___WEBPACK_IMPORTED_MODULE_4___default().variable)} ${(next_font_google_target_css_path_packages_web_storybook_preview_tsx_import_Roboto_Mono_arguments_subsets_latin_variable_font_roboto_mono_variableName_robotoMono___WEBPACK_IMPORTED_MODULE_5___default().variable)} font-sans`,
        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(Story, {}, void 0, false, {
            fileName: "/home/juhnk/repos/type/packages/web/.storybook/preview.tsx",
            lineNumber: 48,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "/home/juhnk/repos/type/packages/web/.storybook/preview.tsx",
        lineNumber: 47,
        columnNumber: 5
    }, undefined);
};
_s(withTheme, "OD7bBpZva5O2jO+Puf00hKivP7c=");
const preview = {
    parameters: {
        controls: {
            matchers: {
                color: /(background|color)$/i,
                date: /Date$/i
            }
        },
        nextjs: {
            appDirectory: true
        },
        docs: {
            toc: true
        },
        viewport: {
            viewports: {
                mobile: {
                    name: 'Mobile',
                    styles: {
                        width: '375px',
                        height: '667px'
                    }
                },
                tablet: {
                    name: 'Tablet',
                    styles: {
                        width: '768px',
                        height: '1024px'
                    }
                },
                desktop: {
                    name: 'Desktop',
                    styles: {
                        width: '1440px',
                        height: '900px'
                    }
                }
            },
            defaultViewport: 'responsive'
        },
        backgrounds: {
            default: 'light',
            values: [
                {
                    name: 'light',
                    value: '#ffffff'
                },
                {
                    name: 'dark',
                    value: '#0f172a'
                },
                {
                    name: 'slate',
                    value: '#f8fafc'
                }
            ]
        }
    },
    decorators: [
        withTheme,
        _decorators_withProviders__WEBPACK_IMPORTED_MODULE_6__.withProviders,
        _decorators_withMockStore__WEBPACK_IMPORTED_MODULE_7__.withMockStore
    ],
    globalTypes: {
        theme: {
            name: 'Theme',
            description: 'TypeAmp theme for components',
            defaultValue: 'slate',
            toolbar: {
                icon: 'paintbrush',
                items: [
                    {
                        value: 'slate',
                        title: 'Slate',
                        icon: 'circle'
                    },
                    {
                        value: 'dark',
                        title: 'Dark',
                        icon: 'circle'
                    },
                    {
                        value: 'nord',
                        title: 'Nord',
                        icon: 'circle'
                    },
                    {
                        value: 'dracula',
                        title: 'Dracula',
                        icon: 'circle'
                    },
                    {
                        value: 'monokai',
                        title: 'Monokai',
                        icon: 'circle'
                    },
                    {
                        value: 'ocean',
                        title: 'Ocean',
                        icon: 'circle'
                    }
                ],
                showName: true,
                dynamicTitle: true
            }
        },
        colorScheme: {
            name: 'Color Scheme',
            description: 'Light/Dark mode preference',
            defaultValue: 'light',
            toolbar: {
                icon: 'sun',
                items: [
                    {
                        value: 'light',
                        title: 'Light',
                        icon: 'sun'
                    },
                    {
                        value: 'dark',
                        title: 'Dark',
                        icon: 'moon'
                    },
                    {
                        value: 'auto',
                        title: 'Auto',
                        icon: 'browser'
                    }
                ],
                showName: true
            }
        }
    },
    tags: [
        'autodocs'
    ]
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (preview);


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$":
/*!*************************************************************************************************************************************************************************************************************************!*\
  !*** ./src/ lazy ^\.\/.*$ include: (?%21.*node_modules)(?:\/src(?:\/(?%21\.)(?:(?:(?%21(?:^%7C\/)\.).)*?)\/%7C\/%7C$)(?%21\.)(?=.)[^/]*?\.stories\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$ chunkName: [request] namespace object ***!
  \*************************************************************************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./components/auth/AuthModal.stories": [
		"./src/components/auth/AuthModal.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"vendors-node_modules_radix-ui_react-slot_dist_index_mjs-node_modules_class-variance-authority-c27766",
		"vendors-node_modules_radix-ui_primitive_dist_index_mjs-node_modules_radix-ui_react-context_di-bafb48",
		"vendors-node_modules_radix-ui_react-collection_dist_index_mjs-node_modules_radix-ui_react-dir-cb6e43",
		"vendors-node_modules_hookform_resolvers_zod_dist_zod_mjs-node_modules_radix-ui_react-dialog_d-02049c",
		"components-auth-AuthModal-stories"
	],
	"./components/auth/AuthModal.stories.tsx": [
		"./src/components/auth/AuthModal.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"vendors-node_modules_radix-ui_react-slot_dist_index_mjs-node_modules_class-variance-authority-c27766",
		"vendors-node_modules_radix-ui_primitive_dist_index_mjs-node_modules_radix-ui_react-context_di-bafb48",
		"vendors-node_modules_radix-ui_react-collection_dist_index_mjs-node_modules_radix-ui_react-dir-cb6e43",
		"vendors-node_modules_hookform_resolvers_zod_dist_zod_mjs-node_modules_radix-ui_react-dialog_d-02049c",
		"components-auth-AuthModal-stories"
	],
	"./stories/Introduction.stories": [
		"./src/stories/Introduction.stories.tsx",
		"stories-Introduction-stories"
	],
	"./stories/Introduction.stories.tsx": [
		"./src/stories/Introduction.stories.tsx",
		"stories-Introduction-stories"
	],
	"./stories/components/game/LiveStats.stories": [
		"./src/stories/components/game/LiveStats.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"stories-components-game-LiveStats-stories"
	],
	"./stories/components/game/LiveStats.stories.tsx": [
		"./src/stories/components/game/LiveStats.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"stories-components-game-LiveStats-stories"
	],
	"./stories/components/game/ResultsCard.stories": [
		"./src/stories/components/game/ResultsCard.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"vendors-node_modules_radix-ui_react-slot_dist_index_mjs-node_modules_class-variance-authority-c27766",
		"src_components_ui_button_tsx-src_components_ui_card_tsx",
		"src_components_game_ResultsCard_tsx",
		"stories-components-game-ResultsCard-stories"
	],
	"./stories/components/game/ResultsCard.stories.tsx": [
		"./src/stories/components/game/ResultsCard.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"vendors-node_modules_radix-ui_react-slot_dist_index_mjs-node_modules_class-variance-authority-c27766",
		"src_components_ui_button_tsx-src_components_ui_card_tsx",
		"src_components_game_ResultsCard_tsx",
		"stories-components-game-ResultsCard-stories"
	],
	"./stories/components/game/TypingArea.stories": [
		"./src/stories/components/game/TypingArea.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"vendors-node_modules_radix-ui_react-slot_dist_index_mjs-node_modules_class-variance-authority-c27766",
		"src_components_ui_button_tsx-src_components_ui_card_tsx",
		"src_components_game_ResultsCard_tsx",
		"src_components_game_TypingArea_tsx",
		"stories-components-game-TypingArea-stories"
	],
	"./stories/components/game/TypingArea.stories.tsx": [
		"./src/stories/components/game/TypingArea.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"vendors-node_modules_radix-ui_react-slot_dist_index_mjs-node_modules_class-variance-authority-c27766",
		"src_components_ui_button_tsx-src_components_ui_card_tsx",
		"src_components_game_ResultsCard_tsx",
		"src_components_game_TypingArea_tsx",
		"stories-components-game-TypingArea-stories"
	],
	"./stories/components/layout/Header.stories": [
		"./src/stories/components/layout/Header.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"vendors-node_modules_radix-ui_react-slot_dist_index_mjs-node_modules_class-variance-authority-c27766",
		"vendors-node_modules_lucide-react_dist_esm_icons_brain-circuit_js-node_modules_lucide-react_d-324d42",
		"stories-components-layout-Header-stories"
	],
	"./stories/components/layout/Header.stories.tsx": [
		"./src/stories/components/layout/Header.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"vendors-node_modules_radix-ui_react-slot_dist_index_mjs-node_modules_class-variance-authority-c27766",
		"vendors-node_modules_lucide-react_dist_esm_icons_brain-circuit_js-node_modules_lucide-react_d-324d42",
		"stories-components-layout-Header-stories"
	],
	"./stories/components/ui/Badge.stories": [
		"./src/stories/components/ui/Badge.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"vendors-node_modules_radix-ui_react-slot_dist_index_mjs-node_modules_class-variance-authority-c27766",
		"stories-components-ui-Badge-stories"
	],
	"./stories/components/ui/Badge.stories.tsx": [
		"./src/stories/components/ui/Badge.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"vendors-node_modules_radix-ui_react-slot_dist_index_mjs-node_modules_class-variance-authority-c27766",
		"stories-components-ui-Badge-stories"
	],
	"./stories/components/ui/Button.stories": [
		"./src/stories/components/ui/Button.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"vendors-node_modules_radix-ui_react-slot_dist_index_mjs-node_modules_class-variance-authority-c27766",
		"stories-components-ui-Button-stories"
	],
	"./stories/components/ui/Button.stories.tsx": [
		"./src/stories/components/ui/Button.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"vendors-node_modules_radix-ui_react-slot_dist_index_mjs-node_modules_class-variance-authority-c27766",
		"stories-components-ui-Button-stories"
	],
	"./stories/components/ui/Card.stories": [
		"./src/stories/components/ui/Card.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"vendors-node_modules_radix-ui_react-slot_dist_index_mjs-node_modules_class-variance-authority-c27766",
		"src_components_ui_button_tsx-src_components_ui_card_tsx",
		"stories-components-ui-Card-stories"
	],
	"./stories/components/ui/Card.stories.tsx": [
		"./src/stories/components/ui/Card.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"vendors-node_modules_radix-ui_react-slot_dist_index_mjs-node_modules_class-variance-authority-c27766",
		"src_components_ui_button_tsx-src_components_ui_card_tsx",
		"stories-components-ui-Card-stories"
	],
	"./stories/components/ui/Input.stories": [
		"./src/stories/components/ui/Input.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"stories-components-ui-Input-stories"
	],
	"./stories/components/ui/Input.stories.tsx": [
		"./src/stories/components/ui/Input.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"stories-components-ui-Input-stories"
	],
	"./stories/components/ui/Select.stories": [
		"./src/stories/components/ui/Select.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"vendors-node_modules_radix-ui_primitive_dist_index_mjs-node_modules_radix-ui_react-context_di-bafb48",
		"vendors-node_modules_radix-ui_react-collection_dist_index_mjs-node_modules_radix-ui_react-dir-cb6e43",
		"vendors-node_modules_radix-ui_react-slot_dist_index_mjs-node_modules_radix-ui_react-use-previ-5c8126",
		"vendors-node_modules_radix-ui_react-select_dist_index_mjs-node_modules_lucide-react_dist_esm_-d1868b",
		"stories-components-ui-Select-stories"
	],
	"./stories/components/ui/Select.stories.tsx": [
		"./src/stories/components/ui/Select.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"vendors-node_modules_radix-ui_primitive_dist_index_mjs-node_modules_radix-ui_react-context_di-bafb48",
		"vendors-node_modules_radix-ui_react-collection_dist_index_mjs-node_modules_radix-ui_react-dir-cb6e43",
		"vendors-node_modules_radix-ui_react-slot_dist_index_mjs-node_modules_radix-ui_react-use-previ-5c8126",
		"vendors-node_modules_radix-ui_react-select_dist_index_mjs-node_modules_lucide-react_dist_esm_-d1868b",
		"stories-components-ui-Select-stories"
	],
	"./stories/components/ui/Switch.stories": [
		"./src/stories/components/ui/Switch.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"vendors-node_modules_radix-ui_primitive_dist_index_mjs-node_modules_radix-ui_react-context_di-bafb48",
		"vendors-node_modules_radix-ui_react-slot_dist_index_mjs-node_modules_radix-ui_react-use-previ-5c8126",
		"vendors-node_modules_radix-ui_react-switch_dist_index_mjs-node_modules_lucide-react_dist_esm_-26d7bf",
		"stories-components-ui-Switch-stories"
	],
	"./stories/components/ui/Switch.stories.tsx": [
		"./src/stories/components/ui/Switch.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"vendors-node_modules_radix-ui_primitive_dist_index_mjs-node_modules_radix-ui_react-context_di-bafb48",
		"vendors-node_modules_radix-ui_react-slot_dist_index_mjs-node_modules_radix-ui_react-use-previ-5c8126",
		"vendors-node_modules_radix-ui_react-switch_dist_index_mjs-node_modules_lucide-react_dist_esm_-26d7bf",
		"stories-components-ui-Switch-stories"
	],
	"./stories/debug/TypingAreaDebug.stories": [
		"./src/stories/debug/TypingAreaDebug.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"vendors-node_modules_radix-ui_react-slot_dist_index_mjs-node_modules_class-variance-authority-c27766",
		"src_components_ui_button_tsx-src_components_ui_card_tsx",
		"src_components_game_ResultsCard_tsx",
		"src_components_game_TypingArea_tsx",
		"stories-debug-TypingAreaDebug-stories"
	],
	"./stories/debug/TypingAreaDebug.stories.tsx": [
		"./src/stories/debug/TypingAreaDebug.stories.tsx",
		"vendors-node_modules_clsx_dist_clsx_mjs-node_modules_tailwind-merge_dist_bundle-mjs_mjs",
		"vendors-node_modules_radix-ui_react-slot_dist_index_mjs-node_modules_class-variance-authority-c27766",
		"src_components_ui_button_tsx-src_components_ui_card_tsx",
		"src_components_game_ResultsCard_tsx",
		"src_components_game_TypingArea_tsx",
		"stories-debug-TypingAreaDebug-stories"
	]
};
function webpackAsyncContext(req) {
	if(!__webpack_require__.o(map, req)) {
		return Promise.resolve().then(() => {
			var e = new Error("Cannot find module '" + req + "'");
			e.code = 'MODULE_NOT_FOUND';
			throw e;
		});
	}

	var ids = map[req], id = ids[0];
	return Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {
		return __webpack_require__(id);
	});
}
webpackAsyncContext.keys = () => (Object.keys(map));
webpackAsyncContext.id = "./src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$";
module.exports = webpackAsyncContext;

/***/ }),

/***/ "./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "../../node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ "../../node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "../../node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "../../node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_18_use_0_globals_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[18].use[0]!./globals.css */ "../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../node_modules/postcss-loader/dist/cjs.js!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[18].use[0]!./src/app/globals.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_18_use_0_globals_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);


if (true) {
  if (!_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_18_use_0_globals_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {
  if (!a && b || a && !b) {
    return false;
  }
  var p;
  for (p in a) {
    if (isNamedExport && p === "default") {
      // eslint-disable-next-line no-continue
      continue;
    }
    if (a[p] !== b[p]) {
      return false;
    }
  }
  for (p in b) {
    if (isNamedExport && p === "default") {
      // eslint-disable-next-line no-continue
      continue;
    }
    if (!a[p]) {
      return false;
    }
  }
  return true;
};
    var isNamedExport = !_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_18_use_0_globals_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals;
    var oldLocals = isNamedExport ? _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_18_use_0_globals_css__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_18_use_0_globals_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals;

    module.hot.accept(
      /*! !!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[18].use[0]!./globals.css */ "../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../node_modules/postcss-loader/dist/cjs.js!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[18].use[0]!./src/app/globals.css",
      __WEBPACK_OUTDATED_DEPENDENCIES__ => { /* harmony import */ _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_18_use_0_globals_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[18].use[0]!./globals.css */ "../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../node_modules/postcss-loader/dist/cjs.js!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[18].use[0]!./src/app/globals.css");
(function () {
        if (!isEqualLocals(oldLocals, isNamedExport ? _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_18_use_0_globals_css__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_18_use_0_globals_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals, isNamedExport)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = isNamedExport ? _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_18_use_0_globals_css__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_18_use_0_globals_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals;

              update(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_18_use_0_globals_css__WEBPACK_IMPORTED_MODULE_6__["default"]);
      })(__WEBPACK_OUTDATED_DEPENDENCIES__); }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}



       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_18_use_0_globals_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_18_use_0_globals_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_node_modules_postcss_loader_dist_cjs_js_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_18_use_0_globals_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./src/components/providers/AuthProvider.tsx":
/*!***************************************************!*\
  !*** ./src/components/providers/AuthProvider.tsx ***!
  \***************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider)
/* harmony export */ });
/* harmony import */ var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/react-refresh/runtime.js */ "../../node_modules/react-refresh/runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "../../node_modules/next/dist/compiled/react/jsx-dev-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "../../node_modules/next/dist/compiled/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _store_useAuthStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/store/useAuthStore */ "./src/store/useAuthStore.ts");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");

__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));


var _s = __webpack_require__.$Refresh$.signature();
'use client';


function AuthProvider({ children }) {
    _s();
    const { initializeAuth } = (0,_store_useAuthStore__WEBPACK_IMPORTED_MODULE_3__.useAuthStore)();
    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({
        "AuthProvider.useEffect": ()=>{
            // Initialize auth state from localStorage on app startup
            initializeAuth();
        }
    }["AuthProvider.useEffect"], [
        initializeAuth
    ]);
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {
        children: children
    }, void 0, false);
}
_s(AuthProvider, "m9jTyOVUWPyBdNrCb1GqMqCRUYw=", false, function() {
    return [
        _store_useAuthStore__WEBPACK_IMPORTED_MODULE_3__.useAuthStore
    ];
});
_c = AuthProvider;
AuthProvider.__docgenInfo = {
    "description": "",
    "methods": [],
    "displayName": "AuthProvider",
    "props": {
        "children": {
            "required": true,
            "tsType": {
                "name": "ReactReactNode",
                "raw": "React.ReactNode"
            },
            "description": ""
        }
    }
};
var _c;
__webpack_require__.$Refresh$.register(_c, "AuthProvider");


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/providers/SettingsProvider.tsx":
/*!*******************************************************!*\
  !*** ./src/components/providers/SettingsProvider.tsx ***!
  \*******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SettingsProvider: () => (/* binding */ SettingsProvider)
/* harmony export */ });
/* harmony import */ var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/react-refresh/runtime.js */ "../../node_modules/react-refresh/runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "../../node_modules/next/dist/compiled/react/jsx-dev-runtime.js");
/* harmony import */ var _hooks_useAppliedSettings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/hooks/useAppliedSettings */ "./src/hooks/useAppliedSettings.ts");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");

__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));


var _s = __webpack_require__.$Refresh$.signature();
'use client';

function SettingsProvider({ children }) {
    _s();
    (0,_hooks_useAppliedSettings__WEBPACK_IMPORTED_MODULE_2__.useAppliedSettings)();
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {
        children: children
    }, void 0, false);
}
_s(SettingsProvider, "14i6GoOh81mDFEM79f6H5meUW/4=", false, function() {
    return [
        _hooks_useAppliedSettings__WEBPACK_IMPORTED_MODULE_2__.useAppliedSettings
    ];
});
_c = SettingsProvider;
SettingsProvider.__docgenInfo = {
    "description": "",
    "methods": [],
    "displayName": "SettingsProvider",
    "props": {
        "children": {
            "required": true,
            "tsType": {
                "name": "ReactReactNode",
                "raw": "React.ReactNode"
            },
            "description": ""
        }
    }
};
var _c;
__webpack_require__.$Refresh$.register(_c, "SettingsProvider");


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/hooks/useAppliedSettings.ts":
/*!*****************************************!*\
  !*** ./src/hooks/useAppliedSettings.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useAppliedSettings: () => (/* binding */ useAppliedSettings)
/* harmony export */ });
/* harmony import */ var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/react-refresh/runtime.js */ "../../node_modules/react-refresh/runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/next/dist/compiled/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _store_useSettingsStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/store/useSettingsStore */ "./src/store/useSettingsStore.ts");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");

__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));



function useAppliedSettings() {
    const settings = (0,_store_useSettingsStore__WEBPACK_IMPORTED_MODULE_2__.useSettingsStore)({
        "useAppliedSettings.useSettingsStore[settings]": (state)=>state.settings
    }["useAppliedSettings.useSettingsStore[settings]"]);
    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({
        "useAppliedSettings.useEffect": ()=>{
            // Apply theme
            document.documentElement.setAttribute('data-theme', settings.appearance.theme);
            // Apply color scheme
            if (settings.appearance.colorScheme === 'dark') {
                document.documentElement.classList.add('dark');
            } else if (settings.appearance.colorScheme === 'light') {
                document.documentElement.classList.remove('dark');
            } else {
                // Auto - use system preference
                if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
                    document.documentElement.classList.add('dark');
                } else {
                    document.documentElement.classList.remove('dark');
                }
            }
            // Apply font
            document.documentElement.style.setProperty('--typing-font', settings.appearance.font);
            // Apply animations
            if (!settings.appearance.animations) {
                document.documentElement.classList.add('no-animations');
            } else {
                document.documentElement.classList.remove('no-animations');
            }
            // Apply caret color
            document.documentElement.style.setProperty('--caret-color', settings.appearance.caretColor);
            // Apply font size
            document.documentElement.style.setProperty('--typing-font-size', `${settings.appearance.fontSize}px`);
            // Handle responsive font sizing
            const handleResize = {
                "useAppliedSettings.useEffect.handleResize": ()=>{
                    const isMobile = window.innerWidth < 640;
                    const adjustedFontSize = isMobile ? Math.max(14, settings.appearance.fontSize - 2) : settings.appearance.fontSize;
                    document.documentElement.style.setProperty('--typing-font-size-responsive', `${adjustedFontSize}px`);
                }
            }["useAppliedSettings.useEffect.handleResize"];
            handleResize();
            window.addEventListener('resize', handleResize);
            return ({
                "useAppliedSettings.useEffect": ()=>{
                    window.removeEventListener('resize', handleResize);
                }
            })["useAppliedSettings.useEffect"];
        }
    }["useAppliedSettings.useEffect"], [
        settings.appearance
    ]);
    return settings;
}


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/lib/api-client.ts":
/*!*******************************!*\
  !*** ./src/lib/api-client.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   apiClient: () => (/* binding */ apiClient),
/* harmony export */   fetcher: () => (/* binding */ fetcher),
/* harmony export */   generateChallenge: () => (/* binding */ generateChallenge),
/* harmony export */   getSettings: () => (/* binding */ getSettings),
/* harmony export */   getWordLists: () => (/* binding */ getWordLists),
/* harmony export */   getWords: () => (/* binding */ getWords),
/* harmony export */   loginUser: () => (/* binding */ loginUser),
/* harmony export */   registerUser: () => (/* binding */ registerUser),
/* harmony export */   resetSettings: () => (/* binding */ resetSettings),
/* harmony export */   saveSingleTest: () => (/* binding */ saveSingleTest),
/* harmony export */   syncLocalHistory: () => (/* binding */ syncLocalHistory),
/* harmony export */   updateSettings: () => (/* binding */ updateSettings)
/* harmony export */ });
/* harmony import */ var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/react-refresh/runtime.js */ "../../node_modules/react-refresh/runtime.js");
/* harmony import */ var _history__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./history */ "./src/lib/history.ts");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");

__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));


const API_BASE_URL = "http://localhost:8081" || 0;
class ApiClient {
    async makeRequest(endpoint, options = {}) {
        const url = `${API_BASE_URL}${endpoint}`;
        const config = {
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            },
            // Add timeout and better error handling
            signal: AbortSignal.timeout(10000),
            ...options
        };
        try {
            const response = await fetch(url, config);
            // Handle non-JSON responses or network errors
            let data;
            try {
                data = await response.json();
            } catch (e) {
                throw new Error(`Server returned invalid response. Status: ${response.status}`);
            }
            if (!response.ok) {
                // Provide more specific error messages based on status code
                if (response.status === 0 || response.status >= 500) {
                    throw new Error('Server is currently unavailable. Please try again later.');
                } else if (response.status === 404) {
                    throw new Error('The requested resource was not found.');
                } else if (response.status === 401) {
                    throw new Error('Invalid credentials. Please check your email and password.');
                } else if (response.status === 409) {
                    throw new Error('An account with this email already exists.');
                } else {
                    throw new Error((data === null || data === void 0 ? void 0 : data.error) || `Request failed with status ${response.status}`);
                }
            }
            return data;
        } catch (error) {
            // Handle network errors and timeouts
            if (error instanceof Error) {
                if (error.name === 'AbortError' || error.name === 'TimeoutError') {
                    throw new Error('Request timed out. Please check your connection and try again.');
                } else if (error.message.includes('Failed to fetch') || error.message.includes('NetworkError')) {
                    throw new Error('Network error. Please check your internet connection and ensure the server is running.');
                }
                // Re-throw our custom errors
                throw error;
            }
            throw new Error('An unexpected error occurred. Please try again.');
        }
    }
    constructor(){
        // Use arrow functions to preserve 'this' context when destructured
        this.registerUser = async (data)=>{
            return this.makeRequest('/api/auth/register', {
                method: 'POST',
                body: JSON.stringify(data)
            });
        };
        this.loginUser = async (data)=>{
            return this.makeRequest('/api/auth/login', {
                method: 'POST',
                body: JSON.stringify(data)
            });
        };
        this.syncLocalHistory = async (token)=>{
            const localHistory = (0,_history__WEBPACK_IMPORTED_MODULE_1__.getTestHistory)();
            // If no local history exists, return null
            if (localHistory.length === 0) {
                return null;
            }
            // Transform local TestResult format to match API expected format
            const transformedHistory = localHistory.map((test)=>({
                    wpm: test.wpm,
                    accuracy: test.accuracy,
                    rawWpm: test.wpm,
                    consistency: null,
                    config: {
                        mode: test.mode,
                        duration: test.duration,
                        wordCount: test.wordCount,
                        textSource: test.textSource,
                        difficulty: test.difficulty,
                        punctuation: test.punctuation
                    },
                    tags: [],
                    timestamp: new Date(test.timestamp).toISOString()
                }));
            const response = await this.makeRequest('/api/me/tests/bulk', {
                method: 'POST',
                headers: {
                    Authorization: `Bearer ${token}`
                },
                body: JSON.stringify({
                    testResults: transformedHistory
                })
            });
            // Clear local history after successful sync
            (0,_history__WEBPACK_IMPORTED_MODULE_1__.clearTestHistory)();
            return response;
        };
        this.generateChallenge = async (prompt, token)=>{
            return this.makeRequest('/api/generate-challenge', {
                method: 'POST',
                headers: {
                    Authorization: `Bearer ${token}`
                },
                body: JSON.stringify({
                    prompt
                })
            });
        };
        this.saveSingleTest = async (result, token)=>{
            // Transform local TestResult format to match API expected format
            const transformedResult = {
                wpm: result.wpm,
                accuracy: result.accuracy,
                rawWpm: result.wpm,
                consistency: null,
                config: {
                    mode: result.mode,
                    duration: result.duration,
                    wordCount: result.wordCount,
                    textSource: result.textSource,
                    difficulty: result.difficulty,
                    punctuation: result.punctuation
                },
                tags: [],
                timestamp: new Date(result.timestamp).toISOString()
            };
            return this.makeRequest('/api/me/tests', {
                method: 'POST',
                headers: {
                    Authorization: `Bearer ${token}`
                },
                body: JSON.stringify(transformedResult)
            });
        };
        // Word Source API methods
        this.getWords = async (list = 'english1k', limit = 100, randomize = true, options = {})=>{
            const params = new URLSearchParams({
                list,
                limit: limit.toString(),
                randomize: randomize.toString()
            });
            // Add enhancement parameters if specified
            if (options.punctuation !== undefined) {
                params.append('punctuation', options.punctuation.toString());
            }
            if (options.numbers !== undefined) {
                params.append('numbers', options.numbers.toString());
            }
            if (options.punctuationDensity) {
                params.append('punctuation_density', options.punctuationDensity);
            }
            return this.makeRequest(`/api/words?${params.toString()}`);
        };
        this.getWordLists = async ()=>{
            return this.makeRequest('/api/words/lists');
        };
        // Settings API methods
        this.getSettings = async (token)=>{
            return this.makeRequest('/api/me/settings', {
                headers: {
                    Authorization: `Bearer ${token}`
                }
            });
        };
        this.updateSettings = async (settings, token)=>{
            return this.makeRequest('/api/me/settings', {
                method: 'PUT',
                headers: {
                    Authorization: `Bearer ${token}`
                },
                body: JSON.stringify(settings)
            });
        };
        this.resetSettings = async (token)=>{
            return this.makeRequest('/api/me/settings', {
                method: 'DELETE',
                headers: {
                    Authorization: `Bearer ${token}`
                }
            });
        };
    }
}
const apiClient = new ApiClient();
// Export convenience functions with proper binding
const { registerUser, loginUser, syncLocalHistory, generateChallenge, saveSingleTest, getWords, getWordLists, getSettings, updateSettings, resetSettings } = apiClient;
// SWR fetcher function for authenticated GET requests
async function fetcher(url, token) {
    const response = await fetch(`${API_BASE_URL}${url}`, {
        headers: {
            Authorization: `Bearer ${token}`,
            'Content-Type': 'application/json'
        }
    });
    if (!response.ok) {
        const data = await response.json();
        const error = new Error('An error occurred while fetching the data.');
        error.info = data;
        error.status = response.status;
        throw error;
    }
    return response.json();
}


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/lib/history.ts":
/*!****************************!*\
  !*** ./src/lib/history.ts ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   calculateAverageAccuracy: () => (/* binding */ calculateAverageAccuracy),
/* harmony export */   calculateAverageWpm: () => (/* binding */ calculateAverageWpm),
/* harmony export */   calculateHighestWpm: () => (/* binding */ calculateHighestWpm),
/* harmony export */   clearTestHistory: () => (/* binding */ clearTestHistory),
/* harmony export */   getTestHistory: () => (/* binding */ getTestHistory),
/* harmony export */   getTestStatistics: () => (/* binding */ getTestStatistics),
/* harmony export */   getTotalTestsTaken: () => (/* binding */ getTotalTestsTaken),
/* harmony export */   saveTestResult: () => (/* binding */ saveTestResult)
/* harmony export */ });
/* harmony import */ var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/react-refresh/runtime.js */ "../../node_modules/react-refresh/runtime.js");
/* provided dependency */ var console = __webpack_require__(/*! ../../node_modules/console-browserify/index.js */ "../../node_modules/console-browserify/index.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");

__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));

// Test result interface matching GDD Section 4.2 schema
// Storage key for localStorage
const STORAGE_KEY = 'typeamp-data';
/**
 * Retrieves test history from localStorage
 * @returns Array of test results, empty array if no data exists
 */ function getTestHistory() {
    if (false) {}
    try {
        const storedData = localStorage.getItem(STORAGE_KEY);
        if (!storedData) {
            return [];
        }
        const parsedData = JSON.parse(storedData);
        // Ensure we have a testHistory array
        if (!parsedData.testHistory || !Array.isArray(parsedData.testHistory)) {
            return [];
        }
        return parsedData.testHistory;
    } catch (error) {
        console.error('Error retrieving test history:', error);
        return [];
    }
}
/**
 * Saves a new test result to localStorage
 * @param result - The test result to save
 */ function saveTestResult(result) {
    if (false) {}
    try {
        // Get existing history
        const existingHistory = getTestHistory();
        // Add new result to the beginning of the array (most recent first)
        const updatedHistory = [
            result,
            ...existingHistory
        ];
        // Limit history to last 100 results to prevent excessive storage
        const limitedHistory = updatedHistory.slice(0, 100);
        // Create the full data structure
        const dataToStore = {
            testHistory: limitedHistory,
            lastUpdated: Date.now()
        };
        // Save to localStorage
        localStorage.setItem(STORAGE_KEY, JSON.stringify(dataToStore));
    } catch (error) {
        console.error('Error saving test result:', error);
    }
}
/**
 * Clears all test history from localStorage
 */ function clearTestHistory() {
    if (false) {}
    try {
        localStorage.removeItem(STORAGE_KEY);
    } catch (error) {
        console.error('Error clearing test history:', error);
    }
}
/**
 * Gets statistics from test history
 * @returns Object with calculated statistics
 */ function getTestStatistics() {
    const history = getTestHistory();
    if (history.length === 0) {
        return {
            totalTests: 0,
            averageWpm: 0,
            averageAccuracy: 0,
            bestWpm: 0,
            totalTimeTyping: 0
        };
    }
    const totalTests = history.length;
    const totalWpm = history.reduce((sum, test)=>sum + test.wpm, 0);
    const totalAccuracy = history.reduce((sum, test)=>sum + test.accuracy, 0);
    const bestWpm = Math.max(...history.map((test)=>test.wpm));
    // Calculate total time spent typing (in seconds)
    const totalTimeTyping = history.reduce((sum, test)=>{
        if (test.mode === 'time' && test.duration) {
            return sum + test.duration;
        }
        // For words/quote modes, estimate based on WPM
        const estimatedTime = test.totalChars / 5 / test.wpm * 60;
        return sum + estimatedTime;
    }, 0);
    return {
        totalTests,
        averageWpm: Math.round(totalWpm / totalTests),
        averageAccuracy: Math.round(totalAccuracy / totalTests),
        bestWpm,
        totalTimeTyping: Math.round(totalTimeTyping)
    };
}
/**
 * Calculate average WPM from test results
 * @param testResults - Array of test results
 * @returns Average WPM rounded to nearest integer
 */ function calculateAverageWpm(testResults) {
    if (testResults.length === 0) return 0;
    const totalWpm = testResults.reduce((sum, test)=>sum + test.wpm, 0);
    return Math.round(totalWpm / testResults.length);
}
/**
 * Find highest WPM from test results
 * @param testResults - Array of test results
 * @returns Highest WPM achieved
 */ function calculateHighestWpm(testResults) {
    if (testResults.length === 0) return 0;
    return Math.max(...testResults.map((test)=>test.wpm));
}
/**
 * Calculate average accuracy from test results
 * @param testResults - Array of test results
 * @returns Average accuracy as percentage rounded to nearest integer
 */ function calculateAverageAccuracy(testResults) {
    if (testResults.length === 0) return 0;
    const totalAccuracy = testResults.reduce((sum, test)=>sum + test.accuracy, 0);
    return Math.round(totalAccuracy / testResults.length);
}
/**
 * Get total number of tests taken
 * @param testResults - Array of test results
 * @returns Total number of tests
 */ function getTotalTestsTaken(testResults) {
    return testResults.length;
}


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/lib/textGenerator.ts":
/*!**********************************!*\
  !*** ./src/lib/textGenerator.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   generateFallbackText: () => (/* binding */ generateFallbackText),
/* harmony export */   generateTextFromWords: () => (/* binding */ generateTextFromWords)
/* harmony export */ });
/* harmony import */ var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/react-refresh/runtime.js */ "../../node_modules/react-refresh/runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");

__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));

/**
 * Generates typing text from fetched words based on test configuration
 */ function generateTextFromWords(words, config) {
    if (!words || words.length === 0) {
        throw new Error('No words provided for text generation');
    }
    switch(config.mode){
        case 'time':
            return generateTimedText(words, config.duration, config.punctuation);
        case 'words':
            return generateWordCountText(words, config.wordCount, config.punctuation);
        case 'quote':
            return generateQuoteText(words, config.punctuation);
        default:
            return words.slice(0, 50).join(' ');
    }
}
/**
 * Generates text for time-based mode
 */ function generateTimedText(words, duration, includePunctuation) {
    // Estimate words needed based on average typing speed (40 WPM)
    // Add 20% buffer to ensure enough text
    const estimatedWordsNeeded = Math.ceil(duration / 60 * 40 * 1.2);
    const repeatedWords = repeatWords(words, estimatedWordsNeeded);
    if (includePunctuation) {
        return addPunctuation(repeatedWords);
    }
    return repeatedWords.join(' ');
}
/**
 * Generates text for word count mode
 */ function generateWordCountText(words, wordCount, includePunctuation) {
    const selectedWords = repeatWords(words, wordCount);
    if (includePunctuation) {
        return addPunctuation(selectedWords);
    }
    return selectedWords.join(' ');
}
/**
 * Generates quote-like text
 */ function generateQuoteText(words, includePunctuation) {
    // Create sentences of varying lengths
    const sentences = [];
    let wordIndex = 0;
    // Generate 3-5 sentences
    const sentenceCount = Math.floor(Math.random() * 3) + 3;
    for(let i = 0; i < sentenceCount; i++){
        // Each sentence has 5-15 words
        const sentenceLength = Math.floor(Math.random() * 11) + 5;
        const sentenceWords = [];
        for(let j = 0; j < sentenceLength; j++){
            sentenceWords.push(words[wordIndex % words.length]);
            wordIndex++;
        }
        // Capitalize first word
        if (sentenceWords.length > 0) {
            sentenceWords[0] = capitalizeFirst(sentenceWords[0]);
        }
        const sentence = sentenceWords.join(' ');
        sentences.push(includePunctuation ? sentence + '.' : sentence);
    }
    return sentences.join(' ');
}
/**
 * Repeats words array to reach target count
 */ function repeatWords(words, targetCount) {
    const result = [];
    let index = 0;
    while(result.length < targetCount){
        result.push(words[index % words.length]);
        index++;
    }
    return result.slice(0, targetCount);
}
/**
 * Enhanced punctuation generation with realistic patterns
 */ function addPunctuation(words) {
    if (!words.length) return '';
    const sentences = [];
    let currentSentence = [];
    let wordIndex = 0;
    // Number patterns for realistic number insertion
    const numberPatterns = [
        ()=>Math.floor(Math.random() * 25) + 2000,
        ()=>Math.floor(Math.random() * 100) + 1,
        ()=>(Math.random() * 100).toFixed(1) + '%',
        ()=>'$' + (Math.random() * 1000).toFixed(2),
        ()=>Math.floor(Math.random() * 12) + 1,
        ()=>Math.floor(Math.random() * 31) + 1
    ];
    while(wordIndex < words.length){
        // Determine sentence length (6-18 words for more variation)
        const sentenceLength = Math.floor(Math.random() * 13) + 6;
        currentSentence = [];
        for(let i = 0; i < sentenceLength && wordIndex < words.length; i++){
            let currentWord = words[wordIndex];
            // Insert numbers occasionally (8% chance)
            if (Math.random() < 0.08) {
                const numberPattern = numberPatterns[Math.floor(Math.random() * numberPatterns.length)];
                currentSentence.push(numberPattern().toString());
                if (Math.random() < 0.7) {
                    // 70% chance to add a word after number
                    currentSentence.push(currentWord);
                    wordIndex++;
                }
                continue;
            }
            // Add commas for lists and compound sentences
            if (i > 2 && i < sentenceLength - 2 && Math.random() < 0.15) {
                currentWord += ',';
            }
            // Add contractions and possessives
            if (Math.random() < 0.12) {
                const contractions = {
                    it: [
                        "it's",
                        "it'll"
                    ],
                    do: [
                        "don't",
                        "doesn't"
                    ],
                    can: [
                        "can't",
                        'cannot'
                    ],
                    will: [
                        "won't",
                        "we'll"
                    ],
                    have: [
                        "haven't",
                        "hasn't"
                    ],
                    would: [
                        "wouldn't",
                        "we'd"
                    ],
                    could: [
                        "couldn't",
                        "could've"
                    ],
                    should: [
                        "shouldn't",
                        "should've"
                    ],
                    i: [
                        "I'm",
                        "I'll",
                        "I've",
                        "I'd"
                    ],
                    you: [
                        "you're",
                        "you'll",
                        "you've",
                        "you'd"
                    ],
                    we: [
                        "we're",
                        "we'll",
                        "we've",
                        "we'd"
                    ],
                    they: [
                        "they're",
                        "they'll",
                        "they've",
                        "they'd"
                    ]
                };
                const lowerWord = currentWord.toLowerCase();
                if (contractions[lowerWord] && Math.random() < 0.6) {
                    const options = contractions[lowerWord];
                    currentWord = options[Math.floor(Math.random() * options.length)];
                } else if (Math.random() < 0.05) {
                    currentWord += "'s"; // Possessive
                }
            }
            currentSentence.push(currentWord);
            wordIndex++;
        }
        // Capitalize first word of sentence
        if (currentSentence.length > 0) {
            currentSentence[0] = capitalizeFirst(currentSentence[0]);
        }
        // Add sentence-ending punctuation with more variety
        if (currentSentence.length > 0) {
            const lastWordIndex = currentSentence.length - 1;
            const lastWord = currentSentence[lastWordIndex];
            const rand = Math.random();
            if (rand < 0.05) {
                currentSentence[lastWordIndex] = lastWord + '?';
            } else if (rand < 0.08) {
                currentSentence[lastWordIndex] = lastWord + '!';
            } else if (rand < 0.02) {
                currentSentence[lastWordIndex] = lastWord + '...';
            } else {
                currentSentence[lastWordIndex] = lastWord + '.';
            }
        }
        if (currentSentence.length > 0) {
            sentences.push(currentSentence.join(' '));
        }
    }
    // Add quotation marks occasionally around whole sentences
    if (sentences.length > 1 && Math.random() < 0.08) {
        const quoteIndex = Math.floor(Math.random() * sentences.length);
        sentences[quoteIndex] = `"${sentences[quoteIndex]}"`;
    }
    // Add semicolons for complex sentences
    const finalText = sentences.join(' ');
    return addAdvancedPunctuation(finalText);
}
/**
 * Add advanced punctuation patterns (semicolons, colons, parentheses)
 */ function addAdvancedPunctuation(text) {
    let result = text;
    // Add semicolons occasionally between sentences (2% chance)
    if (Math.random() < 0.02) {
        result = result.replace(/\. ([A-Z])/g, (match, p1)=>{
            return Math.random() < 0.3 ? `; ${p1.toLowerCase()}` : match;
        });
    }
    // Add colons for explanations (1% chance)
    if (Math.random() < 0.01) {
        result = result.replace(/\. ([A-Z][^.]*\.)/g, (match, p1)=>{
            return Math.random() < 0.5 ? `: ${p1.toLowerCase()}` : match;
        });
    }
    // Add parenthetical remarks (3% chance)
    if (Math.random() < 0.03) {
        const words = result.split(' ');
        if (words.length > 10) {
            const insertPos = Math.floor(Math.random() * (words.length - 5)) + 3;
            const parentheticalWords = [
                'like this',
                'for example',
                'of course',
                'obviously',
                'naturally'
            ];
            const parenthetical = parentheticalWords[Math.floor(Math.random() * parentheticalWords.length)];
            words.splice(insertPos, 0, `(${parenthetical})`);
            result = words.join(' ');
        }
    }
    return result;
}
/**
 * Capitalizes the first letter of a word
 */ function capitalizeFirst(word) {
    if (!word) return word;
    return word.charAt(0).toUpperCase() + word.slice(1);
}
/**
 * Generates fallback text when API fails
 */ function generateFallbackText(config) {
    const fallbackWords = [
        'the',
        'quick',
        'brown',
        'fox',
        'jumps',
        'over',
        'lazy',
        'dog',
        'and',
        'runs',
        'through',
        'forest',
        'with',
        'great',
        'speed',
        'while',
        'birds',
        'sing',
        'above',
        'trees',
        'under',
        'bright',
        'blue',
        'sky',
        'during',
        'sunny',
        'afternoon',
        'near',
        'peaceful',
        'river',
        'flowing',
        'gently',
        'towards',
        'distant',
        'mountains',
        'where',
        'eagles',
        'soar',
        'high',
        'among',
        'white',
        'clouds',
        'drifting',
        'slowly',
        'across',
        'vast',
        'horizon',
        'beneath',
        'warm',
        'golden',
        'sunlight',
        'shining'
    ];
    return generateTextFromWords(fallbackWords, config);
}


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/store/useAuthStore.ts":
/*!***********************************!*\
  !*** ./src/store/useAuthStore.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useAuthStore: () => (/* binding */ useAuthStore)
/* harmony export */ });
/* harmony import */ var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/react-refresh/runtime.js */ "../../node_modules/react-refresh/runtime.js");
/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ "../../node_modules/zustand/esm/react.mjs");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");

__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));


const TOKEN_KEY = 'typeamp_token';
const useAuthStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)((set)=>({
        user: null,
        token: null,
        login: (user, token)=>{
            // Save token to localStorage
            localStorage.setItem(TOKEN_KEY, token);
            // Update store state
            set({
                user,
                token
            });
        },
        logout: ()=>{
            // Remove token from localStorage
            localStorage.removeItem(TOKEN_KEY);
            // Clear store state
            set({
                user: null,
                token: null
            });
        },
        initializeAuth: ()=>{
            // Check for existing token in localStorage on app startup
            const token = localStorage.getItem(TOKEN_KEY);
            if (token) {
                // Note: In a real app, you might want to validate the token
                // or fetch user data from the server here
                set({
                    token
                });
            }
        }
    }));


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/store/useGameStore.ts":
/*!***********************************!*\
  !*** ./src/store/useGameStore.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useGameStore: () => (/* binding */ useGameStore)
/* harmony export */ });
/* harmony import */ var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/react-refresh/runtime.js */ "../../node_modules/react-refresh/runtime.js");
/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! zustand */ "../../node_modules/zustand/esm/react.mjs");
/* harmony import */ var _lib_history__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/history */ "./src/lib/history.ts");
/* harmony import */ var _lib_api_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/api-client */ "./src/lib/api-client.ts");
/* harmony import */ var _useAuthStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useAuthStore */ "./src/store/useAuthStore.ts");
/* harmony import */ var _lib_textGenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/textGenerator */ "./src/lib/textGenerator.ts");
/* provided dependency */ var console = __webpack_require__(/*! ../../node_modules/console-browserify/index.js */ "../../node_modules/console-browserify/index.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");

__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));






// Default values
const defaultTestConfig = {
    mode: 'time',
    duration: 60,
    wordCount: 50,
    difficulty: 'Normal',
    textSource: 'english1k',
    punctuation: false
};
const defaultStats = {
    wpm: 0,
    accuracy: 0,
    startTime: 0,
    totalChars: 0,
    correctChars: 0,
    incorrectChars: 0,
    elapsedTime: 0
};
const defaultTextWindow = {
    lines: [],
    scrollOffset: 0,
    lineCharOffsets: []
};
// Sample text for development
const sampleText = 'the quick brown fox jumps over the lazy dog';
// Zustand Store
const useGameStore = (0,zustand__WEBPACK_IMPORTED_MODULE_5__.create)((set, get)=>({
        // Initial state
        testConfig: defaultTestConfig,
        textToType: sampleText,
        charStates: sampleText.split('').map((char)=>({
                char,
                status: 'default'
            })),
        userInput: '',
        gameStatus: 'ready',
        stats: defaultStats,
        isLoadingWords: false,
        wordsError: null,
        words: [],
        isPreparingGame: false,
        gamePreparationError: null,
        // Text window state
        textWindow: defaultTextWindow,
        maxCharsPerLine: 70,
        isContentStreaming: false,
        // Timer state
        timeRemaining: 0,
        isTimerRunning: false,
        gameStartTime: null,
        timerId: null,
        // Word tracking state
        wordsCompleted: 0,
        targetWordCount: 0,
        wordsProgress: 0,
        currentWordIndex: 0,
        wordBoundaries: [],
        // Failure tracking
        testFailed: false,
        failureReason: null,
        // Actions
        setTestConfig: (config)=>{
            const { gameStatus } = get();
            // Store previous values to detect changes
            const prevConfig = get().testConfig;
            // Reset timer if duration or mode changes
            if (config.duration !== undefined || config.mode !== undefined) {
                get().resetTimer();
            }
            // Update configuration
            set((state)=>({
                    testConfig: {
                        ...state.testConfig,
                        ...config
                    }
                }));
            // Check if any configuration actually changed
            const configChanged = Object.keys(config).some((key)=>config[key] !== prevConfig[key]);
            // Prepare new game if any config changed and game is not running
            // This ensures all Command Palette changes trigger game preparation
            if (configChanged && gameStatus !== 'running') {
                get().prepareGame();
            }
            // Initialize timer state for time mode
            if (config.mode === 'time' || config.duration !== undefined && get().testConfig.mode === 'time') {
                const { duration } = get().testConfig;
                set({
                    timeRemaining: duration * 1000
                });
            }
        },
        setTextToType: (text)=>{
            const boundaries = get().calculateWordBoundaries(text);
            const { testConfig } = get();
            // Initialize the text window for the new text
            get().initializeTextWindow(text);
            set({
                textToType: text,
                charStates: text.split('').map((char, index)=>({
                        char,
                        status: index === 0 ? 'current' : 'default'
                    })),
                userInput: '',
                gameStatus: 'ready',
                wordBoundaries: boundaries,
                wordsCompleted: 0,
                wordsProgress: 0,
                currentWordIndex: 0,
                targetWordCount: testConfig.mode === 'words' ? testConfig.wordCount : 0
            });
        },
        loadWordsFromAPI: async ()=>{
            const { testConfig } = get();
            set({
                isLoadingWords: true,
                wordsError: null
            });
            try {
                // Calculate word count based on mode
                let wordLimit = 100; // Default for time mode
                if (testConfig.mode === 'words') {
                    wordLimit = testConfig.wordCount;
                } else if (testConfig.mode === 'time') {
                    // Estimate words needed based on duration (assuming 40 WPM average)
                    wordLimit = Math.max(100, Math.ceil(testConfig.duration * 40 / 60));
                }
                const response = await (0,_lib_api_client__WEBPACK_IMPORTED_MODULE_2__.getWords)(testConfig.textSource, wordLimit, true, {
                    punctuation: testConfig.punctuation,
                    numbers: testConfig.punctuation,
                    punctuationDensity: 'medium'
                });
                if (response.words && response.words.length > 0) {
                    // Use enhanced text from API if available, otherwise join words
                    const text = response.enhanced_text || response.words.join(' ');
                    get().setTextToType(text);
                } else {
                    throw new Error('No words received from API');
                }
                set({
                    isLoadingWords: false
                });
            } catch (error) {
                const errorMessage = error instanceof Error ? error.message : 'Failed to load words';
                set({
                    isLoadingWords: false,
                    wordsError: errorMessage,
                    // Fall back to sample text on error
                    textToType: sampleText,
                    charStates: sampleText.split('').map((char)=>({
                            char,
                            status: 'default'
                        }))
                });
                console.error('Failed to load words from API:', error);
            }
        },
        prepareGame: async ()=>{
            const { testConfig } = get();
            set({
                isPreparingGame: true,
                gamePreparationError: null
            });
            try {
                // Calculate word count based on mode
                let wordLimit = 100; // Default for time mode
                if (testConfig.mode === 'words') {
                    wordLimit = testConfig.wordCount;
                } else if (testConfig.mode === 'time') {
                    // Estimate words needed based on duration (assuming 40 WPM average)
                    // Add extra buffer for faster typists
                    wordLimit = Math.max(100, Math.ceil(testConfig.duration * 50 / 60));
                } else if (testConfig.mode === 'quote') {
                    // For quote mode, get a reasonable amount of words
                    wordLimit = 200;
                }
                const response = await (0,_lib_api_client__WEBPACK_IMPORTED_MODULE_2__.getWords)(testConfig.textSource, wordLimit, true, {
                    punctuation: testConfig.punctuation,
                    numbers: testConfig.punctuation,
                    punctuationDensity: 'medium'
                });
                if (response.words && response.words.length > 0) {
                    // Store the fetched words
                    set({
                        words: response.words
                    });
                    // Use enhanced text from API if available, otherwise generate locally
                    const generatedText = response.enhanced_text || (0,_lib_textGenerator__WEBPACK_IMPORTED_MODULE_4__.generateTextFromWords)(response.words, testConfig);
                    // Set the generated text and update char states
                    const newCharStates = generatedText.split('').map((char, index)=>({
                            char,
                            status: index === 0 ? 'current' : 'default'
                        }));
                    // Calculate word boundaries
                    const boundaries = get().calculateWordBoundaries(generatedText);
                    // Initialize the text window
                    get().initializeTextWindow(generatedText);
                    set({
                        textToType: generatedText,
                        charStates: newCharStates,
                        userInput: '',
                        gameStatus: 'ready',
                        isPreparingGame: false,
                        gamePreparationError: null,
                        // Initialize timer for time mode
                        timeRemaining: testConfig.mode === 'time' ? testConfig.duration * 1000 : 0,
                        // Initialize word tracking for words mode
                        wordBoundaries: boundaries,
                        wordsCompleted: 0,
                        wordsProgress: 0,
                        currentWordIndex: 0,
                        targetWordCount: testConfig.mode === 'words' ? testConfig.wordCount : 0
                    });
                } else {
                    throw new Error('No words received from API');
                }
            } catch (error) {
                const errorMessage = error instanceof Error ? error.message : 'Failed to prepare game';
                // Generate fallback text
                const fallbackText = (0,_lib_textGenerator__WEBPACK_IMPORTED_MODULE_4__.generateFallbackText)(testConfig);
                const fallbackCharStates = fallbackText.split('').map((char, index)=>({
                        char,
                        status: index === 0 ? 'current' : 'default'
                    }));
                // Calculate word boundaries for fallback text
                const boundaries = get().calculateWordBoundaries(fallbackText);
                // Initialize the text window for fallback text
                get().initializeTextWindow(fallbackText);
                set({
                    isPreparingGame: false,
                    gamePreparationError: errorMessage,
                    textToType: fallbackText,
                    charStates: fallbackCharStates,
                    userInput: '',
                    gameStatus: 'ready',
                    // Initialize timer for time mode
                    timeRemaining: testConfig.mode === 'time' ? testConfig.duration * 1000 : 0,
                    // Initialize word tracking for words mode
                    wordBoundaries: boundaries,
                    wordsCompleted: 0,
                    wordsProgress: 0,
                    currentWordIndex: 0,
                    targetWordCount: testConfig.mode === 'words' ? testConfig.wordCount : 0
                });
                console.error('Failed to prepare game:', error);
            }
        },
        resetGamePreparation: ()=>{
            set({
                isPreparingGame: false,
                gamePreparationError: null
            });
        },
        useFallbackWords: ()=>{
            const { testConfig } = get();
            const fallbackText = (0,_lib_textGenerator__WEBPACK_IMPORTED_MODULE_4__.generateFallbackText)(testConfig);
            const fallbackCharStates = fallbackText.split('').map((char, index)=>({
                    char,
                    status: index === 0 ? 'current' : 'default'
                }));
            // Calculate word boundaries
            const boundaries = get().calculateWordBoundaries(fallbackText);
            set({
                textToType: fallbackText,
                charStates: fallbackCharStates,
                userInput: '',
                gameStatus: 'ready',
                isPreparingGame: false,
                gamePreparationError: null,
                // Initialize timer for time mode
                timeRemaining: testConfig.mode === 'time' ? testConfig.duration * 1000 : 0,
                // Initialize word tracking for words mode
                wordBoundaries: boundaries,
                wordsCompleted: 0,
                wordsProgress: 0,
                currentWordIndex: 0,
                targetWordCount: testConfig.mode === 'words' ? testConfig.wordCount : 0
            });
        },
        handleKeyPress: (key)=>set((state)=>{
                const { gameStatus, userInput, textToType, testConfig, wordBoundaries } = state;
                // Start game if ready
                if (gameStatus === 'ready') {
                    const now = Date.now();
                    set({
                        gameStatus: 'running',
                        stats: {
                            ...state.stats,
                            startTime: now
                        }
                    });
                    // Start timer for time mode
                    get().startTimer();
                }
                // Handle backspace
                if (key === 'Backspace') {
                    if (userInput.length === 0) return {};
                    const newInput = userInput.slice(0, -1);
                    const newCharStates = [
                        ...state.charStates
                    ];
                    // Reset the character that was just deleted
                    if (newCharStates[userInput.length - 1]) {
                        newCharStates[userInput.length - 1].status = 'default';
                    }
                    // Update current character marker
                    if (newCharStates[newInput.length]) {
                        newCharStates[newInput.length].status = 'current';
                    }
                    get().updateStats();
                    // Update word progress when backspacing
                    if (state.testConfig.mode === 'words') {
                        setTimeout(()=>{
                            get().updateWordProgress();
                        }, 0);
                    }
                    return {
                        userInput: newInput,
                        charStates: newCharStates
                    };
                }
                // Handle character input
                if (key.length === 1 && userInput.length < textToType.length) {
                    const index = userInput.length;
                    const expectedChar = textToType[index];
                    const isCorrect = key === expectedChar;
                    // Master Mode: Fail on first incorrect keystroke
                    if (testConfig.difficulty === 'Master' && !isCorrect) {
                        // Set game as failed and complete immediately
                        set({
                            gameStatus: 'finished',
                            testFailed: true,
                            failureReason: `Master Mode: Failed on incorrect keystroke '${key}' (expected '${expectedChar}')`
                        });
                        get().completeGame();
                        return {};
                    }
                    const newInput = userInput + key;
                    const newCharStates = [
                        ...state.charStates
                    ];
                    // Update current character status
                    newCharStates[index] = {
                        char: expectedChar,
                        status: isCorrect ? 'correct' : 'incorrect',
                        timestamp: Date.now()
                    };
                    // Update next character to current
                    if (newCharStates[index + 1]) {
                        newCharStates[index + 1].status = 'current';
                    }
                    // Expert Mode: Check for word completion with errors when space is pressed
                    if (testConfig.difficulty === 'Expert' && key === ' ') {
                        // Find the current word being completed
                        const currentWordBoundaryIndex = wordBoundaries.findIndex((boundary)=>boundary > index) - 1;
                        if (currentWordBoundaryIndex >= 0) {
                            const wordStart = wordBoundaries[currentWordBoundaryIndex];
                            const wordEnd = index; // Current position (space pressed)
                            // Check if any character in the completed word is incorrect
                            let hasError = false;
                            for(let i = wordStart; i < wordEnd; i++){
                                if (newCharStates[i] && newCharStates[i].status === 'incorrect') {
                                    hasError = true;
                                    break;
                                }
                            }
                            if (hasError) {
                                // Find the specific incorrect word for the error message
                                const incorrectWord = textToType.slice(wordStart, wordEnd);
                                // Set game as failed and complete immediately
                                set({
                                    gameStatus: 'finished',
                                    testFailed: true,
                                    failureReason: `Expert Mode: Failed due to errors in word "${incorrectWord}"`
                                });
                                get().completeGame();
                                return {};
                            }
                        }
                    }
                    // Update stats and check completion
                    setTimeout(()=>{
                        get().updateStats();
                        // Update word progress for words mode
                        get().updateWordProgress();
                        get().checkWordCompletion();
                        // Update text window for time mode auto-scrolling
                        get().updateTextWindow();
                        // Check if test is complete (for non-words modes)
                        if (testConfig.mode !== 'words' && newInput.length >= textToType.length) {
                            get().completeGame();
                        }
                    }, 0);
                    return {
                        userInput: newInput,
                        charStates: newCharStates
                    };
                }
                return {};
            }),
        startGame: ()=>{
            const now = Date.now();
            set({
                gameStatus: 'running',
                stats: {
                    ...get().stats,
                    startTime: now
                }
            });
            // Start timer for time mode
            get().startTimer();
        },
        pauseGame: ()=>{
            get().pauseTimer();
            set({
                gameStatus: 'paused'
            });
        },
        resumeGame: ()=>{
            set({
                gameStatus: 'running'
            });
            // Resume timer for time mode if it was running
            const { testConfig, timeRemaining } = get();
            if (testConfig.mode === 'time' && timeRemaining > 0) {
                get().startTimer();
            }
        },
        resetGame: ()=>{
            // Clear timer first
            get().resetTimer();
            const { textToType } = get();
            const newCharStates = textToType.split('').map((char, index)=>({
                    char,
                    status: index === 0 ? 'current' : 'default'
                }));
            set({
                userInput: '',
                gameStatus: 'ready',
                stats: defaultStats,
                charStates: newCharStates,
                // Reset word tracking
                wordsCompleted: 0,
                wordsProgress: 0,
                currentWordIndex: 0,
                // Reset failure tracking
                testFailed: false,
                failureReason: null
            });
        },
        completeGame: async ()=>{
            // Clear timer immediately when game completes
            get().clearTimer();
            const now = Date.now();
            const state = get();
            const finalStats = {
                ...state.stats,
                endTime: now,
                elapsedTime: now - state.stats.startTime
            };
            // Create test result
            const testResult = {
                id: `test-${now}-${Math.random().toString(36).substr(2, 9)}`,
                timestamp: now,
                mode: state.testConfig.mode,
                duration: state.testConfig.mode === 'time' ? state.testConfig.duration : undefined,
                wordCount: state.testConfig.mode === 'words' ? state.testConfig.wordCount : undefined,
                textSource: state.testConfig.textSource,
                difficulty: state.testConfig.difficulty,
                punctuation: state.testConfig.punctuation,
                wpm: finalStats.wpm,
                accuracy: finalStats.accuracy,
                totalChars: finalStats.totalChars,
                correctChars: finalStats.correctChars,
                incorrectChars: finalStats.incorrectChars
            };
            // Smart saving: check authentication status
            const { token } = _useAuthStore__WEBPACK_IMPORTED_MODULE_3__.useAuthStore.getState();
            if (token) {
                // User is authenticated - save to backend
                try {
                    await (0,_lib_api_client__WEBPACK_IMPORTED_MODULE_2__.saveSingleTest)(testResult, token);
                } catch (error) {
                    console.error('Failed to save test result to backend:', error);
                    // Fallback to localStorage if backend fails
                    (0,_lib_history__WEBPACK_IMPORTED_MODULE_1__.saveTestResult)(testResult);
                }
            } else {
                // User is anonymous - save to localStorage
                (0,_lib_history__WEBPACK_IMPORTED_MODULE_1__.saveTestResult)(testResult);
            }
            set({
                gameStatus: 'finished',
                stats: finalStats
            });
        },
        updateStats: ()=>set((state)=>{
                const { userInput, textToType, stats } = state;
                const currentTime = Date.now();
                const elapsedTime = currentTime - stats.startTime;
                const elapsedMinutes = elapsedTime / 60000; // Convert to minutes
                const correctChars = userInput.split('').filter((char, index)=>char === textToType[index]).length;
                const incorrectChars = userInput.length - correctChars;
                const totalChars = userInput.length;
                // Calculate WPM (assuming 5 characters per word)
                const wordsTyped = correctChars / 5;
                const wpm = elapsedMinutes > 0 ? Math.round(wordsTyped / elapsedMinutes) : 0;
                // Calculate accuracy
                const accuracy = totalChars > 0 ? Math.round(correctChars / totalChars * 100) : 100;
                return {
                    stats: {
                        ...stats,
                        wpm,
                        accuracy,
                        totalChars,
                        correctChars,
                        incorrectChars,
                        elapsedTime
                    }
                };
            }),
        // Timer Actions
        startTimer: ()=>{
            const { testConfig, timerId } = get();
            // Only start timer for time mode
            if (testConfig.mode !== 'time') return;
            // Clear any existing timer
            if (timerId) {
                clearInterval(timerId);
            }
            const duration = testConfig.duration * 1000; // convert to ms
            const startTime = Date.now();
            set({
                timeRemaining: duration,
                isTimerRunning: true,
                gameStartTime: startTime
            });
            const newTimerId = setInterval(()=>{
                const now = Date.now();
                const elapsed = now - startTime;
                const remaining = Math.max(0, duration - elapsed);
                set({
                    timeRemaining: remaining
                });
                if (remaining <= 0) {
                    get().completeGame();
                }
            }, 100); // Update every 100ms for smooth display
            set({
                timerId: newTimerId
            });
        },
        pauseTimer: ()=>{
            const { timerId } = get();
            if (timerId) {
                clearInterval(timerId);
                set({
                    timerId: null,
                    isTimerRunning: false
                });
            }
        },
        resetTimer: ()=>{
            const { timerId, testConfig } = get();
            if (timerId) {
                clearInterval(timerId);
            }
            const duration = testConfig.mode === 'time' ? testConfig.duration * 1000 : 0;
            set({
                timerId: null,
                timeRemaining: duration,
                isTimerRunning: false,
                gameStartTime: null
            });
        },
        updateTimer: ()=>{
            const { gameStartTime, testConfig } = get();
            if (!gameStartTime || testConfig.mode !== 'time') return;
            const now = Date.now();
            const elapsed = now - gameStartTime;
            const duration = testConfig.duration * 1000;
            const remaining = Math.max(0, duration - elapsed);
            set({
                timeRemaining: remaining
            });
            if (remaining <= 0) {
                get().completeGame();
            }
        },
        clearTimer: ()=>{
            const { timerId } = get();
            if (timerId) {
                clearInterval(timerId);
                set({
                    timerId: null
                });
            }
        },
        // Word Tracking Actions
        calculateWordBoundaries: (text)=>{
            const boundaries = [];
            let inWord = false;
            for(let i = 0; i < text.length; i++){
                const char = text[i];
                const isWordChar = char !== ' ';
                if (isWordChar && !inWord) {
                    // Start of a new word
                    boundaries.push(i);
                    inWord = true;
                } else if (!isWordChar && inWord) {
                    // End of a word
                    inWord = false;
                }
            }
            return boundaries;
        },
        updateWordProgress: ()=>{
            const { userInput, textToType, testConfig, wordBoundaries, charStates } = get();
            if (testConfig.mode !== 'words') return;
            // Count completed words more accurately
            let completedWords = 0;
            let currentIndex = 0;
            // Split text into words based on boundaries
            const words = [];
            for(let i = 0; i < wordBoundaries.length; i++){
                const start = wordBoundaries[i];
                const end = i < wordBoundaries.length - 1 ? wordBoundaries[i + 1] : textToType.length;
                // Find the actual end of the word (before spaces)
                let wordEnd = start;
                while(wordEnd < end && textToType[wordEnd] !== ' '){
                    wordEnd++;
                }
                words.push({
                    start,
                    end: wordEnd,
                    text: textToType.slice(start, wordEnd)
                });
            }
            // Check each word for completion
            for(let i = 0; i < words.length && i < testConfig.wordCount; i++){
                const word = words[i];
                // Check if we've typed up to the end of this word
                if (userInput.length > word.end) {
                    // Check if all characters in the word are correct
                    let wordCorrect = true;
                    for(let j = word.start; j < word.end; j++){
                        var _charStates_j;
                        if (((_charStates_j = charStates[j]) === null || _charStates_j === void 0 ? void 0 : _charStates_j.status) !== 'correct') {
                            wordCorrect = false;
                            break;
                        }
                    }
                    if (wordCorrect) {
                        completedWords++;
                    }
                    currentIndex = i + 1;
                } else if (userInput.length >= word.start) {
                    // Currently typing this word
                    currentIndex = i;
                    break;
                }
            }
            const targetWords = testConfig.wordCount;
            const progress = Math.min(100, completedWords / targetWords * 100);
            set({
                wordsCompleted: completedWords,
                wordsProgress: progress,
                currentWordIndex: currentIndex,
                targetWordCount: targetWords
            });
        },
        checkWordCompletion: ()=>{
            const { wordsCompleted, testConfig } = get();
            if (testConfig.mode !== 'words') return;
            // Check if we've completed the target number of words
            if (wordsCompleted >= testConfig.wordCount) {
                // Complete the game
                get().completeGame();
            }
        },
        // Text window and streaming functions
        generateTextInLines: (words)=>{
            const { maxCharsPerLine } = get();
            const lines = [];
            let currentLine = '';
            for (const word of words){
                const potentialLine = currentLine ? `${currentLine} ${word}` : word;
                if (potentialLine.length <= maxCharsPerLine) {
                    currentLine = potentialLine;
                } else {
                    if (currentLine) {
                        lines.push(currentLine);
                        currentLine = word;
                    } else {
                        // Word is longer than max chars per line, split it
                        lines.push(word);
                        currentLine = '';
                    }
                }
            }
            if (currentLine) {
                lines.push(currentLine);
            }
            return lines;
        },
        initializeTextWindow: (text)=>{
            const { testConfig } = get();
            // For time mode, we use line-based scrolling
            if (testConfig.mode === 'time') {
                const words = text.split(' ');
                const lines = get().generateTextInLines(words);
                // Calculate character offsets for each line with precise space handling
                const lineCharOffsets = [];
                let offset = 0;
                for(let i = 0; i < lines.length; i++){
                    lineCharOffsets.push(offset);
                    offset += lines[i].length;
                    // Add space character between lines except for the last line
                    if (i < lines.length - 1) {
                        offset += 1; // Space between lines
                    }
                }
                set({
                    textWindow: {
                        lines,
                        scrollOffset: 0,
                        lineCharOffsets
                    }
                });
            } else {
                // For words mode, use traditional approach
                set({
                    textWindow: {
                        ...defaultTextWindow,
                        lines: [
                            text
                        ]
                    }
                });
            }
        },
        updateTextWindow: ()=>{
            const { testConfig } = get();
            if (testConfig.mode === 'time') {
                get().checkLineProgression();
            }
        },
        checkLineProgression: ()=>{
            const { userInput, textWindow, testConfig } = get();
            if (testConfig.mode !== 'time') return;
            const currentPosition = userInput.length;
            const { lineCharOffsets, scrollOffset, lines } = textWindow;
            // Find which line the current position is on
            let currentLineIndex = 0;
            for(let i = 0; i < lineCharOffsets.length; i++){
                if (currentPosition >= lineCharOffsets[i]) {
                    currentLineIndex = i;
                } else {
                    break;
                }
            }
            // Calculate which line is currently the "second visible line"
            const secondLineIndex = scrollOffset + 1;
            // FIXED: Trigger scroll when user STARTS typing on the second visible line
            // Check if user is actively typing on the second line (not just reached it)
            if (currentLineIndex === secondLineIndex && secondLineIndex < lines.length - 1 && lineCharOffsets[secondLineIndex] !== undefined && currentPosition > lineCharOffsets[secondLineIndex] // Must have typed at least one character on second line
            ) {
                const newScrollOffset = scrollOffset + 1;
                // Only update if we actually need to scroll
                if (newScrollOffset !== scrollOffset && newScrollOffset < lines.length - 2) {
                    set({
                        textWindow: {
                            ...textWindow,
                            scrollOffset: newScrollOffset
                        }
                    });
                }
            }
            // Check if we need more content (within last 20% of available text)
            const totalTextLength = lines.join(' ').length;
            if (currentPosition > totalTextLength * 0.8) {
                get().generateMoreContent();
            }
        },
        scrollToNextLine: ()=>{
        // This function is now simplified and handled by checkLineProgression
        // Keeping for backward compatibility but logic moved to checkLineProgression
        },
        generateMoreContent: async ()=>{
            const { testConfig, isContentStreaming } = get();
            if (testConfig.mode !== 'time' || isContentStreaming) return;
            set({
                isContentStreaming: true
            });
            try {
                // Generate additional words
                const response = await (0,_lib_api_client__WEBPACK_IMPORTED_MODULE_2__.getWords)(testConfig.textSource, 50, true, {
                    punctuation: testConfig.punctuation,
                    numbers: testConfig.punctuation,
                    punctuationDensity: 'medium'
                });
                if (response.words && response.words.length > 0) {
                    get().appendDynamicContent(response.words);
                }
            } catch (error) {
                console.error('Failed to generate more content:', error);
                // Use fallback content
                const fallbackWords = [
                    'the',
                    'quick',
                    'brown',
                    'fox',
                    'jumps',
                    'over',
                    'lazy',
                    'dog',
                    'pack',
                    'my',
                    'box',
                    'with',
                    'five',
                    'dozen',
                    'liquor',
                    'jugs'
                ];
                get().appendDynamicContent(fallbackWords);
            } finally{
                set({
                    isContentStreaming: false
                });
            }
        },
        appendDynamicContent: (newWords)=>{
            const { textToType, textWindow, charStates } = get();
            // Append new words to existing text
            const additionalText = ' ' + newWords.join(' ');
            const newTextToType = textToType + additionalText;
            // Generate new lines from all text
            const allWords = newTextToType.split(' ');
            const newLines = get().generateTextInLines(allWords);
            // Calculate new character offsets with precise space handling
            const lineCharOffsets = [];
            let offset = 0;
            for(let i = 0; i < newLines.length; i++){
                lineCharOffsets.push(offset);
                offset += newLines[i].length;
                // Add space character between lines except for the last line
                if (i < newLines.length - 1) {
                    offset += 1; // Space between lines
                }
            }
            // Update character states for new content
            const newCharStates = [
                ...charStates
            ];
            for(let i = charStates.length; i < newTextToType.length; i++){
                newCharStates.push({
                    char: newTextToType[i],
                    status: 'default'
                });
            }
            set({
                textToType: newTextToType,
                charStates: newCharStates,
                textWindow: {
                    ...textWindow,
                    lines: newLines,
                    lineCharOffsets
                }
            });
        }
    }));


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/store/useModalStore.ts":
/*!************************************!*\
  !*** ./src/store/useModalStore.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useModalStore: () => (/* binding */ useModalStore)
/* harmony export */ });
/* harmony import */ var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/react-refresh/runtime.js */ "../../node_modules/react-refresh/runtime.js");
/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ "../../node_modules/zustand/esm/react.mjs");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");

__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));


const useModalStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)((set)=>({
        isAuthModalOpen: false,
        openAuthModal: ()=>set({
                isAuthModalOpen: true
            }),
        closeAuthModal: ()=>set({
                isAuthModalOpen: false
            })
    }));


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/store/useSettingsStore.ts":
/*!***************************************!*\
  !*** ./src/store/useSettingsStore.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useSettingsStore: () => (/* binding */ useSettingsStore),
/* harmony export */   useTheme: () => (/* binding */ useTheme)
/* harmony export */ });
/* harmony import */ var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/react-refresh/runtime.js */ "../../node_modules/react-refresh/runtime.js");
/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ "../../node_modules/zustand/esm/react.mjs");
/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zustand/middleware */ "../../node_modules/zustand/esm/middleware.mjs");
/* provided dependency */ var console = __webpack_require__(/*! ../../node_modules/console-browserify/index.js */ "../../node_modules/console-browserify/index.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");

__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));



const defaultSettings = {
    appearance: {
        theme: 'slate',
        font: 'Roboto Mono',
        fontSize: 18,
        caretStyle: 'line',
        caretColor: '#3b82f6',
        colorScheme: 'auto',
        animations: true,
        smoothCaret: true,
        showWpmCounter: true,
        showAccuracyCounter: true
    },
    behavior: {
        soundEffects: false,
        keyFeedback: false,
        defaultMode: 'time',
        defaultDifficulty: 'Normal',
        defaultDuration: 60,
        defaultWordCount: 50,
        paceCaretWpm: 0,
        paceCaretEnabled: false,
        autoSave: true,
        focusMode: false,
        quickRestart: true,
        blindMode: false
    }
};
const useSettingsStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_2__.persist)((set, get)=>({
        settings: defaultSettings,
        isLoading: false,
        // Appearance actions
        updateTheme: (theme)=>set((state)=>({
                    settings: {
                        ...state.settings,
                        appearance: {
                            ...state.settings.appearance,
                            theme
                        }
                    }
                })),
        updateFont: (font)=>set((state)=>({
                    settings: {
                        ...state.settings,
                        appearance: {
                            ...state.settings.appearance,
                            font
                        }
                    }
                })),
        updateFontSize: (fontSize)=>set((state)=>({
                    settings: {
                        ...state.settings,
                        appearance: {
                            ...state.settings.appearance,
                            fontSize
                        }
                    }
                })),
        updateCaretStyle: (caretStyle)=>set((state)=>({
                    settings: {
                        ...state.settings,
                        appearance: {
                            ...state.settings.appearance,
                            caretStyle
                        }
                    }
                })),
        updateCaretColor: (caretColor)=>set((state)=>({
                    settings: {
                        ...state.settings,
                        appearance: {
                            ...state.settings.appearance,
                            caretColor
                        }
                    }
                })),
        updateColorScheme: (colorScheme)=>set((state)=>({
                    settings: {
                        ...state.settings,
                        appearance: {
                            ...state.settings.appearance,
                            colorScheme
                        }
                    }
                })),
        toggleAnimations: ()=>set((state)=>({
                    settings: {
                        ...state.settings,
                        appearance: {
                            ...state.settings.appearance,
                            animations: !state.settings.appearance.animations
                        }
                    }
                })),
        toggleSmoothCaret: ()=>set((state)=>({
                    settings: {
                        ...state.settings,
                        appearance: {
                            ...state.settings.appearance,
                            smoothCaret: !state.settings.appearance.smoothCaret
                        }
                    }
                })),
        toggleWpmCounter: ()=>set((state)=>({
                    settings: {
                        ...state.settings,
                        appearance: {
                            ...state.settings.appearance,
                            showWpmCounter: !state.settings.appearance.showWpmCounter
                        }
                    }
                })),
        toggleAccuracyCounter: ()=>set((state)=>({
                    settings: {
                        ...state.settings,
                        appearance: {
                            ...state.settings.appearance,
                            showAccuracyCounter: !state.settings.appearance.showAccuracyCounter
                        }
                    }
                })),
        // Behavior actions
        toggleSoundEffects: ()=>set((state)=>({
                    settings: {
                        ...state.settings,
                        behavior: {
                            ...state.settings.behavior,
                            soundEffects: !state.settings.behavior.soundEffects
                        }
                    }
                })),
        toggleKeyFeedback: ()=>set((state)=>({
                    settings: {
                        ...state.settings,
                        behavior: {
                            ...state.settings.behavior,
                            keyFeedback: !state.settings.behavior.keyFeedback
                        }
                    }
                })),
        updateDefaultMode: (defaultMode)=>set((state)=>({
                    settings: {
                        ...state.settings,
                        behavior: {
                            ...state.settings.behavior,
                            defaultMode
                        }
                    }
                })),
        updateDefaultDifficulty: (defaultDifficulty)=>set((state)=>({
                    settings: {
                        ...state.settings,
                        behavior: {
                            ...state.settings.behavior,
                            defaultDifficulty
                        }
                    }
                })),
        updateDefaultDuration: (defaultDuration)=>set((state)=>({
                    settings: {
                        ...state.settings,
                        behavior: {
                            ...state.settings.behavior,
                            defaultDuration
                        }
                    }
                })),
        updateDefaultWordCount: (defaultWordCount)=>set((state)=>({
                    settings: {
                        ...state.settings,
                        behavior: {
                            ...state.settings.behavior,
                            defaultWordCount
                        }
                    }
                })),
        updatePaceCaretWpm: (paceCaretWpm)=>set((state)=>({
                    settings: {
                        ...state.settings,
                        behavior: {
                            ...state.settings.behavior,
                            paceCaretWpm
                        }
                    }
                })),
        togglePaceCaret: ()=>set((state)=>({
                    settings: {
                        ...state.settings,
                        behavior: {
                            ...state.settings.behavior,
                            paceCaretEnabled: !state.settings.behavior.paceCaretEnabled
                        }
                    }
                })),
        toggleAutoSave: ()=>set((state)=>({
                    settings: {
                        ...state.settings,
                        behavior: {
                            ...state.settings.behavior,
                            autoSave: !state.settings.behavior.autoSave
                        }
                    }
                })),
        toggleFocusMode: ()=>set((state)=>({
                    settings: {
                        ...state.settings,
                        behavior: {
                            ...state.settings.behavior,
                            focusMode: !state.settings.behavior.focusMode
                        }
                    }
                })),
        toggleQuickRestart: ()=>set((state)=>({
                    settings: {
                        ...state.settings,
                        behavior: {
                            ...state.settings.behavior,
                            quickRestart: !state.settings.behavior.quickRestart
                        }
                    }
                })),
        toggleBlindMode: ()=>set((state)=>({
                    settings: {
                        ...state.settings,
                        behavior: {
                            ...state.settings.behavior,
                            blindMode: !state.settings.behavior.blindMode
                        }
                    }
                })),
        // Bulk actions
        updateAppearanceSettings: (appearance)=>set((state)=>({
                    settings: {
                        ...state.settings,
                        appearance: {
                            ...state.settings.appearance,
                            ...appearance
                        }
                    }
                })),
        updateBehaviorSettings: (behavior)=>set((state)=>({
                    settings: {
                        ...state.settings,
                        behavior: {
                            ...state.settings.behavior,
                            ...behavior
                        }
                    }
                })),
        resetToDefaults: ()=>set({
                settings: defaultSettings
            }),
        importSettings: (settings)=>set({
                settings
            }),
        exportSettings: ()=>get().settings,
        // Server persistence
        saveToServer: async ()=>{
            try {
                set({
                    isLoading: true
                });
                const { settings } = get();
                const token = localStorage.getItem('token');
                if (!token) {
                    throw new Error('No authentication token found');
                }
                // Import API client dynamically to avoid circular dependencies
                const { updateSettings } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/lib/api-client */ "./src/lib/api-client.ts"));
                // Map settings to API format
                const apiSettings = {
                    // Appearance settings
                    theme: settings.appearance.theme,
                    font: settings.appearance.font,
                    fontSize: settings.appearance.fontSize,
                    caretStyle: settings.appearance.caretStyle,
                    caretColor: settings.appearance.caretColor,
                    colorScheme: settings.appearance.colorScheme,
                    animations: settings.appearance.animations,
                    smoothCaret: settings.appearance.smoothCaret,
                    showWpmCounter: settings.appearance.showWpmCounter,
                    showAccuracyCounter: settings.appearance.showAccuracyCounter,
                    // Behavior settings
                    soundEffects: settings.behavior.soundEffects,
                    keyFeedback: settings.behavior.keyFeedback,
                    defaultMode: settings.behavior.defaultMode,
                    defaultDifficulty: settings.behavior.defaultDifficulty,
                    defaultDuration: settings.behavior.defaultDuration,
                    defaultWordCount: settings.behavior.defaultWordCount,
                    paceCaretWpm: settings.behavior.paceCaretWpm,
                    paceCaretEnabled: settings.behavior.paceCaretEnabled,
                    autoSave: settings.behavior.autoSave,
                    focusMode: settings.behavior.focusMode,
                    quickRestart: settings.behavior.quickRestart,
                    blindMode: settings.behavior.blindMode
                };
                await updateSettings(apiSettings, token);
            } catch (error) {
                console.error('Failed to save settings to server:', error);
                throw error;
            } finally{
                set({
                    isLoading: false
                });
            }
        },
        loadFromServer: async ()=>{
            try {
                set({
                    isLoading: true
                });
                const token = localStorage.getItem('token');
                if (!token) {
                    throw new Error('No authentication token found');
                }
                // Import API client dynamically to avoid circular dependencies
                const { getSettings } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @/lib/api-client */ "./src/lib/api-client.ts"));
                const serverSettings = await getSettings(token);
                // Map server settings to local format
                set((state)=>{
                    var _serverSettings_animations, _serverSettings_smoothCaret, _serverSettings_showWpmCounter, _serverSettings_showAccuracyCounter, _serverSettings_soundEffects, _serverSettings_keyFeedback, _serverSettings_paceCaretEnabled, _serverSettings_autoSave, _serverSettings_focusMode, _serverSettings_quickRestart, _serverSettings_blindMode;
                    return {
                        settings: {
                            appearance: {
                                ...state.settings.appearance,
                                theme: serverSettings.theme || state.settings.appearance.theme,
                                font: serverSettings.font || state.settings.appearance.font,
                                fontSize: serverSettings.fontSize || state.settings.appearance.fontSize,
                                caretStyle: serverSettings.caretStyle || state.settings.appearance.caretStyle,
                                caretColor: serverSettings.caretColor || state.settings.appearance.caretColor,
                                colorScheme: serverSettings.colorScheme || state.settings.appearance.colorScheme,
                                animations: (_serverSettings_animations = serverSettings.animations) !== null && _serverSettings_animations !== void 0 ? _serverSettings_animations : state.settings.appearance.animations,
                                smoothCaret: (_serverSettings_smoothCaret = serverSettings.smoothCaret) !== null && _serverSettings_smoothCaret !== void 0 ? _serverSettings_smoothCaret : state.settings.appearance.smoothCaret,
                                showWpmCounter: (_serverSettings_showWpmCounter = serverSettings.showWpmCounter) !== null && _serverSettings_showWpmCounter !== void 0 ? _serverSettings_showWpmCounter : state.settings.appearance.showWpmCounter,
                                showAccuracyCounter: (_serverSettings_showAccuracyCounter = serverSettings.showAccuracyCounter) !== null && _serverSettings_showAccuracyCounter !== void 0 ? _serverSettings_showAccuracyCounter : state.settings.appearance.showAccuracyCounter
                            },
                            behavior: {
                                ...state.settings.behavior,
                                soundEffects: (_serverSettings_soundEffects = serverSettings.soundEffects) !== null && _serverSettings_soundEffects !== void 0 ? _serverSettings_soundEffects : state.settings.behavior.soundEffects,
                                keyFeedback: (_serverSettings_keyFeedback = serverSettings.keyFeedback) !== null && _serverSettings_keyFeedback !== void 0 ? _serverSettings_keyFeedback : state.settings.behavior.keyFeedback,
                                defaultMode: serverSettings.defaultMode || state.settings.behavior.defaultMode,
                                defaultDifficulty: serverSettings.defaultDifficulty || state.settings.behavior.defaultDifficulty,
                                defaultDuration: serverSettings.defaultDuration || state.settings.behavior.defaultDuration,
                                defaultWordCount: serverSettings.defaultWordCount || state.settings.behavior.defaultWordCount,
                                paceCaretWpm: serverSettings.paceCaretWpm || state.settings.behavior.paceCaretWpm,
                                paceCaretEnabled: (_serverSettings_paceCaretEnabled = serverSettings.paceCaretEnabled) !== null && _serverSettings_paceCaretEnabled !== void 0 ? _serverSettings_paceCaretEnabled : state.settings.behavior.paceCaretEnabled,
                                autoSave: (_serverSettings_autoSave = serverSettings.autoSave) !== null && _serverSettings_autoSave !== void 0 ? _serverSettings_autoSave : state.settings.behavior.autoSave,
                                focusMode: (_serverSettings_focusMode = serverSettings.focusMode) !== null && _serverSettings_focusMode !== void 0 ? _serverSettings_focusMode : state.settings.behavior.focusMode,
                                quickRestart: (_serverSettings_quickRestart = serverSettings.quickRestart) !== null && _serverSettings_quickRestart !== void 0 ? _serverSettings_quickRestart : state.settings.behavior.quickRestart,
                                blindMode: (_serverSettings_blindMode = serverSettings.blindMode) !== null && _serverSettings_blindMode !== void 0 ? _serverSettings_blindMode : state.settings.behavior.blindMode
                            }
                        }
                    };
                });
            } catch (error) {
                console.error('Failed to load settings from server:', error);
                throw error;
            } finally{
                set({
                    isLoading: false
                });
            }
        }
    }), {
    name: 'typeamp-settings',
    partialize: (state)=>({
            settings: state.settings
        })
}));
// Helper hook for theme
const useTheme = ()=>{
    const { theme, colorScheme } = useSettingsStore({
        "useTheme.useSettingsStore": (state)=>state.settings.appearance
    }["useTheme.useSettingsStore"]);
    // Determine actual theme based on color scheme preference
    const actualTheme = colorScheme === 'auto' ? window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light' : colorScheme;
    return {
        theme,
        colorScheme: actualTheme
    };
};


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./storybook-config-entry.js":
/*!***********************************!*\
  !*** ./storybook-config-entry.js ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/react-refresh/runtime.js */ "../../node_modules/react-refresh/runtime.js");
/* harmony import */ var storybook_internal_channels__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! storybook/internal/channels */ "storybook/internal/channels");
/* harmony import */ var storybook_internal_channels__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(storybook_internal_channels__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var storybook_internal_core_events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! storybook/internal/core-events */ "storybook/internal/core-events");
/* harmony import */ var storybook_internal_core_events__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(storybook_internal_core_events__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var storybook_internal_csf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! storybook/internal/csf */ "../../node_modules/storybook/dist/csf/index.js");
/* harmony import */ var _storybook_global__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @storybook/global */ "@storybook/global");
/* harmony import */ var _storybook_global__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_storybook_global__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var storybook_preview_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! storybook/preview-api */ "storybook/preview-api");
/* harmony import */ var storybook_preview_api__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(storybook_preview_api__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _storybook_stories_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./storybook-stories.js */ "./storybook-stories.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");

__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));










const getProjectAnnotations = () => {
  const previewAnnotations = [__webpack_require__(/*! ../../node_modules/@storybook/react/dist/entry-preview.mjs */ "../../node_modules/@storybook/react/dist/entry-preview.mjs"),__webpack_require__(/*! ../../node_modules/@storybook/react/dist/entry-preview-argtypes.mjs */ "../../node_modules/@storybook/react/dist/entry-preview-argtypes.mjs"),__webpack_require__(/*! ../../node_modules/@storybook/react/dist/entry-preview-docs.mjs */ "../../node_modules/@storybook/react/dist/entry-preview-docs.mjs"),__webpack_require__(/*! ../../node_modules/@storybook/react/dist/entry-preview-rsc.mjs */ "../../node_modules/@storybook/react/dist/entry-preview-rsc.mjs"),__webpack_require__(/*! ../../node_modules/@storybook/nextjs/dist/preview.mjs */ "../../node_modules/@storybook/nextjs/dist/preview.mjs"),__webpack_require__(/*! ../../node_modules/@storybook/addon-docs/preview.js */ "../../node_modules/@storybook/addon-docs/preview.js"),__webpack_require__(/*! ./.storybook/preview.tsx */ "./.storybook/preview.tsx")];
  // the last one in this array is the user preview
  const userPreview = previewAnnotations[previewAnnotations.length - 1]?.default;

  if ((0,storybook_internal_csf__WEBPACK_IMPORTED_MODULE_6__.isPreview)(userPreview)) {
    return userPreview.composed;
  }

  return (0,storybook_preview_api__WEBPACK_IMPORTED_MODULE_4__.composeConfigs)(previewAnnotations);
};

const channel = (0,storybook_internal_channels__WEBPACK_IMPORTED_MODULE_1__.createBrowserChannel)({ page: 'preview' });
storybook_preview_api__WEBPACK_IMPORTED_MODULE_4__.addons.setChannel(channel);

if (_storybook_global__WEBPACK_IMPORTED_MODULE_3__.global.CONFIG_TYPE === 'DEVELOPMENT') {
  window.__STORYBOOK_SERVER_CHANNEL__ = channel;
}

const preview = new storybook_preview_api__WEBPACK_IMPORTED_MODULE_4__.PreviewWeb(_storybook_stories_js__WEBPACK_IMPORTED_MODULE_5__.importFn, getProjectAnnotations);

window.__STORYBOOK_PREVIEW__ = preview;
window.__STORYBOOK_STORY_STORE__ = preview.storyStore;
window.__STORYBOOK_ADDONS_CHANNEL__ = channel;

if (true) {
  module.hot.addStatusHandler((status) => {
    if (status === 'idle') {
      preview.channel.emit(storybook_internal_core_events__WEBPACK_IMPORTED_MODULE_2__.STORY_HOT_UPDATED);
    }
  });

  module.hot.accept(/*! ./storybook-stories.js */ "./storybook-stories.js", __WEBPACK_OUTDATED_DEPENDENCIES__ => { /* harmony import */ _storybook_stories_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./storybook-stories.js */ "./storybook-stories.js");
(() => {
    // importFn has changed so we need to patch the new one in
    preview.onStoriesChanged({ importFn: _storybook_stories_js__WEBPACK_IMPORTED_MODULE_5__.importFn });
  })(__WEBPACK_OUTDATED_DEPENDENCIES__); });

  module.hot.accept([/*! ../../node_modules/@storybook/react/dist/entry-preview.mjs */ "../../node_modules/@storybook/react/dist/entry-preview.mjs",/*! ../../node_modules/@storybook/react/dist/entry-preview-argtypes.mjs */ "../../node_modules/@storybook/react/dist/entry-preview-argtypes.mjs",/*! ../../node_modules/@storybook/react/dist/entry-preview-docs.mjs */ "../../node_modules/@storybook/react/dist/entry-preview-docs.mjs",/*! ../../node_modules/@storybook/react/dist/entry-preview-rsc.mjs */ "../../node_modules/@storybook/react/dist/entry-preview-rsc.mjs",/*! ../../node_modules/@storybook/nextjs/dist/preview.mjs */ "../../node_modules/@storybook/nextjs/dist/preview.mjs",/*! ../../node_modules/@storybook/addon-docs/preview.js */ "../../node_modules/@storybook/addon-docs/preview.js",/*! ./.storybook/preview.tsx */ "./.storybook/preview.tsx"], __WEBPACK_OUTDATED_DEPENDENCIES__ => { (() => {
    // getProjectAnnotations has changed so we need to patch the new one in
    preview.onGetProjectAnnotationsChanged({ getProjectAnnotations });
  })(__WEBPACK_OUTDATED_DEPENDENCIES__); });
}


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./storybook-stories.js":
/*!******************************!*\
  !*** ./storybook-stories.js ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   importFn: () => (/* binding */ importFn)
/* harmony export */ });
/* harmony import */ var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/react-refresh/runtime.js */ "../../node_modules/react-refresh/runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");

__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));

const pipeline = (x) => x();

const importers = [
  async (path) => {
    if (!/^\.[\\/](?:src(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.stories\.(js|jsx|mjs|ts|tsx))$/.exec(path)) {
      return;
    }
  
    const pathRemainder = path.substring(6);
    return __webpack_require__("./src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$")("./" + pathRemainder);
  }
  
];

async function importFn(path) {
  for (let i = 0; i < importers.length; i++) {
    const moduleExports = await pipeline(() => importers[i](path));
    if (moduleExports) {
      return moduleExports;
    }
  }
}

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "?3a9c":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?cf2d":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?d4df":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "@storybook/global":
/*!**********************************************!*\
  !*** external "__STORYBOOK_MODULE_GLOBAL__" ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
module.exports = __STORYBOOK_MODULE_GLOBAL__;

/***/ }),

/***/ "storybook/internal/channels":
/*!************************************************!*\
  !*** external "__STORYBOOK_MODULE_CHANNELS__" ***!
  \************************************************/
/***/ ((module) => {

"use strict";
module.exports = __STORYBOOK_MODULE_CHANNELS__;

/***/ }),

/***/ "storybook/internal/client-logger":
/*!*****************************************************!*\
  !*** external "__STORYBOOK_MODULE_CLIENT_LOGGER__" ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
module.exports = __STORYBOOK_MODULE_CLIENT_LOGGER__;

/***/ }),

/***/ "storybook/internal/core-events":
/*!***************************************************!*\
  !*** external "__STORYBOOK_MODULE_CORE_EVENTS__" ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
module.exports = __STORYBOOK_MODULE_CORE_EVENTS__;

/***/ }),

/***/ "storybook/internal/preview-errors":
/*!******************************************************************!*\
  !*** external "__STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS__" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = __STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS__;

/***/ }),

/***/ "storybook/preview-api":
/*!***************************************************!*\
  !*** external "__STORYBOOK_MODULE_PREVIEW_API__" ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
module.exports = __STORYBOOK_MODULE_PREVIEW_API__;

/***/ }),

/***/ "storybook/test":
/*!********************************************!*\
  !*** external "__STORYBOOK_MODULE_TEST__" ***!
  \********************************************/
/***/ ((module) => {

"use strict";
module.exports = __STORYBOOK_MODULE_TEST__;

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["vendors-node_modules_pmmmwh_react-refresh-webpack-plugin_client_ReactRefreshEntry_js-node_mod-344e1c"], () => (__webpack_exec__("../../node_modules/@pmmmwh/react-refresh-webpack-plugin/client/ReactRefreshEntry.js"), __webpack_exec__("../../node_modules/webpack-hot-middleware/client.js?reload=true&quiet=false&overlay={\"errors\":true,\"warnings\":false,\"runtimeErrors\":false}&noInfo=true"), __webpack_exec__("./storybook-config-entry.js")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);
//# sourceMappingURL=main.iframe.bundle.js.map