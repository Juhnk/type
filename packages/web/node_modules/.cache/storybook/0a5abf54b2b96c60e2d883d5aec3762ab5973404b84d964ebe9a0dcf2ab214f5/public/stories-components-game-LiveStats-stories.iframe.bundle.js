"use strict";
(self["webpackChunktype"] = self["webpackChunktype"] || []).push([["stories-components-game-LiveStats-stories"],{

/***/ "./src/components/game/LiveStats.tsx":
/*!*******************************************!*\
  !*** ./src/components/game/LiveStats.tsx ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LiveStats: () => (/* binding */ LiveStats)
/* harmony export */ });
/* harmony import */ var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/react-refresh/runtime.js */ "../../node_modules/react-refresh/runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "../../node_modules/next/dist/compiled/react/jsx-dev-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "../../node_modules/next/dist/compiled/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _store_useGameStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/store/useGameStore */ "./src/store/useGameStore.ts");
/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/utils */ "./src/lib/utils.ts");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");

__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));


var _s = __webpack_require__.$Refresh$.signature();
'use client';



function LiveStats() {
    _s();
    const gameStatus = (0,_store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore)({
        "LiveStats.useGameStore[gameStatus]": (state)=>state.gameStatus
    }["LiveStats.useGameStore[gameStatus]"]);
    const stats = (0,_store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore)({
        "LiveStats.useGameStore[stats]": (state)=>state.stats
    }["LiveStats.useGameStore[stats]"]);
    const testConfig = (0,_store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore)({
        "LiveStats.useGameStore[testConfig]": (state)=>state.testConfig
    }["LiveStats.useGameStore[testConfig]"]);
    // Only show live stats when game is running
    if (gameStatus !== 'running' && gameStatus !== 'finished') return null;
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
        className: "flex justify-center gap-4 sm:gap-6",
        children: [
            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                className: "text-center",
                children: [
                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_4__.cn)('font-mono text-xl font-bold sm:text-2xl', stats.wpm >= 60 ? 'text-success' : stats.wpm >= 40 ? 'text-primary' : 'text-foreground'),
                        children: stats.wpm
                    }, void 0, false, {
                        fileName: "/home/juhnk/repos/type/packages/web/src/components/game/LiveStats.tsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                        className: "text-muted-foreground text-xs tracking-wide uppercase",
                        children: "WPM"
                    }, void 0, false, {
                        fileName: "/home/juhnk/repos/type/packages/web/src/components/game/LiveStats.tsx",
                        lineNumber: 31,
                        columnNumber: 9
                    }, this)
                ]
            }, void 0, true, {
                fileName: "/home/juhnk/repos/type/packages/web/src/components/game/LiveStats.tsx",
                lineNumber: 18,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                className: "text-center",
                children: [
                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_4__.cn)('font-mono text-xl font-bold sm:text-2xl', stats.accuracy >= 95 ? 'text-success' : stats.accuracy >= 90 ? 'text-warning' : 'text-error'),
                        children: [
                            stats.accuracy,
                            "%"
                        ]
                    }, void 0, true, {
                        fileName: "/home/juhnk/repos/type/packages/web/src/components/game/LiveStats.tsx",
                        lineNumber: 38,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                        className: "text-muted-foreground text-xs tracking-wide uppercase",
                        children: "Accuracy"
                    }, void 0, false, {
                        fileName: "/home/juhnk/repos/type/packages/web/src/components/game/LiveStats.tsx",
                        lineNumber: 50,
                        columnNumber: 9
                    }, this)
                ]
            }, void 0, true, {
                fileName: "/home/juhnk/repos/type/packages/web/src/components/game/LiveStats.tsx",
                lineNumber: 37,
                columnNumber: 7
            }, this),
            testConfig.mode === 'words' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                className: "text-center",
                children: [
                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                        className: "text-foreground font-mono text-xl font-bold sm:text-2xl",
                        children: [
                            Math.floor(stats.elapsedTime / 1000),
                            "s"
                        ]
                    }, void 0, true, {
                        fileName: "/home/juhnk/repos/type/packages/web/src/components/game/LiveStats.tsx",
                        lineNumber: 58,
                        columnNumber: 11
                    }, this),
                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                        className: "text-muted-foreground text-xs tracking-wide uppercase",
                        children: "Elapsed"
                    }, void 0, false, {
                        fileName: "/home/juhnk/repos/type/packages/web/src/components/game/LiveStats.tsx",
                        lineNumber: 61,
                        columnNumber: 11
                    }, this)
                ]
            }, void 0, true, {
                fileName: "/home/juhnk/repos/type/packages/web/src/components/game/LiveStats.tsx",
                lineNumber: 57,
                columnNumber: 9
            }, this),
            testConfig.mode === 'time' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                className: "text-center",
                children: [
                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                        className: "text-foreground font-mono text-xl font-bold sm:text-2xl",
                        children: [
                            Math.floor(stats.elapsedTime / 1000),
                            "s"
                        ]
                    }, void 0, true, {
                        fileName: "/home/juhnk/repos/type/packages/web/src/components/game/LiveStats.tsx",
                        lineNumber: 69,
                        columnNumber: 11
                    }, this),
                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
                        className: "text-muted-foreground text-xs tracking-wide uppercase",
                        children: "Elapsed"
                    }, void 0, false, {
                        fileName: "/home/juhnk/repos/type/packages/web/src/components/game/LiveStats.tsx",
                        lineNumber: 72,
                        columnNumber: 11
                    }, this)
                ]
            }, void 0, true, {
                fileName: "/home/juhnk/repos/type/packages/web/src/components/game/LiveStats.tsx",
                lineNumber: 68,
                columnNumber: 9
            }, this)
        ]
    }, void 0, true, {
        fileName: "/home/juhnk/repos/type/packages/web/src/components/game/LiveStats.tsx",
        lineNumber: 16,
        columnNumber: 5
    }, this);
}
_s(LiveStats, "+/j/n6az0y4SHoGbvJdSjahtuLA=", false, function() {
    return [
        _store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore,
        _store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore,
        _store_useGameStore__WEBPACK_IMPORTED_MODULE_3__.useGameStore
    ];
});
_c = LiveStats;
LiveStats.__docgenInfo = {
    "description": "",
    "methods": [],
    "displayName": "LiveStats"
};
var _c;
__webpack_require__.$Refresh$.register(_c, "LiveStats");


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/lib/utils.ts":
/*!**************************!*\
  !*** ./src/lib/utils.ts ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   cn: () => (/* binding */ cn)
/* harmony export */ });
/* harmony import */ var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/react-refresh/runtime.js */ "../../node_modules/react-refresh/runtime.js");
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! clsx */ "../../node_modules/clsx/dist/clsx.mjs");
/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind-merge */ "../../node_modules/tailwind-merge/dist/bundle-mjs.mjs");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");

__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));



function cn(...inputs) {
    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_1__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_2__.clsx)(inputs));
}


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/stories/components/game/LiveStats.stories.tsx":
/*!***********************************************************!*\
  !*** ./src/stories/components/game/LiveStats.stories.tsx ***!
  \***********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DarkMode: () => (/* binding */ DarkMode),
/* harmony export */   ExceptionalPerformance: () => (/* binding */ ExceptionalPerformance),
/* harmony export */   Finished: () => (/* binding */ Finished),
/* harmony export */   JustStarted: () => (/* binding */ JustStarted),
/* harmony export */   MobileView: () => (/* binding */ MobileView),
/* harmony export */   NordTheme: () => (/* binding */ NordTheme),
/* harmony export */   NotRunning: () => (/* binding */ NotRunning),
/* harmony export */   PerfectAccuracy: () => (/* binding */ PerfectAccuracy),
/* harmony export */   PoorAccuracy: () => (/* binding */ PoorAccuracy),
/* harmony export */   RunningHighStats: () => (/* binding */ RunningHighStats),
/* harmony export */   RunningLowStats: () => (/* binding */ RunningLowStats),
/* harmony export */   RunningMediumStats: () => (/* binding */ RunningMediumStats),
/* harmony export */   WordsMode: () => (/* binding */ WordsMode),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/react-refresh/runtime.js */ "../../node_modules/react-refresh/runtime.js");
/* harmony import */ var _components_game_LiveStats__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/game/LiveStats */ "./src/components/game/LiveStats.tsx");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "../../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");

__webpack_require__.$Refresh$.runtime = /*#__PURE__*/ (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_home_juhnk_repos_type_node_modules_react_refresh_runtime_js__WEBPACK_IMPORTED_MODULE_0__, 2)));


const meta = {
  title: 'Components/Game/LiveStats',
  component: _components_game_LiveStats__WEBPACK_IMPORTED_MODULE_1__.LiveStats,
  parameters: {
    layout: 'centered',
    docs: {
      description: {
        component: 'Displays live statistics during typing sessions including WPM, accuracy, and elapsed time.'
      }
    }
  },
  tags: ['game', 'stats', 'autodocs']
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
// Hidden when not running
const NotRunning = {
  parameters: {
    mockStore: {
      game: {
        gameStatus: 'ready',
        stats: {
          wpm: 0,
          accuracy: 100,
          elapsedTime: 0
        }
      }
    },
    docs: {
      description: {
        story: 'Component is hidden when game is not running'
      }
    }
  }
};
// Running with low stats
const RunningLowStats = {
  parameters: {
    mockStore: {
      game: {
        gameStatus: 'running',
        stats: {
          wpm: 35,
          rawWpm: 38,
          accuracy: 85.5,
          correctChars: 42,
          incorrectChars: 8,
          totalChars: 50,
          elapsedTime: 15000
        },
        testConfig: {
          mode: 'time',
          duration: 60
        }
      }
    },
    docs: {
      description: {
        story: 'Running game with below-average performance'
      }
    }
  }
};
// Running with medium stats
const RunningMediumStats = {
  parameters: {
    mockStore: {
      game: {
        gameStatus: 'running',
        stats: {
          wpm: 52,
          rawWpm: 55,
          accuracy: 92.3,
          correctChars: 120,
          incorrectChars: 10,
          totalChars: 130,
          elapsedTime: 30000
        },
        testConfig: {
          mode: 'time',
          duration: 60
        }
      }
    },
    docs: {
      description: {
        story: 'Running game with average performance'
      }
    }
  }
};
// Running with high stats
const RunningHighStats = {
  parameters: {
    mockStore: {
      game: {
        gameStatus: 'running',
        stats: {
          wpm: 85,
          rawWpm: 88,
          accuracy: 98.5,
          correctChars: 250,
          incorrectChars: 4,
          totalChars: 254,
          elapsedTime: 45000
        },
        testConfig: {
          mode: 'time',
          duration: 60
        }
      }
    },
    docs: {
      description: {
        story: 'Running game with excellent performance'
      }
    }
  }
};
// Exceptional performance
const ExceptionalPerformance = {
  parameters: {
    mockStore: {
      game: {
        gameStatus: 'running',
        stats: {
          wpm: 120,
          rawWpm: 125,
          accuracy: 99.8,
          correctChars: 500,
          incorrectChars: 1,
          totalChars: 501,
          elapsedTime: 60000
        },
        testConfig: {
          mode: 'time',
          duration: 120
        }
      }
    },
    docs: {
      description: {
        story: 'Professional-level typing performance'
      }
    }
  }
};
// Words mode
const WordsMode = {
  parameters: {
    mockStore: {
      game: {
        gameStatus: 'running',
        stats: {
          wpm: 65,
          rawWpm: 68,
          accuracy: 95.5,
          correctChars: 150,
          incorrectChars: 7,
          totalChars: 157,
          elapsedTime: 25000
        },
        testConfig: {
          mode: 'words',
          wordCount: 50
        }
      }
    },
    docs: {
      description: {
        story: 'Words mode shows elapsed time instead of remaining time'
      }
    }
  }
};
// Just started
const JustStarted = {
  parameters: {
    mockStore: {
      game: {
        gameStatus: 'running',
        stats: {
          wpm: 0,
          rawWpm: 0,
          accuracy: 100,
          correctChars: 3,
          incorrectChars: 0,
          totalChars: 3,
          elapsedTime: 1000
        },
        testConfig: {
          mode: 'time',
          duration: 60
        }
      }
    },
    docs: {
      description: {
        story: 'Game just started with minimal stats'
      }
    }
  }
};
// Finished state
const Finished = {
  parameters: {
    mockStore: {
      game: {
        gameStatus: 'finished',
        stats: {
          wpm: 72,
          rawWpm: 75,
          accuracy: 96.8,
          correctChars: 360,
          incorrectChars: 12,
          totalChars: 372,
          elapsedTime: 60000,
          duration: 60000
        },
        testConfig: {
          mode: 'time',
          duration: 60
        }
      }
    },
    docs: {
      description: {
        story: 'Shows final stats when test is completed'
      }
    }
  }
};
// Perfect accuracy
const PerfectAccuracy = {
  parameters: {
    mockStore: {
      game: {
        gameStatus: 'running',
        stats: {
          wpm: 60,
          rawWpm: 60,
          accuracy: 100,
          correctChars: 100,
          incorrectChars: 0,
          totalChars: 100,
          elapsedTime: 20000
        },
        testConfig: {
          mode: 'time',
          duration: 60
        }
      }
    },
    docs: {
      description: {
        story: 'Perfect 100% accuracy with green highlighting'
      }
    }
  }
};
// Poor accuracy
const PoorAccuracy = {
  parameters: {
    mockStore: {
      game: {
        gameStatus: 'running',
        stats: {
          wpm: 45,
          rawWpm: 60,
          accuracy: 75.0,
          correctChars: 75,
          incorrectChars: 25,
          totalChars: 100,
          elapsedTime: 20000
        },
        testConfig: {
          mode: 'time',
          duration: 60
        }
      }
    },
    docs: {
      description: {
        story: 'Poor accuracy highlighted in red'
      }
    }
  }
};
// Dark mode
const DarkMode = {
  parameters: {
    mockStore: {
      game: {
        gameStatus: 'running',
        stats: {
          wpm: 65,
          rawWpm: 68,
          accuracy: 94.5,
          correctChars: 150,
          incorrectChars: 8,
          totalChars: 158,
          elapsedTime: 30000
        },
        testConfig: {
          mode: 'time',
          duration: 60
        }
      }
    }
  },
  globals: {
    colorScheme: 'dark'
  }
};
// Different themes
const NordTheme = {
  parameters: {
    mockStore: {
      game: {
        gameStatus: 'running',
        stats: {
          wpm: 70,
          rawWpm: 73,
          accuracy: 96.0,
          correctChars: 200,
          incorrectChars: 8,
          totalChars: 208,
          elapsedTime: 35000
        },
        testConfig: {
          mode: 'time',
          duration: 60
        }
      }
    }
  },
  globals: {
    theme: 'nord'
  }
};
// Mobile view
const MobileView = {
  parameters: {
    mockStore: {
      game: {
        gameStatus: 'running',
        stats: {
          wpm: 55,
          rawWpm: 58,
          accuracy: 93.5,
          correctChars: 120,
          incorrectChars: 8,
          totalChars: 128,
          elapsedTime: 25000
        },
        testConfig: {
          mode: 'time',
          duration: 60
        }
      }
    },
    viewport: {
      defaultViewport: 'mobile'
    },
    docs: {
      description: {
        story: 'Responsive design for mobile devices'
      }
    }
  }
};
;
const __namedExportsOrder = ["NotRunning", "RunningLowStats", "RunningMediumStats", "RunningHighStats", "ExceptionalPerformance", "WordsMode", "JustStarted", "Finished", "PerfectAccuracy", "PoorAccuracy", "DarkMode", "NordTheme", "MobileView"];
NotRunning.parameters = {
  ...NotRunning.parameters,
  docs: {
    ...NotRunning.parameters?.docs,
    source: {
      originalSource: "{\n  parameters: {\n    mockStore: {\n      game: {\n        gameStatus: 'ready',\n        stats: {\n          wpm: 0,\n          accuracy: 100,\n          elapsedTime: 0\n        }\n      }\n    },\n    docs: {\n      description: {\n        story: 'Component is hidden when game is not running'\n      }\n    }\n  }\n}",
      ...NotRunning.parameters?.docs?.source
    }
  }
};
RunningLowStats.parameters = {
  ...RunningLowStats.parameters,
  docs: {
    ...RunningLowStats.parameters?.docs,
    source: {
      originalSource: "{\n  parameters: {\n    mockStore: {\n      game: {\n        gameStatus: 'running',\n        stats: {\n          wpm: 35,\n          rawWpm: 38,\n          accuracy: 85.5,\n          correctChars: 42,\n          incorrectChars: 8,\n          totalChars: 50,\n          elapsedTime: 15000\n        },\n        testConfig: {\n          mode: 'time',\n          duration: 60\n        }\n      }\n    },\n    docs: {\n      description: {\n        story: 'Running game with below-average performance'\n      }\n    }\n  }\n}",
      ...RunningLowStats.parameters?.docs?.source
    }
  }
};
RunningMediumStats.parameters = {
  ...RunningMediumStats.parameters,
  docs: {
    ...RunningMediumStats.parameters?.docs,
    source: {
      originalSource: "{\n  parameters: {\n    mockStore: {\n      game: {\n        gameStatus: 'running',\n        stats: {\n          wpm: 52,\n          rawWpm: 55,\n          accuracy: 92.3,\n          correctChars: 120,\n          incorrectChars: 10,\n          totalChars: 130,\n          elapsedTime: 30000\n        },\n        testConfig: {\n          mode: 'time',\n          duration: 60\n        }\n      }\n    },\n    docs: {\n      description: {\n        story: 'Running game with average performance'\n      }\n    }\n  }\n}",
      ...RunningMediumStats.parameters?.docs?.source
    }
  }
};
RunningHighStats.parameters = {
  ...RunningHighStats.parameters,
  docs: {
    ...RunningHighStats.parameters?.docs,
    source: {
      originalSource: "{\n  parameters: {\n    mockStore: {\n      game: {\n        gameStatus: 'running',\n        stats: {\n          wpm: 85,\n          rawWpm: 88,\n          accuracy: 98.5,\n          correctChars: 250,\n          incorrectChars: 4,\n          totalChars: 254,\n          elapsedTime: 45000\n        },\n        testConfig: {\n          mode: 'time',\n          duration: 60\n        }\n      }\n    },\n    docs: {\n      description: {\n        story: 'Running game with excellent performance'\n      }\n    }\n  }\n}",
      ...RunningHighStats.parameters?.docs?.source
    }
  }
};
ExceptionalPerformance.parameters = {
  ...ExceptionalPerformance.parameters,
  docs: {
    ...ExceptionalPerformance.parameters?.docs,
    source: {
      originalSource: "{\n  parameters: {\n    mockStore: {\n      game: {\n        gameStatus: 'running',\n        stats: {\n          wpm: 120,\n          rawWpm: 125,\n          accuracy: 99.8,\n          correctChars: 500,\n          incorrectChars: 1,\n          totalChars: 501,\n          elapsedTime: 60000\n        },\n        testConfig: {\n          mode: 'time',\n          duration: 120\n        }\n      }\n    },\n    docs: {\n      description: {\n        story: 'Professional-level typing performance'\n      }\n    }\n  }\n}",
      ...ExceptionalPerformance.parameters?.docs?.source
    }
  }
};
WordsMode.parameters = {
  ...WordsMode.parameters,
  docs: {
    ...WordsMode.parameters?.docs,
    source: {
      originalSource: "{\n  parameters: {\n    mockStore: {\n      game: {\n        gameStatus: 'running',\n        stats: {\n          wpm: 65,\n          rawWpm: 68,\n          accuracy: 95.5,\n          correctChars: 150,\n          incorrectChars: 7,\n          totalChars: 157,\n          elapsedTime: 25000\n        },\n        testConfig: {\n          mode: 'words',\n          wordCount: 50\n        }\n      }\n    },\n    docs: {\n      description: {\n        story: 'Words mode shows elapsed time instead of remaining time'\n      }\n    }\n  }\n}",
      ...WordsMode.parameters?.docs?.source
    }
  }
};
JustStarted.parameters = {
  ...JustStarted.parameters,
  docs: {
    ...JustStarted.parameters?.docs,
    source: {
      originalSource: "{\n  parameters: {\n    mockStore: {\n      game: {\n        gameStatus: 'running',\n        stats: {\n          wpm: 0,\n          rawWpm: 0,\n          accuracy: 100,\n          correctChars: 3,\n          incorrectChars: 0,\n          totalChars: 3,\n          elapsedTime: 1000\n        },\n        testConfig: {\n          mode: 'time',\n          duration: 60\n        }\n      }\n    },\n    docs: {\n      description: {\n        story: 'Game just started with minimal stats'\n      }\n    }\n  }\n}",
      ...JustStarted.parameters?.docs?.source
    }
  }
};
Finished.parameters = {
  ...Finished.parameters,
  docs: {
    ...Finished.parameters?.docs,
    source: {
      originalSource: "{\n  parameters: {\n    mockStore: {\n      game: {\n        gameStatus: 'finished',\n        stats: {\n          wpm: 72,\n          rawWpm: 75,\n          accuracy: 96.8,\n          correctChars: 360,\n          incorrectChars: 12,\n          totalChars: 372,\n          elapsedTime: 60000,\n          duration: 60000\n        },\n        testConfig: {\n          mode: 'time',\n          duration: 60\n        }\n      }\n    },\n    docs: {\n      description: {\n        story: 'Shows final stats when test is completed'\n      }\n    }\n  }\n}",
      ...Finished.parameters?.docs?.source
    }
  }
};
PerfectAccuracy.parameters = {
  ...PerfectAccuracy.parameters,
  docs: {
    ...PerfectAccuracy.parameters?.docs,
    source: {
      originalSource: "{\n  parameters: {\n    mockStore: {\n      game: {\n        gameStatus: 'running',\n        stats: {\n          wpm: 60,\n          rawWpm: 60,\n          accuracy: 100,\n          correctChars: 100,\n          incorrectChars: 0,\n          totalChars: 100,\n          elapsedTime: 20000\n        },\n        testConfig: {\n          mode: 'time',\n          duration: 60\n        }\n      }\n    },\n    docs: {\n      description: {\n        story: 'Perfect 100% accuracy with green highlighting'\n      }\n    }\n  }\n}",
      ...PerfectAccuracy.parameters?.docs?.source
    }
  }
};
PoorAccuracy.parameters = {
  ...PoorAccuracy.parameters,
  docs: {
    ...PoorAccuracy.parameters?.docs,
    source: {
      originalSource: "{\n  parameters: {\n    mockStore: {\n      game: {\n        gameStatus: 'running',\n        stats: {\n          wpm: 45,\n          rawWpm: 60,\n          accuracy: 75.0,\n          correctChars: 75,\n          incorrectChars: 25,\n          totalChars: 100,\n          elapsedTime: 20000\n        },\n        testConfig: {\n          mode: 'time',\n          duration: 60\n        }\n      }\n    },\n    docs: {\n      description: {\n        story: 'Poor accuracy highlighted in red'\n      }\n    }\n  }\n}",
      ...PoorAccuracy.parameters?.docs?.source
    }
  }
};
DarkMode.parameters = {
  ...DarkMode.parameters,
  docs: {
    ...DarkMode.parameters?.docs,
    source: {
      originalSource: "{\n  parameters: {\n    mockStore: {\n      game: {\n        gameStatus: 'running',\n        stats: {\n          wpm: 65,\n          rawWpm: 68,\n          accuracy: 94.5,\n          correctChars: 150,\n          incorrectChars: 8,\n          totalChars: 158,\n          elapsedTime: 30000\n        },\n        testConfig: {\n          mode: 'time',\n          duration: 60\n        }\n      }\n    }\n  },\n  globals: {\n    colorScheme: 'dark'\n  }\n}",
      ...DarkMode.parameters?.docs?.source
    }
  }
};
NordTheme.parameters = {
  ...NordTheme.parameters,
  docs: {
    ...NordTheme.parameters?.docs,
    source: {
      originalSource: "{\n  parameters: {\n    mockStore: {\n      game: {\n        gameStatus: 'running',\n        stats: {\n          wpm: 70,\n          rawWpm: 73,\n          accuracy: 96.0,\n          correctChars: 200,\n          incorrectChars: 8,\n          totalChars: 208,\n          elapsedTime: 35000\n        },\n        testConfig: {\n          mode: 'time',\n          duration: 60\n        }\n      }\n    }\n  },\n  globals: {\n    theme: 'nord'\n  }\n}",
      ...NordTheme.parameters?.docs?.source
    }
  }
};
MobileView.parameters = {
  ...MobileView.parameters,
  docs: {
    ...MobileView.parameters?.docs,
    source: {
      originalSource: "{\n  parameters: {\n    mockStore: {\n      game: {\n        gameStatus: 'running',\n        stats: {\n          wpm: 55,\n          rawWpm: 58,\n          accuracy: 93.5,\n          correctChars: 120,\n          incorrectChars: 8,\n          totalChars: 128,\n          elapsedTime: 25000\n        },\n        testConfig: {\n          mode: 'time',\n          duration: 60\n        }\n      }\n    },\n    viewport: {\n      defaultViewport: 'mobile'\n    },\n    docs: {\n      description: {\n        story: 'Responsive design for mobile devices'\n      }\n    }\n  }\n}",
      ...MobileView.parameters?.docs?.source
    }
  }
};

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

}]);
//# sourceMappingURL=stories-components-game-LiveStats-stories.iframe.bundle.js.map