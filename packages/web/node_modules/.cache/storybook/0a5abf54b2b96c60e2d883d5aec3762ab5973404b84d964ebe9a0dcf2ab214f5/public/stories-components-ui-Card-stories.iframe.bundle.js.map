{"version":3,"file":"stories-components-ui-Card-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;;;;;;AAGA;AAhBA;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AAQA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;AAIA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AAAA;;;;;AACA;AAAA;;;;;;;;;;AAEA;AACA;AAAA;;;;;;;;;;;;;;;;AAIA;AAEA;AACA;AACA;AAEA;AACA;AAAA;;;;;AACA;AAAA;;;;;;;;;;AAEA;AACA;AAAA;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AAAA;;;;;AACA;AAAA;;;;;;;;;;;;;;;;AAIA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;;;;;AACA;AAAA;;;;;;;;;;AAEA;AACA;AAAA;AAAA;;;;;AACA;AAAA;AACA;AAAA;;;;;AAAA;;;;;;;;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;;;;;;;;;;AAEA;AAAA;;;;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;AAIA;AAAA;AACA;AAAA;AAAA;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;;;;;AAAA;;;;;AAGA;AAAA;;;;;;;;;;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;;;;;AAGA;AAAA;AAAA;AAAA;;;;;AAGA;AAAA;AAAA;AAAA;;;;;AAGA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;;;;;AACA;AAAA;;;;;;;;;;AAEA;AACA;AAAA;;;;;;;;;;;;;;;;AAIA;AACA;AACA;AACA","sources":["webpack://type/../../node_modules/lucide-react/dist/esm/icons/activity.js","webpack://type/../../node_modules/lucide-react/dist/esm/icons/clock.js","webpack://type/../../node_modules/lucide-react/dist/esm/icons/trending-up.js","webpack://type/./src/components/ui/badge.tsx","webpack://type/./src/stories/components/ui/Card.stories.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M22 12h-2.48a2 2 0 0 0-1.93 1.46l-2.35 8.36a.25.25 0 0 1-.48 0L9.24 2.18a.25.25 0 0 0-.48 0l-2.35 8.36A2 2 0 0 1 4.49 12H2\",\n      key: \"169zse\"\n    }\n  ]\n];\nconst Activity = createLucideIcon(\"activity\", __iconNode);\n\nexport { __iconNode, Activity as default };\n//# sourceMappingURL=activity.js.map\n","/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 6v6l4 2\", key: \"mmk7yg\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }]\n];\nconst Clock = createLucideIcon(\"clock\", __iconNode);\n\nexport { __iconNode, Clock as default };\n//# sourceMappingURL=clock.js.map\n","/**\n * @license lucide-react v0.525.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M16 7h6v6\", key: \"box55l\" }],\n  [\"path\", { d: \"m22 7-8.5 8.5-5-5L2 17\", key: \"1t1m79\" }]\n];\nconst TrendingUp = createLucideIcon(\"trending-up\", __iconNode);\n\nexport { __iconNode, TrendingUp as default };\n//# sourceMappingURL=trending-up.js.map\n","import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst badgeVariants = cva(\n  'inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden',\n  {\n    variants: {\n      variant: {\n        default:\n          'border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90',\n        secondary:\n          'border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90',\n        destructive:\n          'border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60',\n        outline:\n          'text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  }\n);\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<'span'> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : 'span';\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\nexport { Badge, badgeVariants };\n","import type { Meta, StoryObj } from '@storybook/react';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Activity, Clock, Target, TrendingUp } from 'lucide-react';\n\nconst meta = {\n  title: 'Components/UI/Card',\n  component: Card,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component:\n          'A card component with header, content, and footer sections.',\n      },\n    },\n  },\n  tags: ['ui', 'layout', 'autodocs'],\n  decorators: [\n    (Story) => (\n      <div className=\"w-[400px]\">\n        <Story />\n      </div>\n    ),\n  ],\n} satisfies Meta<typeof Card>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\n// Basic card\nexport const Default: Story = {\n  render: () => (\n    <Card>\n      <CardHeader>\n        <CardTitle>Card Title</CardTitle>\n        <CardDescription>Card description goes here</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <p>Card content can contain any React components or HTML elements.</p>\n      </CardContent>\n    </Card>\n  ),\n};\n\n// Card with footer\nexport const WithFooter: Story = {\n  render: () => (\n    <Card>\n      <CardHeader>\n        <CardTitle>Account Settings</CardTitle>\n        <CardDescription>Manage your account preferences</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <p>Update your profile information and preferences here.</p>\n      </CardContent>\n      <CardFooter className=\"flex justify-between\">\n        <Button variant=\"outline\">Cancel</Button>\n        <Button>Save Changes</Button>\n      </CardFooter>\n    </Card>\n  ),\n};\n\n// Stats card example\nexport const StatsCard: Story = {\n  render: () => (\n    <Card>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium\">Average WPM</CardTitle>\n        <Activity className=\"text-muted-foreground h-4 w-4\" />\n      </CardHeader>\n      <CardContent>\n        <div className=\"text-2xl font-bold\">72.4</div>\n        <p className=\"text-muted-foreground text-xs\">\n          <TrendingUp className=\"inline h-3 w-3 text-green-500\" /> +12% from\n          last week\n        </p>\n      </CardContent>\n    </Card>\n  ),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Example of a statistics card used in the TypeAmp dashboard',\n      },\n    },\n  },\n};\n\n// Game result card\nexport const GameResultCard: Story = {\n  render: () => (\n    <Card className=\"w-full\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center justify-between\">\n          Test Complete!\n          <Badge variant=\"default\">New Record!</Badge>\n        </CardTitle>\n        <CardDescription>\n          Great job! You've improved your speed.\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"space-y-1\">\n            <p className=\"text-muted-foreground text-sm\">Speed</p>\n            <p className=\"text-2xl font-bold\">85 WPM</p>\n          </div>\n          <div className=\"space-y-1\">\n            <p className=\"text-muted-foreground text-sm\">Accuracy</p>\n            <p className=\"text-2xl font-bold\">97.5%</p>\n          </div>\n          <div className=\"space-y-1\">\n            <p className=\"text-muted-foreground text-sm\">Time</p>\n            <p className=\"text-2xl font-bold\">1:00</p>\n          </div>\n          <div className=\"space-y-1\">\n            <p className=\"text-muted-foreground text-sm\">Characters</p>\n            <p className=\"text-2xl font-bold\">425</p>\n          </div>\n        </div>\n      </CardContent>\n      <CardFooter className=\"flex gap-2\">\n        <Button className=\"flex-1\">Try Again</Button>\n        <Button variant=\"outline\" className=\"flex-1\">\n          Share Results\n        </Button>\n      </CardFooter>\n    </Card>\n  ),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Game result card showing typing test statistics',\n      },\n    },\n  },\n};\n\n// Settings card\nexport const SettingsCard: Story = {\n  render: () => (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Clock className=\"h-5 w-5\" />\n          Test Duration\n        </CardTitle>\n        <CardDescription>\n          Choose how long you want your typing test to last\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-2 gap-2\">\n          <Button variant=\"outline\" size=\"sm\">\n            15s\n          </Button>\n          <Button variant=\"outline\" size=\"sm\">\n            30s\n          </Button>\n          <Button variant=\"default\" size=\"sm\">\n            60s\n          </Button>\n          <Button variant=\"outline\" size=\"sm\">\n            120s\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  ),\n  parameters: {\n    docs: {\n      description: {\n        story: 'Settings card for configuring typing test options',\n      },\n    },\n  },\n};\n\n// Dark mode card\nexport const DarkMode: Story = {\n  render: () => (\n    <Card>\n      <CardHeader>\n        <CardTitle>Dark Mode Card</CardTitle>\n        <CardDescription>This card is displayed in dark mode</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <p>Cards automatically adapt to the current theme.</p>\n      </CardContent>\n    </Card>\n  ),\n  globals: {\n    theme: 'dark',\n  },\n};\n"],"names":[],"sourceRoot":""}